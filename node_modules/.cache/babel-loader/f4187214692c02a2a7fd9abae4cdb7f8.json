{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/cancel-edit-order/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { get, pick } from 'lodash';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { InsaButton } from '../../../../../components';\nimport { EDeliveryServiceIds } from '../../../../../models';\nimport { useOrderNew } from '../../state/context';\nimport { EShipTypes } from '../../state/interface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CancelEditOrder = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    initOrderState,\n    order\n  } = useOrderNew();\n\n  const cancelEditOrder = () => {\n    if (order) {\n      const products = (order.products || []).map(product => ({ ...product.productId,\n        price: product.price,\n        count: product.count\n      }));\n      const infoDelivery = pick(order.customer, ['name', 'phoneNo', 'address', 'ward', 'wardName', 'district', 'districtName', 'province', 'provinceName']);\n      const orderServiceId = get(order, 'deliveryOptions.serviceId');\n      const shipType = orderServiceId in EDeliveryServiceIds ? EShipTypes.SendShipping : EShipTypes.SelfTransport;\n      const shipmentFee = get(order, 'deliveryOptions.shipmentFee');\n      const shipmentFeeForCustomer = get(order, 'deliveryOptions.shipmentFeeForCustomer');\n      const discountBy = get(order, 'deliveryOptions.discountBy');\n      const discount = get(order, 'deliveryOptions.discount');\n      const noteForDelivery = get(order, 'deliveryOptions.noteForDelivery');\n      const customerNote = get(order, 'deliveryOptions.customerNote');\n      const source = get(order, 'source');\n      const initialState = {\n        products,\n        customer: order.customer,\n        infoDelivery,\n        shipType,\n        warehouseId: get(order, 'warehouseId._id'),\n        shipmentFee,\n        shipmentFeeForCustomer,\n        discountBy,\n        discount,\n        noteForDelivery,\n        customerNote,\n        ship: undefined,\n        source,\n        isEdit: false // paymentType: get(order, 'paymentType'), // TODO check api support\n\n      };\n      initOrderState(initialState);\n      history.push(`/orders/order/${order._id}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InsaButton, {\n    style: {\n      minWidth: 100\n    },\n    onClick: cancelEditOrder,\n    children: \"H\\u1EE7y\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CancelEditOrder, \"c2JrvVnuqRqUjLmHJZ7od7LlMH0=\", false, function () {\n  return [useHistory, useOrderNew];\n});\n\n_c = CancelEditOrder;\nexport default CancelEditOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"CancelEditOrder\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/cancel-edit-order/index.tsx"],"names":["get","pick","React","useHistory","InsaButton","EDeliveryServiceIds","useOrderNew","EShipTypes","CancelEditOrder","history","initOrderState","order","cancelEditOrder","products","map","product","productId","price","count","infoDelivery","customer","orderServiceId","shipType","SendShipping","SelfTransport","shipmentFee","shipmentFeeForCustomer","discountBy","discount","noteForDelivery","customerNote","source","initialState","warehouseId","ship","undefined","isEdit","push","_id","minWidth"],"mappings":"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","sourcesContent":["import { get, pick } from 'lodash';\nimport React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { InsaButton } from '../../../../../components';\nimport { EDeliveryServiceIds } from '../../../../../models';\nimport { useOrderNew } from '../../state/context';\nimport { EShipTypes } from '../../state/interface';\n\ninterface Props {}\n\nconst CancelEditOrder: FC<Props> = () => {\n    const history = useHistory();\n    const { initOrderState, order } = useOrderNew();\n\n    const cancelEditOrder = () => {\n        if (order) {\n            const products = (order.products || []).map((product: any) => ({\n                ...product.productId,\n                price: product.price,\n                count: product.count,\n            }));\n\n            const infoDelivery = pick(order.customer, [\n                'name',\n                'phoneNo',\n                'address',\n                'ward',\n                'wardName',\n                'district',\n                'districtName',\n                'province',\n                'provinceName',\n            ]);\n\n            const orderServiceId = get(order, 'deliveryOptions.serviceId');\n\n            const shipType =\n                orderServiceId in EDeliveryServiceIds\n                    ? EShipTypes.SendShipping\n                    : EShipTypes.SelfTransport;\n\n            const shipmentFee = get(order, 'deliveryOptions.shipmentFee');\n            const shipmentFeeForCustomer = get(order, 'deliveryOptions.shipmentFeeForCustomer');\n\n            const discountBy = get(order, 'deliveryOptions.discountBy');\n            const discount = get(order, 'deliveryOptions.discount');\n            const noteForDelivery = get(order, 'deliveryOptions.noteForDelivery');\n            const customerNote = get(order, 'deliveryOptions.customerNote');\n            const source = get(order, 'source');\n\n            const initialState = {\n                products,\n                customer: order.customer,\n                infoDelivery,\n                shipType,\n                warehouseId: get(order, 'warehouseId._id'),\n                shipmentFee,\n                shipmentFeeForCustomer,\n                discountBy,\n                discount,\n                noteForDelivery,\n                customerNote,\n                ship: undefined,\n                source,\n                isEdit: false,\n                // paymentType: get(order, 'paymentType'), // TODO check api support\n            };\n\n            initOrderState(initialState);\n            history.push(`/orders/order/${order._id}`);\n        }\n    };\n\n    return (\n        <InsaButton style={{ minWidth: 100 }} onClick={cancelEditOrder}>\n            Há»§y\n        </InsaButton>\n    );\n};\n\nexport default CancelEditOrder;\n"]},"metadata":{},"sourceType":"module"}