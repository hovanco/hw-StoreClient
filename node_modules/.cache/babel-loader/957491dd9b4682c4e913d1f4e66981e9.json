{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/product-variant/edit-attributes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { mongoObjectId } from '../../../../helper';\nimport { storeAction } from '../../../../reducers/storeState/action';\nimport { Modal, Card, Row, Col, Space, message } from 'antd';\nimport AttributeItem from './attribute-item';\nimport { InsaButton, Loading } from '../../../../components';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport iconActionsAddSimple from \"../../../../assets/images/ic-actions-add-simple.svg\";\nimport { omit, differenceBy } from 'lodash';\nimport useAttributes from '../../context/use-attribute';\nimport useVariants from '../../context/use-variant';\nimport productApi from '../../../../api/product-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TAG_COLOR_CLASSNAME = ['background_purple', 'background_primary', 'background_gray'];\n\nconst EditAttributes = ({\n  form\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const params = useParams();\n  const dispatch = useDispatch();\n  const {\n    data: storeObj\n  } = useSelector(state => state.store);\n  const attributeOptions = useSelector(state => state.store.attributes.data);\n  const {\n    attributes,\n    setAttributes,\n    removeAttributesInEditMode,\n    isLocalAttributeSign\n  } = useAttributes();\n  const {\n    setVariants\n  } = useVariants();\n  const [optionData, setOptionData] = useState(attributeOptions);\n  const [localAttributes, setLocalAttributes] = useState(attributes);\n  useEffect(() => {\n    setLocalAttributes(attributes);\n  }, [attributes]);\n  useEffect(() => {\n    if (attributeOptions.length && localAttributes.length) {\n      let newOptionData = attributeOptions.filter(attribute => localAttributes.map(i => i._id).indexOf(attribute._id) === -1);\n      newOptionData = newOptionData.map(item => ({ ...item,\n        [isLocalAttributeSign]: true\n      }));\n      setOptionData(newOptionData);\n    } else {\n      setOptionData(attributeOptions);\n    } // eslint-disable-next-line\n\n  }, [attributeOptions, localAttributes]);\n\n  const addNewLocalAttribute = () => {\n    let newLocalAttribute = optionData[0] ? {\n      _id: optionData[0]._id,\n      name: optionData[0].name,\n      tags: [],\n      [isLocalAttributeSign]: true\n    } : {\n      _id: mongoObjectId(),\n      name: '',\n      tags: [],\n      [isLocalAttributeSign]: true\n    };\n    setLocalAttributes([...localAttributes, newLocalAttribute]);\n  };\n\n  const updateLocalAttributeTag = (newLocalAttribute, attrIndex) => {\n    let newLocalAttributes = localAttributes.map((attribute, index) => {\n      if (attrIndex === index) return newLocalAttribute;\n      return attribute;\n    });\n    setLocalAttributes(newLocalAttributes);\n  };\n\n  const removeLocalAttribute = removedAttributeId => {\n    let newLocalAttributes = localAttributes.filter(attribute => attribute._id !== removedAttributeId);\n    setLocalAttributes(newLocalAttributes);\n  };\n\n  const handleUpdateChange = async () => {\n    try {\n      setLoading(true);\n      let localAttributesIgnoredEmpty = localAttributes.filter(i => i.tags.length);\n\n      if (localAttributesIgnoredEmpty.length >= attributes.length) {\n        let apiList = [];\n        let replacedAttribute = [];\n        let newAttributeWithNewOption = [];\n        let newAttributes = [];\n        localAttributesIgnoredEmpty.forEach((item, idx) => {\n          if (!item[isLocalAttributeSign] && item._id !== attributes[idx]._id) {\n            replacedAttribute.push({\n              oldId: attributes[idx]._id,\n              newId: item._id,\n              newName: item.name\n            });\n\n            if (attributeOptions.map(i => i._id).indexOf(item._id) === -1) {\n              newAttributeWithNewOption.push({ ...omit(item, [isLocalAttributeSign])\n              });\n            }\n          }\n\n          if (item[isLocalAttributeSign]) {\n            newAttributes.push({ ...omit(item, [isLocalAttributeSign])\n            });\n\n            if (attributeOptions.map(i => i._id).indexOf(item._id) === -1) {\n              newAttributeWithNewOption.push({ ...omit(item, [isLocalAttributeSign])\n              });\n            }\n          }\n        });\n        if (replacedAttribute.length > 0) apiList.push({\n          api: productApi.replaceAttributeByNewOne,\n          data: replacedAttribute\n        });\n        if (newAttributes.length > 0) apiList.push({\n          api: productApi.addAttributeProductVariants,\n          data: newAttributes\n        });\n\n        if (storeObj._id && params.productId) {\n          if (newAttributeWithNewOption.length) {\n            await Promise.all(newAttributeWithNewOption.map(attributeWithNewOption => {\n              return productApi.createAttribute(storeObj._id, attributeWithNewOption);\n            }));\n            dispatch(storeAction.getAttributes(storeObj._id));\n          }\n\n          await Promise.all(apiList.map(item => {\n            return item.api(storeObj._id, params.productId, item.data);\n          })).then(async () => {\n            const product = await productApi.getProduct({\n              storeId: storeObj._id,\n              productId: params.productId\n            });\n            form.setFieldsValue(product);\n            product.attributes && setAttributes(product.attributes);\n            product.variants && setVariants(product.variants);\n            message.success('Cập nhật sản phẩm thành công');\n            setVisible(false);\n          }).catch(() => {\n            message.error('Cập nhật sản phẩm thất bại');\n          });\n        } else {\n          message.error('Cập nhật sản phẩm thất bại');\n        }\n      } else {\n        let removedAttributeId = differenceBy(attributes, localAttributes, '_id').map(item => item._id);\n        removeAttributesInEditMode(removedAttributeId);\n      }\n    } catch (error) {\n      message.error('Cập nhật sản phẩm thất bại');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setVisible(false);\n    setLocalAttributes(attributes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setVisible(true),\n      children: \"Ch\\u1EC9nh s\\u1EEDa thu\\u1ED9c t\\xEDnh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      footer: null,\n      onCancel: closeModal,\n      wrapClassName: \"modal-card-content\",\n      closable: false,\n      width: 613,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Ch\\u1EC9nh s\\u1EEDa thu\\u1ED9c t\\xEDnh\",\n        style: {\n          position: 'relative'\n        },\n        children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n          full: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [localAttributes.map((attribute, attrIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-attributes-item\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [22, 0],\n              style: {\n                marginTop: 12\n              },\n              children: [/*#__PURE__*/_jsxDEV(AttributeItem, {\n                attribute: attribute,\n                optionData: optionData,\n                onChange: newLocalAttribute => updateLocalAttributeTag(newLocalAttribute, attrIndex),\n                tagColor: TAG_COLOR_CLASSNAME[attrIndex]\n              }, `attribute_${attrIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this), localAttributes.length > 1 && attribute[isLocalAttributeSign] ? /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-actions\",\n                children: /*#__PURE__*/_jsxDEV(InsaButton, {\n                  icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 55\n                  }, this),\n                  danger: true,\n                  type: \"primary\",\n                  onClick: () => removeLocalAttribute(attribute._id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, `${attribute.name}_${attrIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)), localAttributes.length < 3 ? /*#__PURE__*/_jsxDEV(InsaButton, {\n            size: \"middle\",\n            onClick: addNewLocalAttribute,\n            className: \"add-new-attribute\",\n            icon: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconActionsAddSimple,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 39\n            }, this),\n            children: \"Th\\xEAm thu\\u1ED9c t\\xEDnh kh\\xE1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ant-card-footer\",\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(InsaButton, {\n                style: {\n                  width: 140\n                },\n                size: \"middle\",\n                onClick: closeModal,\n                children: \"Hu\\u1EF7\"\n              }, \"help\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InsaButton, {\n                style: {\n                  width: 140\n                },\n                size: \"middle\",\n                type: \"primary\",\n                onClick: handleUpdateChange,\n                loading: loading,\n                children: \"C\\u1EADp nh\\u1EADt\"\n              }, \"help\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditAttributes, \"ejHA/Zz1fXi+gxE7T41YFDH3BSU=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useAttributes, useVariants];\n});\n\n_c = EditAttributes;\nexport default EditAttributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAttributes\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/product-variant/edit-attributes.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","useParams","mongoObjectId","storeAction","Modal","Card","Row","Col","Space","message","AttributeItem","InsaButton","Loading","DeleteOutlined","omit","differenceBy","useAttributes","useVariants","productApi","TAG_COLOR_CLASSNAME","EditAttributes","form","visible","setVisible","loading","setLoading","params","dispatch","data","storeObj","state","store","attributeOptions","attributes","setAttributes","removeAttributesInEditMode","isLocalAttributeSign","setVariants","optionData","setOptionData","localAttributes","setLocalAttributes","length","newOptionData","filter","attribute","map","i","_id","indexOf","item","addNewLocalAttribute","newLocalAttribute","name","tags","updateLocalAttributeTag","attrIndex","newLocalAttributes","index","removeLocalAttribute","removedAttributeId","handleUpdateChange","localAttributesIgnoredEmpty","apiList","replacedAttribute","newAttributeWithNewOption","newAttributes","forEach","idx","push","oldId","newId","newName","api","replaceAttributeByNewOne","addAttributeProductVariants","productId","Promise","all","attributeWithNewOption","createAttribute","getAttributes","then","product","getProduct","storeId","setFieldsValue","variants","success","catch","error","closeModal","position","marginTop","iconActionsAddSimple","width"],"mappings":"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","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { mongoObjectId } from '../../../../helper';\nimport { storeAction } from '../../../../reducers/storeState/action';\n\nimport { Modal, Card, Row, Col, Space, message } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport { IAttribute, IProduct } from '../../../../models';\nimport AttributeItem from './attribute-item';\nimport { InsaButton, Loading } from '../../../../components';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport iconActionsAddSimple from '../../../../assets/images/ic-actions-add-simple.svg';\nimport { omit, differenceBy } from 'lodash';\nimport { IProductDetailParams, IReplacedAttributeParam } from '../../interface';\nimport useAttributes from '../../context/use-attribute';\nimport useVariants from '../../context/use-variant';\nimport { IAttributeOption } from '../../context/interface';\n\nimport productApi from '../../../../api/product-api';\nimport { IState } from '../../../../store/rootReducer';\n\ntype Props = {\n    form: FormInstance;\n};\n\nexport const TAG_COLOR_CLASSNAME = ['background_purple', 'background_primary', 'background_gray'];\n\nconst EditAttributes: FC<Props> = ({ form }) => {\n    const [visible, setVisible] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n    const params = useParams<IProductDetailParams>();\n    const dispatch = useDispatch();\n\n    const { data: storeObj } = useSelector((state: IState) => state.store);\n    const attributeOptions: IAttribute[] = useSelector(\n        (state: IState) => state.store.attributes.data\n    );\n\n    const {\n        attributes,\n        setAttributes,\n        removeAttributesInEditMode,\n        isLocalAttributeSign,\n    } = useAttributes();\n    const { setVariants } = useVariants();\n\n    const [optionData, setOptionData] = useState<IAttribute[]>(attributeOptions);\n    const [localAttributes, setLocalAttributes] = useState<IAttribute[]>(attributes);\n\n    useEffect(() => {\n        setLocalAttributes(attributes);\n    }, [attributes]);\n\n    useEffect(() => {\n        if (attributeOptions.length && localAttributes.length) {\n            let newOptionData: IAttribute[] = attributeOptions.filter(\n                (attribute: IAttribute) =>\n                    localAttributes.map((i: IAttribute) => i._id).indexOf(attribute._id) === -1\n            );\n            newOptionData = newOptionData.map((item: IAttribute) => ({\n                ...item,\n                [isLocalAttributeSign]: true,\n            }));\n\n            setOptionData(newOptionData);\n        } else {\n            setOptionData(attributeOptions);\n        }\n        // eslint-disable-next-line\n    }, [attributeOptions, localAttributes]);\n\n    const addNewLocalAttribute = () => {\n        let newLocalAttribute = optionData[0]\n            ? {\n                  _id: optionData[0]._id,\n                  name: optionData[0].name,\n                  tags: [],\n                  [isLocalAttributeSign]: true,\n              }\n            : {\n                  _id: mongoObjectId(),\n                  name: '',\n                  tags: [],\n                  [isLocalAttributeSign]: true,\n              };\n\n        setLocalAttributes([...localAttributes, newLocalAttribute]);\n    };\n\n    const updateLocalAttributeTag = (newLocalAttribute: IAttribute, attrIndex: number) => {\n        let newLocalAttributes = localAttributes.map((attribute: IAttribute, index: number) => {\n            if (attrIndex === index) return newLocalAttribute;\n\n            return attribute;\n        });\n\n        setLocalAttributes(newLocalAttributes);\n    };\n\n    const removeLocalAttribute = (removedAttributeId: string) => {\n        let newLocalAttributes = localAttributes.filter(\n            (attribute: IAttribute) => attribute._id !== removedAttributeId\n        );\n\n        setLocalAttributes(newLocalAttributes);\n    };\n\n    const handleUpdateChange = async () => {\n        try {\n            setLoading(true);\n            let localAttributesIgnoredEmpty = localAttributes.filter(\n                (i: IAttribute) => i.tags.length\n            );\n\n            if (localAttributesIgnoredEmpty.length >= attributes.length) {\n                let apiList: any[] = [];\n                let replacedAttribute: IReplacedAttributeParam[] = [];\n                let newAttributeWithNewOption: IAttribute[] = [];\n                let newAttributes: IAttribute[] = [];\n\n                localAttributesIgnoredEmpty.forEach((item: IAttributeOption, idx: number) => {\n                    if (\n                        !item[isLocalAttributeSign as keyof IAttributeOption] &&\n                        item._id !== attributes[idx]._id\n                    ) {\n                        replacedAttribute.push({\n                            oldId: attributes[idx]._id,\n                            newId: item._id,\n                            newName: item.name,\n                        });\n\n                        if (\n                            attributeOptions\n                                .map((i: IAttributeOption) => i._id)\n                                .indexOf(item._id) === -1\n                        ) {\n                            newAttributeWithNewOption.push({\n                                ...omit(item, [isLocalAttributeSign as string]),\n                            } as IAttribute);\n                        }\n                    }\n\n                    if (item[isLocalAttributeSign as keyof IAttributeOption]) {\n                        newAttributes.push({\n                            ...omit(item, [isLocalAttributeSign as string]),\n                        } as IAttribute);\n\n                        if (\n                            attributeOptions\n                                .map((i: IAttributeOption) => i._id)\n                                .indexOf(item._id) === -1\n                        ) {\n                            newAttributeWithNewOption.push({\n                                ...omit(item, [isLocalAttributeSign as string]),\n                            } as IAttribute);\n                        }\n                    }\n                });\n\n                if (replacedAttribute.length > 0)\n                    apiList.push({\n                        api: productApi.replaceAttributeByNewOne,\n                        data: replacedAttribute,\n                    });\n                if (newAttributes.length > 0)\n                    apiList.push({\n                        api: productApi.addAttributeProductVariants,\n                        data: newAttributes,\n                    });\n\n                if (storeObj._id && params.productId) {\n                    if (newAttributeWithNewOption.length) {\n                        await Promise.all(\n                            newAttributeWithNewOption.map((attributeWithNewOption: IAttribute) => {\n                                return productApi.createAttribute(\n                                    storeObj._id!,\n                                    attributeWithNewOption\n                                );\n                            })\n                        );\n\n                        dispatch(storeAction.getAttributes(storeObj._id));\n                    }\n\n                    await Promise.all(\n                        apiList.map((item: any) => {\n                            return item.api(storeObj._id, params.productId, item.data);\n                        })\n                    )\n                        .then(async () => {\n                            const product: IProduct = await productApi.getProduct({\n                                storeId: storeObj._id!,\n                                productId: params.productId,\n                            });\n\n                            form.setFieldsValue(product);\n                            product.attributes && setAttributes(product.attributes);\n                            product.variants && setVariants(product.variants);\n\n                            message.success('Cập nhật sản phẩm thành công');\n                            setVisible(false);\n                        })\n                        .catch(() => {\n                            message.error('Cập nhật sản phẩm thất bại');\n                        });\n                } else {\n                    message.error('Cập nhật sản phẩm thất bại');\n                }\n            } else {\n                let removedAttributeId = differenceBy(attributes, localAttributes, '_id').map(\n                    (item: IAttribute) => item._id\n                );\n\n                removeAttributesInEditMode(removedAttributeId);\n            }\n        } catch (error) {\n            message.error('Cập nhật sản phẩm thất bại');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const closeModal = () => {\n        setVisible(false);\n        setLocalAttributes(attributes);\n    };\n\n    return (\n        <>\n            <div onClick={() => setVisible(true)}>Chỉnh sửa thuộc tính</div>\n\n            <Modal\n                visible={visible}\n                footer={null}\n                onCancel={closeModal}\n                wrapClassName=\"modal-card-content\"\n                closable={false}\n                width={613}\n            >\n                <Card title=\"Chỉnh sửa thuộc tính\" style={{ position: 'relative' }}>\n                    {loading && <Loading full />}\n                    <div>\n                        {localAttributes.map((attribute: IAttribute | any, attrIndex: number) => (\n                            <div\n                                className=\"select-attributes-item\"\n                                key={`${attribute.name}_${attrIndex}`}\n                            >\n                                <Row gutter={[22, 0]} style={{ marginTop: 12 }}>\n                                    <AttributeItem\n                                        key={`attribute_${attrIndex}`}\n                                        attribute={attribute}\n                                        optionData={optionData}\n                                        onChange={(newLocalAttribute: any) =>\n                                            updateLocalAttributeTag(newLocalAttribute, attrIndex)\n                                        }\n                                        tagColor={TAG_COLOR_CLASSNAME[attrIndex]}\n                                    />\n\n                                    {localAttributes.length > 1 &&\n                                    attribute[isLocalAttributeSign] ? (\n                                        <Col className=\"col-actions\">\n                                            <InsaButton\n                                                icon={<DeleteOutlined />}\n                                                danger\n                                                type=\"primary\"\n                                                onClick={() => removeLocalAttribute(attribute._id)}\n                                            ></InsaButton>\n                                        </Col>\n                                    ) : (\n                                        <></>\n                                    )}\n                                </Row>\n                            </div>\n                        ))}\n\n                        {localAttributes.length < 3 ? (\n                            <InsaButton\n                                size=\"middle\"\n                                onClick={addNewLocalAttribute}\n                                className=\"add-new-attribute\"\n                                icon={<img src={iconActionsAddSimple} alt=\"icon\" />}\n                            >\n                                Thêm thuộc tính khác\n                            </InsaButton>\n                        ) : (\n                            <></>\n                        )}\n\n                        <div className=\"ant-card-footer\">\n                            <Space>\n                                <InsaButton\n                                    style={{ width: 140 }}\n                                    size=\"middle\"\n                                    key=\"help\"\n                                    onClick={closeModal}\n                                >\n                                    Huỷ\n                                </InsaButton>\n                                <InsaButton\n                                    style={{ width: 140 }}\n                                    size=\"middle\"\n                                    key=\"help\"\n                                    type=\"primary\"\n                                    onClick={handleUpdateChange}\n                                    loading={loading}\n                                >\n                                    Cập nhật\n                                </InsaButton>\n                            </Space>\n                        </div>\n                    </div>\n                </Card>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditAttributes;\n"]},"metadata":{},"sourceType":"module"}