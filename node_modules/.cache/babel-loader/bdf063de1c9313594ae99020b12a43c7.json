{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/list/orders-table.tsx\",\n    _s = $RefreshSig$();\n\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { Dropdown, Checkbox, Menu, Space, Modal, message } from 'antd';\nimport { pick } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport orderApi from '../../../api/order-api';\nimport { InsaTable, SaleChannelLabel } from '../../../components';\nimport { guest } from '../../../constants/guest';\nimport { getAddress } from '../../../helper';\nimport formatMoney from '../../../helper/format-money';\nimport OrderLabelStatus from '../components/order-label-status';\nimport PaidLabelStatus from '../components/paid-label-status';\nimport { getFeeForCustomer } from '../create/ultil';\nimport { useOrdersContext } from './state/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrdersTable = () => {\n  _s();\n\n  const [widthTable, setWidthTable] = useState(0);\n  const [loadingRemoveOrders, setLoadingRemoveOrders] = useState(false);\n  const history = useHistory();\n  const [path, setPath] = useState(history.location.search);\n  const loading = useSelector(({\n    store\n  }) => store.order.loading);\n  const store = useSelector(({\n    store\n  }) => store.data);\n  const data = useSelector(({\n    store\n  }) => store.order.data);\n  const pagination = useSelector(({\n    store\n  }) => store.order.pagination);\n  const {\n    progress,\n    page,\n    changePagination,\n    limit,\n    fetchDataCallback,\n    search,\n    source,\n    serviceId,\n    status,\n    soft,\n    deliveryDate\n  } = useOrdersContext();\n\n  const onChangePagination = (pageNumber, pageSize) => {\n    changePagination({\n      page: pageNumber,\n      limit: pageSize || 20\n    });\n  };\n\n  const gotoOrder = orderId => {\n    history.push(`/orders/order/${orderId}`, path); //my code\n\n    history.push(`/orders/order/${orderId}`);\n  };\n\n  useEffect(() => {\n    var _document;\n\n    if (!progress) {\n      fetchDataCallback({\n        status,\n        search,\n        page,\n        source,\n        serviceId,\n        deliveryDate\n      });\n    }\n\n    const antTableHeadEle = (_document = document) === null || _document === void 0 ? void 0 : _document.querySelector('.order-tbl .ant-table-thead');\n    const customerActionsWidth = antTableHeadEle ? antTableHeadEle.clientWidth : 0;\n    setWidthTable(customerActionsWidth); // eslint-disable-next-line\n  }, [status, search, page, source, serviceId, deliveryDate, progress]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [loading]);\n  useEffect(() => {\n    setPath(history.location.search);\n  }, [history.location.search]);\n  const columns = [{\n    title: 'Mã đơn hàng',\n    align: 'center',\n    dataIndex: 'code',\n    key: 'code',\n    render: (text, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"blue-text\",\n      onClick: () => gotoOrder(order._id),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Khách hàng',\n    align: 'center',\n    dataIndex: 'customer',\n    key: 'customer',\n    render: customer => customer._id === guest._id ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: customer === null || customer === void 0 ? void 0 : customer.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/customers/${customer._id}`,\n        target: \"_blank\",\n        children: [customer === null || customer === void 0 ? void 0 : customer.phoneNo, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this), \"- \", customer === null || customer === void 0 ? void 0 : customer.name]\n    }, void 0, true)\n  }, {\n    title: 'Địa chỉ',\n    align: 'center',\n    dataIndex: 'customer',\n    width: 200,\n    render: customer => getAddress(pick(customer, ['address', 'provinceName', 'wardName', 'districtName']))\n  }, {\n    title: 'Trạng thái đơn hàng',\n    align: 'center',\n    dataIndex: 'status',\n    key: 'status',\n    render: (status, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => gotoOrder(order._id),\n      children: /*#__PURE__*/_jsxDEV(OrderLabelStatus, {\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Trạng thái thanh toán',\n    align: 'center',\n    dataIndex: 'paidAt',\n    key: 'paidAt',\n    render: paidAt => /*#__PURE__*/_jsxDEV(PaidLabelStatus, {\n      paidAt: paidAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 41\n    }, this)\n  }, {\n    title: 'Ngày tạo đơn',\n    align: 'center',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    render: (text, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => gotoOrder(order._id),\n      children: [moment(text).format('HH:mm'), \" \", moment(text).format('DD/MM/YYYY')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Ngày giao hàng',\n    align: 'center',\n    dataIndex: 'deliveredAt',\n    key: 'deliveredAt',\n    render: deliveredAt => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: deliveredAt ? moment(deliveredAt).format('DD/MM/YYYY') : '---'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Ghi chú',\n    align: 'center',\n    dataIndex: '',\n    key: 'note',\n    render: order => {\n      const text = order.note && order.note.length > 0 ? order.note : order.deliveryOptions && order.deliveryOptions.customerNote ? order.deliveryOptions.customerNote : '---';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => gotoOrder(order._id),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'Nguồn',\n    align: 'center',\n    dataIndex: 'source',\n    key: 'source',\n    render: source => /*#__PURE__*/_jsxDEV(SaleChannelLabel, {\n      channelId: source\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }, this)\n  }, {\n    title: 'Khách phải trả',\n    align: 'center',\n    render: order => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [formatMoney(getFeeForCustomer(order)), \" VND\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 40\n    }, this)\n  }];\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const onSelectChange = selectedRowKeysInCurrentPage => {\n    let selectedRowKeysBeforeInCurrentPage = [];\n    data.forEach(order => {\n      if (selectedRowKeys.includes(order._id)) {\n        selectedRowKeysBeforeInCurrentPage.push(order._id);\n      }\n    });\n    const selectedRowInOtherPage = selectedRowKeys.filter(key => !selectedRowKeysBeforeInCurrentPage.includes(key));\n    setSelectedRowKeys([...selectedRowInOtherPage, ...selectedRowKeysInCurrentPage]);\n  };\n\n  const selectAll = () => {\n    const orderKeys = data.map(order => order._id);\n    setSelectedRowKeys(orderKeys);\n  };\n\n  const removeAllSelect = () => {\n    setSelectedRowKeys([]);\n  };\n\n  const removeOrderSelect = () => {\n    Modal.confirm({\n      title: 'Xóa Đơn Hàng?',\n      content: `Bạn chắc chắn muốn xóa đơn hàng?`,\n      okText: 'Xóa',\n      okType: 'danger',\n      cancelText: 'Hủy',\n\n      onOk() {\n        if (store._id) {\n          setLoadingRemoveOrders(true);\n          Promise.all(selectedRowKeys.map(async orderId => {\n            await orderApi.removeOrder({\n              storeId: store._id,\n              orderId\n            });\n            return true;\n          })).then(() => {\n            message.success(`Đã xóa ${selectedRowKeys.length} đơn hàng`);\n            setSelectedRowKeys([]);\n            fetchDataCallback({\n              page,\n              limit,\n              status,\n              search,\n              source,\n              serviceId,\n              soft\n            });\n          }).catch(error => {\n            message.error('Lỗi xóa đơn hàng');\n          }).finally(() => {\n            setLoadingRemoveOrders(false);\n          });\n        }\n      }\n\n    });\n  };\n\n  function handleMenuClick(e) {\n    switch (e.key) {\n      case 'remove':\n        removeOrderSelect();\n        break;\n\n      case 'unselect':\n        setSelectedRowKeys([]);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: handleMenuClick,\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"X\\xF3a \\u0111\\u01A1n h\\xE0ng\"\n    }, \"remove\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"B\\u1ECF ch\\u1ECDn\"\n    }, \"unselect\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n\n  const renderColumnTitle = () => {\n    if (selectedRowKeys.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        onClick: selectAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        background: '#fff',\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10,\n        zIndex: 100,\n        width: widthTable\n      },\n      children: /*#__PURE__*/_jsxDEV(Dropdown.Button, {\n        overlay: menu,\n        buttonsRender: ([leftButton, rightButton]) => [leftButton, /*#__PURE__*/React.cloneElement(rightButton, {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Ch\\u1ECDn thao t\\xE1c \", /*#__PURE__*/_jsxDEV(CaretDownOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true),\n          loading: loadingRemoveOrders,\n          icon: undefined\n        })],\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            onClick: removeAllSelect,\n            checked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0110\\xE3 ch\\u1ECDn \", selectedRowKeys.length, \" \\u0111\\u01A1n h\\xE0ng\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    columnTitle: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 30\n      },\n      children: renderColumnTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 22\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(InsaTable, {\n    loading: loading,\n    rowSelection: rowSelection,\n    columns: columns,\n    isShowTotal: true,\n    dataSource: data,\n    rowKey: \"_id\",\n    bordered: true,\n    pagination: {\n      pageSize: limit,\n      current: Number(page),\n      total: pagination.total,\n      onChange: onChangePagination\n    },\n    scroll: {\n      x: 1400\n    },\n    name: \"Danh s\\xE1ch \\u0111\\u01A1n h\\xE0ng\",\n    className: \"order-tbl hover\",\n    hasDefaultColumn: false,\n    onRow: record => {\n      return {\n        onClick: event => {\n          if (event.target.className && event.target.className === 'ant-table-cell') {\n            history.push(`/orders/order/${record._id}`, path); // mycode\n\n            history.push(`orders/order/${record._id}`);\n          }\n        }\n      };\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrdersTable, \"AHafKDp4oj73Ht5QZhyYQZyz3W8=\", false, function () {\n  return [useHistory, useSelector, useSelector, useSelector, useSelector, useOrdersContext];\n});\n\n_c = OrdersTable;\nexport default OrdersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/list/orders-table.tsx"],"names":["CaretDownOutlined","Dropdown","Checkbox","Menu","Space","Modal","message","pick","moment","React","useEffect","useState","useSelector","Link","useHistory","orderApi","InsaTable","SaleChannelLabel","guest","getAddress","formatMoney","OrderLabelStatus","PaidLabelStatus","getFeeForCustomer","useOrdersContext","OrdersTable","widthTable","setWidthTable","loadingRemoveOrders","setLoadingRemoveOrders","history","path","setPath","location","search","loading","store","order","data","pagination","progress","page","changePagination","limit","fetchDataCallback","source","serviceId","status","soft","deliveryDate","onChangePagination","pageNumber","pageSize","gotoOrder","orderId","push","antTableHeadEle","document","querySelector","customerActionsWidth","clientWidth","window","scrollTo","columns","title","align","dataIndex","key","render","text","_id","customer","name","phoneNo","width","paidAt","format","deliveredAt","note","length","deliveryOptions","customerNote","selectedRowKeys","setSelectedRowKeys","onSelectChange","selectedRowKeysInCurrentPage","selectedRowKeysBeforeInCurrentPage","forEach","includes","selectedRowInOtherPage","filter","selectAll","orderKeys","map","removeAllSelect","removeOrderSelect","confirm","content","okText","okType","cancelText","onOk","Promise","all","removeOrder","storeId","then","success","catch","error","finally","handleMenuClick","e","menu","renderColumnTitle","position","top","left","bottom","right","background","display","alignItems","paddingLeft","zIndex","leftButton","rightButton","cloneElement","children","icon","undefined","rowSelection","onChange","columnTitle","current","Number","total","x","record","onClick","event","target","className"],"mappings":"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","sourcesContent":["import { CaretDownOutlined } from '@ant-design/icons';\nimport { Dropdown, Checkbox, Menu, Space, Modal, message } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { pick } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, ReactElement, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport orderApi from '../../../api/order-api';\nimport { InsaTable, SaleChannelLabel } from '../../../components';\nimport { guest } from '../../../constants/guest';\nimport { getAddress } from '../../../helper';\nimport formatMoney from '../../../helper/format-money';\nimport { ICustomer } from '../../../models';\nimport { IOrder, ORDER_STATUS } from '../../../models/order';\nimport { IStoreState } from '../../../reducers/storeState/reducer';\nimport OrderLabelStatus from '../components/order-label-status';\nimport PaidLabelStatus from '../components/paid-label-status';\nimport { getFeeForCustomer } from '../create/ultil';\nimport { useOrdersContext } from './state/context';\n\nconst OrdersTable: FC = () => {\n    const [widthTable, setWidthTable] = useState<number>(0);\n    const [loadingRemoveOrders, setLoadingRemoveOrders] = useState<boolean>(false);\n    const history = useHistory();\n\n    const [path, setPath] = useState(history.location.search);\n\n    const loading = useSelector(({ store }: { store: IStoreState }) => store.order.loading);\n    const store = useSelector(({ store }: { store: IStoreState }) => store.data);\n    const data = useSelector(({ store }: { store: IStoreState }) => store.order.data);\n    const pagination = useSelector(({ store }: { store: IStoreState }) => store.order.pagination);\n\n    const {\n        progress,\n        page,\n        changePagination,\n        limit,\n        fetchDataCallback,\n        search,\n        source,\n        serviceId,\n        status,\n        soft,\n        deliveryDate,\n    } = useOrdersContext();\n\n    const onChangePagination = (pageNumber: number, pageSize?: number) => {\n        changePagination({\n            page: pageNumber,\n            limit: pageSize || 20,\n        });\n    };\n\n    const gotoOrder = (orderId: string) => {\n        history.push(`/orders/order/${orderId}`, path);\n\n        //my code\n        history.push(`/orders/order/${orderId}`);\n    };\n\n    useEffect(() => {\n        if (!progress) {\n            fetchDataCallback({ status, search, page, source, serviceId, deliveryDate });\n        }\n\n        const antTableHeadEle: HTMLTableHeaderCellElement | null = document?.querySelector(\n            '.order-tbl .ant-table-thead'\n        );\n        const customerActionsWidth: number = antTableHeadEle ? antTableHeadEle.clientWidth : 0;\n        setWidthTable(customerActionsWidth);\n        // eslint-disable-next-line\n    }, [status, search, page, source, serviceId, deliveryDate, progress]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [loading]);\n\n    useEffect(() => {\n        setPath(history.location.search);\n    }, [history.location.search]);\n\n    const columns: ColumnsType<IOrder> = [\n        {\n            title: 'Mã đơn hàng',\n            align: 'center',\n            dataIndex: 'code',\n            key: 'code',\n            render: (text: string, order) => (\n                <span className=\"blue-text\" onClick={() => gotoOrder(order._id)}>\n                    {text}\n                </span>\n            ),\n        },\n        {\n            title: 'Khách hàng',\n            align: 'center',\n            dataIndex: 'customer',\n            key: 'customer',\n            render: (customer: ICustomer) => (\n                customer._id === guest._id ?\n                    <span>{customer?.name}</span> :\n                    <>\n                        <Link to={`/customers/${customer._id}`} target=\"_blank\">{customer?.phoneNo} </Link>- {customer?.name}\n                    </>\n            ),\n        },\n        {\n            title: 'Địa chỉ',\n            align: 'center',\n            dataIndex: 'customer',\n            width: 200,\n            render: (customer) =>\n                getAddress(pick(customer, ['address', 'provinceName', 'wardName', 'districtName'])),\n        },\n        {\n            title: 'Trạng thái đơn hàng',\n            align: 'center',\n            dataIndex: 'status',\n            key: 'status',\n            render: (status: ORDER_STATUS, order) => (\n                <span onClick={() => gotoOrder(order._id)}>\n                    <OrderLabelStatus status={status} />\n                </span>\n            ),\n        },\n        {\n            title: 'Trạng thái thanh toán',\n            align: 'center',\n            dataIndex: 'paidAt',\n            key: 'paidAt',\n            render: (paidAt: string) => <PaidLabelStatus paidAt={paidAt} />,\n        },\n        {\n            title: 'Ngày tạo đơn',\n            align: 'center',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            render: (text: string, order) => (\n                <span onClick={() => gotoOrder(order._id)}>\n                    {moment(text).format('HH:mm')} {moment(text).format('DD/MM/YYYY')}\n                </span>\n            ),\n        },\n        {\n            title: 'Ngày giao hàng',\n            align: 'center',\n            dataIndex: 'deliveredAt',\n            key: 'deliveredAt',\n            render: (deliveredAt) => (\n                <span>{deliveredAt ? moment(deliveredAt).format('DD/MM/YYYY') : '---'}</span>\n            ),\n        },\n        {\n            title: 'Ghi chú',\n            align: 'center',\n            dataIndex: '',\n            key: 'note',\n            render: (order: IOrder) => {\n                const text =\n                    order.note && order.note.length > 0\n                        ? order.note\n                        : order.deliveryOptions && order.deliveryOptions.customerNote\n                        ? order.deliveryOptions.customerNote\n                        : '---';\n\n                return <span onClick={() => gotoOrder(order._id)}>{text}</span>;\n            },\n        },\n\n        {\n            title: 'Nguồn',\n            align: 'center',\n            dataIndex: 'source',\n            key: 'source',\n            render: (source) => <SaleChannelLabel channelId={source} />,\n        },\n\n        {\n            title: 'Khách phải trả',\n            align: 'center',\n            render: (order: IOrder) => <span>{formatMoney(getFeeForCustomer(order))} VND</span>,\n        },\n    ];\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState<any>([]);\n\n    const onSelectChange = (selectedRowKeysInCurrentPage: any) => {\n        let selectedRowKeysBeforeInCurrentPage: string[] = [];  \n        data.forEach(order => {\n            if (selectedRowKeys.includes(order._id)) {\n                selectedRowKeysBeforeInCurrentPage.push(order._id);\n            }\n        });\n\n        const selectedRowInOtherPage = selectedRowKeys\n            .filter((key: string) => !selectedRowKeysBeforeInCurrentPage.includes(key));\n\n        setSelectedRowKeys([...selectedRowInOtherPage, ...selectedRowKeysInCurrentPage]);\n    };\n\n    const selectAll = () => {\n        const orderKeys = data.map((order: IOrder) => order._id);\n        setSelectedRowKeys(orderKeys);\n    };\n\n    const removeAllSelect = () => {\n        setSelectedRowKeys([]);\n    };\n\n    const removeOrderSelect = () => {\n        Modal.confirm({\n            title: 'Xóa Đơn Hàng?',\n            content: `Bạn chắc chắn muốn xóa đơn hàng?`,\n            okText: 'Xóa',\n            okType: 'danger',\n            cancelText: 'Hủy',\n\n            onOk() {\n                if (store._id) {\n                    setLoadingRemoveOrders(true);\n                    Promise.all(\n                        selectedRowKeys.map(async (orderId: string) => {\n                            await orderApi.removeOrder({\n                                storeId: store._id as string,\n                                orderId,\n                            });\n\n                            return true;\n                        })\n                    )\n                        .then(() => {\n                            message.success(`Đã xóa ${selectedRowKeys.length} đơn hàng`);\n                            setSelectedRowKeys([]);\n\n                            fetchDataCallback({\n                                page,\n                                limit,\n                                status,\n                                search,\n                                source,\n                                serviceId,\n                                soft,\n                            });\n                        })\n                        .catch((error) => {\n                            message.error('Lỗi xóa đơn hàng');\n                        })\n                        .finally(() => {\n                            setLoadingRemoveOrders(false);\n                        });\n                }\n            },\n        });\n    };\n\n    function handleMenuClick(e: any) {\n        switch (e.key) {\n            case 'remove':\n                removeOrderSelect();\n                break;\n            case 'unselect':\n                setSelectedRowKeys([]);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"remove\">Xóa đơn hàng</Menu.Item>\n            <Menu.Item key=\"unselect\">Bỏ chọn</Menu.Item>\n        </Menu>\n    );\n\n    const renderColumnTitle = () => {\n        if (selectedRowKeys.length === 0) {\n            return <Checkbox onClick={selectAll} />;\n        }\n\n        return (\n            <div\n                style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    background: '#fff',\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingLeft: 10,\n                    zIndex: 100,\n                    width: widthTable,\n                }}\n            >\n                <Dropdown.Button\n                    overlay={menu}\n                    buttonsRender={([leftButton, rightButton]) => [\n                        leftButton,\n                        React.cloneElement(rightButton as ReactElement, {\n                            children: (\n                                <>\n                                    Chọn thao tác <CaretDownOutlined />\n                                </>\n                            ),\n                            loading: loadingRemoveOrders,\n                            icon: undefined,\n                        }),\n                    ]}\n                >\n                    <Space>\n                        <Checkbox onClick={removeAllSelect} checked />\n                        <span>Đã chọn {selectedRowKeys.length} đơn hàng</span>\n                    </Space>\n                </Dropdown.Button>\n            </div>\n        );\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n        columnTitle: <div style={{ width: 30 }}>{renderColumnTitle()}</div>,\n    };\n\n    return (\n        <InsaTable\n            loading={loading}\n            rowSelection={rowSelection}\n            columns={columns}\n            isShowTotal\n            dataSource={data}\n            rowKey=\"_id\"\n            bordered\n            pagination={{\n                pageSize: limit,\n                current: Number(page),\n                total: pagination.total,\n                onChange: onChangePagination,\n            }}\n            scroll={{ x: 1400 }}\n            name=\"Danh sách đơn hàng\"\n            className=\"order-tbl hover\"\n            hasDefaultColumn={false}\n            onRow={(record) => {\n                return {\n                    onClick: (event) => {\n                        if (\n                            (event.target as any).className &&\n                            (event.target as any).className === 'ant-table-cell'\n                        ) {\n                            history.push(`/orders/order/${(record as IOrder)._id}`, path);\n\n                            // mycode\n                            history.push(`orders/order/${(record as IOrder)._id}`);\n                        }\n                    },\n                };\n            }}\n        />\n    );\n};\n\nexport default OrdersTable;\n"]},"metadata":{},"sourceType":"module"}