{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/product-variant/drag-drop-tag.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { isEqual } from 'lodash';\nimport { DragDropList } from '../../../../components';\nimport IconActionMore from './icon-action-mores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragDropTags = ({\n  attribute,\n  onTagsChange\n}) => {\n  _s();\n\n  const [tags, setTags] = useState(attribute.tags);\n  useEffect(() => {\n    !isEqual(tags, attribute.tags) && onTagsChange(tags); // eslint-disable-next-line\n  }, [tags]);\n  useEffect(() => {\n    setTags(attribute.tags);\n  }, [attribute.tags]);\n\n  const handleTagsMove = dataTags => {\n    setTags(dataTags);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropList, {\n      accepts: [attribute._id],\n      dataSource: tags,\n      onDragEnd: handleTagsMove,\n      renderItem: tag => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: [/*#__PURE__*/_jsxDEV(IconActionMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DragDropTags, \"cU+JAlefFgb/qq/hnHcnm81hHjA=\");\n\n_c = DragDropTags;\nexport default DragDropTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDropTags\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/product-variant/drag-drop-tag.tsx"],"names":["React","useState","useEffect","isEqual","DragDropList","IconActionMore","DragDropTags","attribute","onTagsChange","tags","setTags","handleTagsMove","dataTags","_id","tag"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;;AAOA,MAAMC,YAAuB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA;;AAC7D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAWM,SAAS,CAACE,IAArB,CAAhC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,KAACC,OAAO,CAACM,IAAD,EAAOF,SAAS,CAACE,IAAjB,CAAR,IAAkCD,YAAY,CAACC,IAAD,CAA9C,CADY,CAEZ;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO,CAACH,SAAS,CAACE,IAAX,CAAP;AACH,GAFQ,EAEN,CAACF,SAAS,CAACE,IAAX,CAFM,CAAT;;AAIA,QAAME,cAAc,GAAIC,QAAD,IAAwB;AAC3CF,IAAAA,OAAO,CAACE,QAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,OAAO,EAAE,CAACL,SAAS,CAACM,GAAX,CADb;AAEI,MAAA,UAAU,EAAEJ,IAFhB;AAGI,MAAA,SAAS,EAAEE,cAHf;AAII,MAAA,UAAU,EAAGG,GAAD,iBACR;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA,gCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA/BD;;GAAMR,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { isEqual } from 'lodash';\n\nimport { DragDropList } from '../../../../components';\nimport IconActionMore from './icon-action-mores';\n\ntype Props = {\n    attribute: any;\n    onTagsChange: Function;\n};\n\nconst DragDropTags: FC<Props> = ({ attribute, onTagsChange }) => {\n    const [tags, setTags] = useState<string[]>(attribute.tags);\n\n    useEffect(() => {\n        !isEqual(tags, attribute.tags) && onTagsChange(tags);\n        // eslint-disable-next-line\n    }, [tags]);\n\n    useEffect(() => {\n        setTags(attribute.tags);\n    }, [attribute.tags]);\n\n    const handleTagsMove = (dataTags: string[]) => {\n        setTags(dataTags);\n    };\n\n    return (\n        <div>\n            <DragDropList\n                accepts={[attribute._id]}\n                dataSource={tags}\n                onDragEnd={handleTagsMove}\n                renderItem={(tag: any) => (\n                    <span className=\"tag\">\n                        <IconActionMore />\n                        <span>{tag}</span>\n                    </span>\n                )}\n            />\n        </div>\n    );\n};\n\nexport default DragDropTags;\n"]},"metadata":{},"sourceType":"module"}