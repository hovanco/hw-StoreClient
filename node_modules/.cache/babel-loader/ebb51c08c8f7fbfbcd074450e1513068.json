{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { compact, get } from 'lodash';\nimport * as queryString from 'query-string';\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { storeAction } from '../../../reducers/storeState/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEYS_FILTER = ['search', 'source', 'dateOfBirth', 'gender', 'fromAt', 'toAt'];\nconst INITIAL_FILTER = {};\nconst initialPagination = {\n  page: 1,\n  limit: 20,\n  total: 0,\n  sort: 'createdAt',\n  direction: 'desc'\n};\nconst CustomerTableContext = /*#__PURE__*/createContext({\n  filter: INITIAL_FILTER,\n  pagination: initialPagination,\n  setFilter: filter => filter,\n  setPagination: pagination => pagination,\n  getCustomers: () => {}\n});\nexport const CustomerTableProvider = ({\n  children\n}) => {\n  _s();\n\n  const location = useLocation();\n  const [progress, setProgress] = useState(true);\n  const [filter, setFilter] = useState(INITIAL_FILTER);\n  const [pagination, setPagination] = useState(initialPagination);\n  const {\n    data: storeObj\n  } = useSelector(({\n    store\n  }) => store);\n  const dispatch = useDispatch();\n  const getCustomers = useCallback(() => {\n    if (storeObj._id) {\n      var _filter$dateOfBirth, _filter$dateOfBirth2;\n\n      dispatch(storeAction.getCustomers({\n        storeId: storeObj._id,\n        // pagination\n        limit: pagination.limit,\n        page: Number(pagination.page),\n        sort: pagination.sort,\n        direction: pagination.direction,\n        // filter\n        source: filter.source,\n        search: filter.search,\n        dateOfBirth: (_filter$dateOfBirth = filter.dateOfBirth) === null || _filter$dateOfBirth === void 0 ? void 0 : _filter$dateOfBirth.value,\n        filterDateBy: (_filter$dateOfBirth2 = filter.dateOfBirth) === null || _filter$dateOfBirth2 === void 0 ? void 0 : _filter$dateOfBirth2.filterDateBy,\n        fromAt: filter.fromAt,\n        toAt: filter.toAt,\n        gender: filter.gender\n      }));\n    } // eslint-disable-next-line\n\n  }, [storeObj._id, pagination, filter]);\n  useEffect(() => {\n    const searchObj = queryString.parse(location.search);\n    let searchObjFilter = {};\n    Object.keys(searchObj).forEach(key => {\n      if (KEYS_FILTER.includes(key)) {\n        searchObjFilter = { ...searchObjFilter,\n          [key]: searchObj[key]\n        };\n      }\n\n      if (key === 'page') {\n        setPagination({ ...pagination,\n          page: Number(searchObj[key]) || 1\n        });\n      }\n    });\n    const startDate = get(searchObj, 'fromAt');\n    const endDate = get(searchObj, 'toAt');\n    const dateOfBirth = get(searchObj, 'dateOfBirth');\n    const filterDateBy = get(searchObj, 'filterDateBy');\n    searchObjFilter = { ...searchObjFilter,\n      createdAt: compact([startDate, endDate]).length === 2 ? compact([startDate, endDate]) : undefined,\n      dateOfBirth: dateOfBirth ? {\n        value: dateOfBirth,\n        filterDateBy\n      } : undefined\n    };\n    setFilter(searchObjFilter);\n    setProgress(false);\n  }, [location]);\n  useEffect(() => {\n    if (storeObj._id && !progress) {\n      getCustomers();\n    } // eslint-disable-next-line\n\n  }, [storeObj._id, pagination.page, pagination.limit, pagination.sort, pagination.direction, filter, progress]);\n  const value = useMemo(() => ({\n    filter,\n    pagination,\n    setFilter,\n    setPagination,\n    getCustomers\n  }), [filter, pagination, setFilter, setPagination, getCustomers]);\n  return /*#__PURE__*/_jsxDEV(CustomerTableContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CustomerTableProvider, \"wMtg3+lbNgfvIxglUpS9Ti45dxw=\", false, function () {\n  return [useLocation, useSelector, useDispatch];\n});\n\n_c = CustomerTableProvider;\nexport const useCustomerTable = () => {\n  _s2();\n\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    filter,\n    pagination,\n    setFilter,\n    setPagination,\n    getCustomers\n  } = useContext(CustomerTableContext);\n\n  const selectFilterSource = source => {\n    var _filter$dateOfBirth3, _filter$dateOfBirth4;\n\n    const paramsObj = {\n      page: 1,\n      ...filter,\n      dateOfBirth: (_filter$dateOfBirth3 = filter.dateOfBirth) === null || _filter$dateOfBirth3 === void 0 ? void 0 : _filter$dateOfBirth3.value,\n      filterDateBy: (_filter$dateOfBirth4 = filter.dateOfBirth) === null || _filter$dateOfBirth4 === void 0 ? void 0 : _filter$dateOfBirth4.filterDateBy,\n      source\n    };\n    const searchString = queryString.stringify(paramsObj);\n    history.push({\n      pathname: location.pathname,\n      search: searchString\n    });\n    setFilter({ ...filter,\n      source\n    });\n    setPagination({ ...pagination,\n      page: 1\n    });\n  };\n\n  const changePagination = newPagination => {\n    var _filter$dateOfBirth5, _filter$dateOfBirth6;\n\n    const paramsObj = {\n      page: newPagination.page,\n      ...filter,\n      dateOfBirth: (_filter$dateOfBirth5 = filter.dateOfBirth) === null || _filter$dateOfBirth5 === void 0 ? void 0 : _filter$dateOfBirth5.value,\n      filterDateBy: (_filter$dateOfBirth6 = filter.dateOfBirth) === null || _filter$dateOfBirth6 === void 0 ? void 0 : _filter$dateOfBirth6.filterDateBy\n    };\n    const searchString = queryString.stringify(paramsObj);\n    history.push({\n      pathname: location.pathname,\n      search: searchString\n    });\n    setPagination({ ...pagination,\n      ...newPagination\n    });\n  };\n\n  const changeFilterSearch = search => {\n    setFilter({ ...filter,\n      search\n    });\n    setPagination({ ...pagination,\n      page: 1\n    });\n  };\n\n  const advanceFilterChange = advanceFilterProperties => {\n    setFilter({ ...filter,\n      ...advanceFilterProperties\n    });\n    setPagination({ ...pagination,\n      page: 1\n    });\n  };\n\n  const removeFilterByKey = filterKey => {\n    const searchObj = queryString.parse(location.search);\n    let searchObjFilter = {};\n    Object.keys(searchObj).forEach(key => {\n      if (filterKey !== key) {\n        searchObjFilter = { ...searchObjFilter,\n          [key]: searchObj[key]\n        };\n      }\n    });\n\n    if (filterKey === 'createdAt') {\n      searchObjFilter = { ...searchObjFilter,\n        fromAt: undefined,\n        toAt: undefined\n      };\n    }\n\n    if (filterKey === 'dateOfBirth') {\n      searchObjFilter = { ...searchObjFilter,\n        dateOfBirth: undefined,\n        filterDateBy: undefined\n      };\n    }\n\n    const searchString = queryString.stringify({ ...searchObjFilter,\n      page: 1\n    });\n    history.push({\n      pathname: location.pathname,\n      search: searchString\n    });\n  };\n\n  return {\n    filter,\n    pagination,\n    selectFilterSource,\n    changePagination,\n    changeFilterSearch,\n    advanceFilterChange,\n    removeFilterByKey,\n    getCustomers\n  };\n};\n\n_s2(useCustomerTable, \"0QmdsOZt3gihppk3kTLmwI6utOY=\", false, function () {\n  return [useLocation, useHistory];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTableProvider\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/context.tsx"],"names":["compact","get","queryString","React","createContext","useCallback","useContext","useEffect","useMemo","useState","useDispatch","useSelector","useHistory","useLocation","storeAction","KEYS_FILTER","INITIAL_FILTER","initialPagination","page","limit","total","sort","direction","CustomerTableContext","filter","pagination","setFilter","setPagination","getCustomers","CustomerTableProvider","children","location","progress","setProgress","data","storeObj","store","dispatch","_id","storeId","Number","source","search","dateOfBirth","value","filterDateBy","fromAt","toAt","gender","searchObj","parse","searchObjFilter","Object","keys","forEach","key","includes","startDate","endDate","createdAt","length","undefined","useCustomerTable","history","selectFilterSource","paramsObj","searchString","stringify","push","pathname","changePagination","newPagination","changeFilterSearch","advanceFilterChange","advanceFilterProperties","removeFilterByKey","filterKey"],"mappings":"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","sourcesContent":["import { compact, get } from 'lodash';\nimport * as queryString from 'query-string';\nimport React, {\n    createContext,\n    FC,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { Gender } from '../../../constants/gender';\nimport { SaleChannelId } from '../../../models';\nimport { storeAction } from '../../../reducers/storeState/action';\nimport { IStoreState } from '../../../reducers/storeState/reducer';\n\nexport interface IPagination {\n    page: number;\n    limit: number;\n    total: number;\n    sort: string;\n    direction: string;\n}\n\nexport interface IFilter {\n    search?: string;\n    source?: SaleChannelId;\n    dateOfBirth?: {\n        value: string;\n        filterDateBy: string;\n    };\n    createdAt?: number[];\n    fromAt?: number;\n    toAt?: number;\n    gender?: Gender;\n}\n\nconst KEYS_FILTER: string[] = ['search', 'source', 'dateOfBirth', 'gender', 'fromAt', 'toAt'];\nconst INITIAL_FILTER: IFilter = {};\n\nconst initialPagination: IPagination = {\n    page: 1,\n    limit: 20,\n    total: 0,\n    sort: 'createdAt',\n    direction: 'desc',\n};\n\nconst CustomerTableContext = createContext({\n    filter: INITIAL_FILTER,\n    pagination: initialPagination,\n    setFilter: (filter: any) => filter,\n    setPagination: (pagination: any) => pagination,\n    getCustomers: () => {},\n});\n\nexport const CustomerTableProvider: FC<{ children: JSX.Element }> = ({ children }) => {\n    const location = useLocation();\n    const [progress, setProgress] = useState<boolean>(true);\n    const [filter, setFilter] = useState<IFilter>(INITIAL_FILTER);\n    const [pagination, setPagination] = useState<IPagination>(initialPagination);\n\n    const { data: storeObj } = useSelector(({ store }: { store: IStoreState }) => store);\n\n    const dispatch = useDispatch();\n\n    const getCustomers = useCallback(() => {\n        if (storeObj._id) {\n            dispatch(\n                storeAction.getCustomers({\n                    storeId: storeObj._id,\n                    // pagination\n                    limit: pagination.limit,\n                    page: Number(pagination.page),\n                    sort: pagination.sort,\n                    direction: pagination.direction,\n                    // filter\n                    source: filter.source,\n                    search: filter.search,\n                    dateOfBirth: filter.dateOfBirth?.value,\n                    filterDateBy: filter.dateOfBirth?.filterDateBy,\n                    fromAt: filter.fromAt,\n                    toAt: filter.toAt,\n                    gender: filter.gender,\n                })\n            );\n        }\n\n        // eslint-disable-next-line\n    }, [storeObj._id, pagination, filter]);\n\n    useEffect(() => {\n        const searchObj = queryString.parse(location.search);\n\n        let searchObjFilter = {};\n\n        Object.keys(searchObj).forEach((key: string) => {\n            if (KEYS_FILTER.includes(key)) {\n                searchObjFilter = {\n                    ...searchObjFilter,\n                    [key]: searchObj[key],\n                };\n            }\n\n            if (key === 'page') {\n                setPagination({ ...pagination, page: Number(searchObj[key]) || 1 });\n            }\n        });\n\n        const startDate = get(searchObj, 'fromAt');\n        const endDate = get(searchObj, 'toAt');\n\n        const dateOfBirth = get(searchObj, 'dateOfBirth');\n        const filterDateBy = get(searchObj, 'filterDateBy');\n\n        searchObjFilter = {\n            ...searchObjFilter,\n            createdAt:\n                compact([startDate, endDate]).length === 2\n                    ? compact([startDate, endDate])\n                    : undefined,\n            dateOfBirth: dateOfBirth ? {\n                value: dateOfBirth,\n                filterDateBy\n            } : undefined,\n        };\n\n        setFilter(searchObjFilter);\n        setProgress(false);\n    }, [location]);\n\n    useEffect(() => {\n        if (storeObj._id && !progress) {\n            getCustomers();\n        }\n        // eslint-disable-next-line\n    }, [\n        storeObj._id,\n        pagination.page,\n        pagination.limit,\n        pagination.sort,\n        pagination.direction,\n        filter,\n        progress,\n    ]);\n\n    const value = useMemo(\n        () => ({\n            filter,\n            pagination,\n            setFilter,\n            setPagination,\n            getCustomers,\n        }),\n        [filter, pagination, setFilter, setPagination, getCustomers]\n    );\n\n    return <CustomerTableContext.Provider value={value}>{children}</CustomerTableContext.Provider>;\n};\n\nexport const useCustomerTable = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const { filter, pagination, setFilter, setPagination, getCustomers } = useContext(\n        CustomerTableContext\n    );\n\n    const selectFilterSource = (source: string | undefined) => {\n        const paramsObj = {\n            page: 1,\n            ...filter,\n            dateOfBirth: filter.dateOfBirth?.value,\n            filterDateBy: filter.dateOfBirth?.filterDateBy,\n            source,\n        };\n\n        const searchString = queryString.stringify(paramsObj);\n\n        history.push({\n            pathname: location.pathname,\n            search: searchString,\n        });\n\n        setFilter({ ...filter, source });\n        setPagination({ ...pagination, page: 1 });\n    };\n\n    const changePagination = (newPagination: any) => {\n        const paramsObj = {\n            page: newPagination.page,\n            ...filter,\n            dateOfBirth: filter.dateOfBirth?.value,\n            filterDateBy: filter.dateOfBirth?.filterDateBy,\n        };\n\n        const searchString = queryString.stringify(paramsObj);\n\n        history.push({\n            pathname: location.pathname,\n            search: searchString,\n        });\n\n        setPagination({ ...pagination, ...newPagination } as IPagination);\n    };\n\n    const changeFilterSearch = (search: string) => {\n        setFilter({ ...filter, search });\n        setPagination({ ...pagination, page: 1 });\n    };\n\n    const advanceFilterChange = (advanceFilterProperties: any) => {\n        setFilter({ ...filter, ...advanceFilterProperties });\n        setPagination({ ...pagination, page: 1 });\n    };\n\n    const removeFilterByKey = (filterKey: string) => {\n        const searchObj = queryString.parse(location.search);\n\n        let searchObjFilter = {};\n\n        Object.keys(searchObj).forEach((key: string) => {\n            if (filterKey !== key) {\n                searchObjFilter = {\n                    ...searchObjFilter,\n                    [key]: searchObj[key],\n                };\n            }\n        });\n\n        if (filterKey === 'createdAt') {\n            searchObjFilter = {\n                ...searchObjFilter,\n                fromAt: undefined,\n                toAt: undefined,\n            };\n        }\n\n        if (filterKey === 'dateOfBirth') {\n            searchObjFilter = {\n                ...searchObjFilter,\n                dateOfBirth: undefined,\n                filterDateBy: undefined,\n            };\n        }\n\n        const searchString = queryString.stringify({ ...searchObjFilter, page: 1 });\n\n        history.push({\n            pathname: location.pathname,\n            search: searchString,\n        });\n    };\n\n    return {\n        filter,\n        pagination,\n        selectFilterSource,\n        changePagination,\n        changeFilterSearch,\n        advanceFilterChange,\n        removeFilterByKey,\n        getCustomers,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}