{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/variant-form/variant-attributes.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Card, Col, Form, Row, Upload } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport imgPlaceholder from \"../../../../assets/images/img-placeholder.svg\";\nimport constants from '../../../../constants';\nimport AttributeItem from './attribute-item';\nimport { useVariant } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VariantAttributes = () => {\n  _s();\n\n  const {\n    variant,\n    updateAttributeTag,\n    setImage\n  } = useVariant();\n  const [fileImages, setFileImages] = useState(variant.images);\n\n  const handleChangeTag = value => {\n    updateAttributeTag(value);\n  };\n\n  const onChangeUploadFile = info => {\n    const {\n      file\n    } = info;\n\n    if (file) {\n      const thumbUrl = window.URL.createObjectURL(file.originFileObj);\n      const fileObj = { ...file,\n        thumbUrl,\n        status: 'done'\n      };\n      setFileImages([fileObj]);\n      setImage(fileObj);\n    }\n  };\n\n  useEffect(() => {\n    setFileImages(variant.images);\n    return () => {};\n  }, [variant]);\n\n  const getVariantImageUrl = () => {\n    if (fileImages.length > 0) {\n      if (typeof fileImages[0] === 'string') {\n        return `${constants.URL_IMG}${fileImages[0]}`;\n      }\n\n      return fileImages[0].thumbUrl;\n    }\n\n    return imgPlaceholder;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Th\\xF4ng tin thu\\u1ED9c t\\xEDnh\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 16,\n        children: variant.attributes.map((attribute, idx) => /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: attribute.name,\n          name: \"attributes\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            noStyle: true,\n            children: /*#__PURE__*/_jsxDEV(AttributeItem, {\n              attribute: attribute,\n              updateAttribute: value => handleChangeTag(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        className: \"attribute-image-section\",\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          showUploadList: false,\n          onChange: onChangeUploadFile,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attribute-image-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: getVariantImageUrl(),\n              shape: 'square',\n              size: 96\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Thay \\u0111\\u1ED5i \\u1EA3nh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VariantAttributes, \"JYsvcSmisSMvigAx98m96rrA/YA=\", false, function () {\n  return [useVariant];\n});\n\n_c = VariantAttributes;\nexport default VariantAttributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"VariantAttributes\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/variant-form/variant-attributes.tsx"],"names":["Avatar","Card","Col","Form","Row","Upload","React","useState","useEffect","constants","AttributeItem","useVariant","VariantAttributes","variant","updateAttributeTag","setImage","fileImages","setFileImages","images","handleChangeTag","value","onChangeUploadFile","info","file","thumbUrl","window","URL","createObjectURL","originFileObj","fileObj","status","getVariantImageUrl","length","URL_IMG","imgPlaceholder","attributes","map","attribute","idx","name"],"mappings":"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","sourcesContent":["import { Avatar, Card, Col, Form, Input, Row, Upload } from 'antd';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport React, { FC, useState, useEffect } from 'react';\nimport imgPlaceholder from '../../../../assets/images/img-placeholder.svg';\nimport constants from '../../../../constants';\nimport { IAttribute } from '../../../../models';\nimport AttributeItem from './attribute-item';\nimport { useVariant } from '../context';\n\nconst VariantAttributes: FC = () => {\n    const { variant, updateAttributeTag, setImage } = useVariant();\n    const [fileImages, setFileImages] = useState<any[]>(variant.images);\n\n    const handleChangeTag = (value: IAttribute) => {\n        updateAttributeTag(value);\n    };\n\n    const onChangeUploadFile = (info: UploadChangeParam<UploadFile<any>>) => {\n        const { file } = info;\n\n        if (file) {\n            const thumbUrl = window.URL.createObjectURL(file.originFileObj);\n            const fileObj = {\n                ...file,\n                thumbUrl,\n                status: 'done',\n            };\n\n            setFileImages([fileObj]);\n\n            setImage(fileObj);\n        }\n    };\n\n    useEffect(() => {\n        setFileImages(variant.images);\n        return () => {};\n    }, [variant]);\n\n    const getVariantImageUrl = (): string => {\n        if (fileImages.length > 0) {\n            if (typeof fileImages[0] === 'string') {\n                return `${constants.URL_IMG}${fileImages[0]}`;\n            }\n\n            return fileImages[0].thumbUrl;\n        }\n\n        return imgPlaceholder;\n    };\n\n    return (\n        <Card title=\"Thông tin thuộc tính\">\n            <Row gutter={24}>\n                <Col span={16}>\n                    {variant.attributes.map((attribute: IAttribute, idx: number) => (\n                        <Form.Item label={attribute.name} name=\"attributes\" key={idx}>\n                            <Form.Item noStyle>\n                                <AttributeItem attribute={attribute} updateAttribute={(value) => handleChangeTag(value)} />\n                            </Form.Item>\n                        </Form.Item>\n                    ))}\n                </Col>\n                <Col span={8} className=\"attribute-image-section\">\n                    <Upload showUploadList={false} onChange={onChangeUploadFile}>\n                        <div className=\"attribute-image-wrapper\">\n                            <Avatar src={getVariantImageUrl()} shape={'square'} size={96} />\n                            <span>Thay đổi ảnh</span>\n                        </div>\n                    </Upload>\n                </Col>\n            </Row>\n        </Card>\n    );\n};\n\nexport default VariantAttributes;\n"]},"metadata":{},"sourceType":"module"}