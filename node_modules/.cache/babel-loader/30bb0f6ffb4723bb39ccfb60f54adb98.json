{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-customer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { debounce } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport customerApi from '../../../../api/customer-api';\nimport SearchDropdown from '../../../../components/search-dropdown';\nimport Customers from './customers';\nimport InputSearch from './input-search';\nimport './search-product.less';\nimport ProviderSearchCustomer from './context';\nimport { useOrderNew } from '../../create/state/context';\nimport { guest } from '../../../../constants/guest';\nimport { EShipTypes } from '../../create/state/interface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchCustomer = ({\n  selectCustomer\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const {\n    shipType,\n    customer,\n    removeCustomer\n  } = useOrderNew();\n  const [loading, setLoading] = useState(false);\n  const [customers, setCustomers] = useState([]);\n  const [optionGuest, setOptionGuest] = useState(true);\n  const onChange = debounce(textString => {\n    if (!textString && shipType === EShipTypes.SelfTransport) {\n      setOptionGuest(true);\n    } else {\n      setOptionGuest(false);\n    }\n\n    if (store._id) {\n      setLoading(true);\n      customerApi.getCustomers({\n        storeId: store._id,\n        page: 1,\n        limit: 10,\n        search: textString\n      }).then(res => {\n        setCustomers(res.data);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, 500);\n  useEffect(() => {\n    if (shipType === EShipTypes.SendShipping) {\n      if ((customer === null || customer === void 0 ? void 0 : customer._id) === guest._id) {\n        removeCustomer();\n      }\n    }\n\n    onChange();\n  }, [shipType]);\n  return /*#__PURE__*/_jsxDEV(ProviderSearchCustomer, {\n    selectCustomer: selectCustomer,\n    children: /*#__PURE__*/_jsxDEV(SearchDropdown, {\n      className: \"search-customer\",\n      input: /*#__PURE__*/_jsxDEV(InputSearch, {\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 64\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Customers, {\n        customers: customers,\n        loading: loading,\n        optionGuest: optionGuest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchCustomer, \"Np/flLzX0XOGxTVA/QZGZWDbPCM=\", false, function () {\n  return [useSelector, useOrderNew];\n});\n\n_c = SearchCustomer;\nexport default SearchCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCustomer\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-customer/index.tsx"],"names":["debounce","React","useState","useEffect","useSelector","customerApi","SearchDropdown","Customers","InputSearch","ProviderSearchCustomer","useOrderNew","guest","EShipTypes","SearchCustomer","selectCustomer","store","state","data","shipType","customer","removeCustomer","loading","setLoading","customers","setCustomers","optionGuest","setOptionGuest","onChange","textString","SelfTransport","_id","getCustomers","storeId","page","limit","search","then","res","finally","SendShipping"],"mappings":"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","sourcesContent":["import { debounce } from 'lodash';\nimport React, { FC, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport customerApi from '../../../../api/customer-api';\nimport SearchDropdown from '../../../../components/search-dropdown';\nimport { ICustomer } from '../../../../models';\nimport { IState } from '../../../../store/rootReducer';\nimport Customers from './customers';\nimport InputSearch from './input-search';\nimport './search-product.less';\nimport ProviderSearchCustomer from './context';\nimport { useOrderNew } from '../../create/state/context';\nimport { guest } from '../../../../constants/guest';\nimport { EShipTypes } from '../../create/state/interface';\n\ninterface Props {\n    selectCustomer: (customer: ICustomer) => void;\n}\n\nconst SearchCustomer: FC<Props> = ({ selectCustomer }) => {\n    const store = useSelector((state: IState) => state.store.data);\n\n    const { shipType, customer, removeCustomer } = useOrderNew();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [customers, setCustomers] = useState<ICustomer[]>([]);\n    const [optionGuest, setOptionGuest] = useState<boolean>(true);\n\n    const onChange = debounce((textString?: string) => {\n        if (!textString && shipType === EShipTypes.SelfTransport) {\n            setOptionGuest(true);\n        } else {\n            setOptionGuest(false);\n        }\n\n        if (store._id) {\n            setLoading(true);\n\n            customerApi\n                .getCustomers({\n                    storeId: store._id,\n                    page: 1,\n                    limit: 10,\n                    search: textString,\n                })\n                .then((res: any) => {\n                    setCustomers(res.data);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, 500);\n\n    useEffect(() => {\n        if (shipType === EShipTypes.SendShipping) {\n            if (customer?._id === guest._id) {\n                removeCustomer();\n            }\n        }\n        onChange();\n    }, [shipType]);\n\n    return (\n        <ProviderSearchCustomer selectCustomer={selectCustomer}>\n            <SearchDropdown className=\"search-customer\" input={<InputSearch onChange={onChange} />}>\n                <Customers\n                    customers={customers}\n                    loading={loading}\n                    optionGuest={optionGuest}\n                />\n            </SearchDropdown>\n        </ProviderSearchCustomer>\n    );\n};\n\nexport default SearchCustomer;\n"]},"metadata":{},"sourceType":"module"}