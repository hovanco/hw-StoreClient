{"ast":null,"code":"import reportApi from '../../../../api/report-api';\nimport { getEndTime, getStartTime } from '../../../../helper/get-time';\n\nasync function loadCountReport({\n  storeId,\n  time\n}) {\n  const response = await reportApi.countReport({\n    storeId,\n    startTime: getStartTime({\n      type: time.type,\n      date: time.value\n    }),\n    endTime: getEndTime({\n      type: time.type,\n      date: time.value\n    })\n  });\n  return response;\n}\n\nasync function loadRevenueReport({\n  storeId,\n  time\n}) {\n  const response = await reportApi.revenueReport({\n    storeId,\n    startTime: getStartTime({\n      type: time.type,\n      date: time.value\n    }),\n    endTime: getEndTime({\n      type: time.type,\n      date: time.value\n    })\n  });\n  return response;\n}\n\nasync function getReportData({\n  storeId,\n  time\n}) {\n  const data = await Promise.all([loadCountReport({\n    storeId,\n    time\n  }), loadRevenueReport({\n    storeId,\n    time\n  })]);\n  return {\n    counts: data[0],\n    revenues: data[1]\n  };\n}\n\nexport { getReportData };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/homepage/state/report/util.ts"],"names":["reportApi","getEndTime","getStartTime","loadCountReport","storeId","time","response","countReport","startTime","type","date","value","endTime","loadRevenueReport","revenueReport","getReportData","data","Promise","all","counts","revenues"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,6BAAzC;;AAQA,eAAeC,eAAf,CAA+B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA/B,EAA8D;AAC1D,QAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,WAAV,CAAsB;AACzCH,IAAAA,OADyC;AAEzCI,IAAAA,SAAS,EAAEN,YAAY,CAAC;AACpBO,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADS;AAEpBC,MAAAA,IAAI,EAAEL,IAAI,CAACM;AAFS,KAAD,CAFkB;AAMzCC,IAAAA,OAAO,EAAEX,UAAU,CAAC;AAChBQ,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADK;AAEhBC,MAAAA,IAAI,EAAEL,IAAI,CAACM;AAFK,KAAD;AANsB,GAAtB,CAAvB;AAYA,SAAOL,QAAP;AACH;;AAED,eAAeO,iBAAf,CAAiC;AAAET,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjC,EAAgE;AAC5D,QAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACc,aAAV,CAAwB;AAC3CV,IAAAA,OAD2C;AAE3CI,IAAAA,SAAS,EAAEN,YAAY,CAAC;AACpBO,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADS;AAEpBC,MAAAA,IAAI,EAAEL,IAAI,CAACM;AAFS,KAAD,CAFoB;AAM3CC,IAAAA,OAAO,EAAEX,UAAU,CAAC;AAChBQ,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADK;AAEhBC,MAAAA,IAAI,EAAEL,IAAI,CAACM;AAFK,KAAD;AANwB,GAAxB,CAAvB;AAYA,SAAOL,QAAP;AACH;;AAED,eAAeS,aAAf,CAA6B;AAAEX,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA7B,EAA4D;AACxD,QAAMW,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC3Bf,eAAe,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,CADY,EAE3BQ,iBAAiB,CAAC;AAAET,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,CAFU,CAAZ,CAAnB;AAKA,SAAO;AACHc,IAAAA,MAAM,EAAEH,IAAI,CAAC,CAAD,CADT;AAEHI,IAAAA,QAAQ,EAAEJ,IAAI,CAAC,CAAD;AAFX,GAAP;AAIH;;AAED,SAASD,aAAT","sourcesContent":["import reportApi from '../../../../api/report-api';\nimport { getEndTime, getStartTime } from '../../../../helper/get-time';\nimport { ITimeReport } from './interface';\n\ninterface IDataValue {\n    storeId: string;\n    time: ITimeReport;\n}\n\nasync function loadCountReport({ storeId, time }: IDataValue) {\n    const response = await reportApi.countReport({\n        storeId,\n        startTime: getStartTime({\n            type: time.type,\n            date: time.value,\n        }),\n        endTime: getEndTime({\n            type: time.type,\n            date: time.value,\n        }),\n    });\n\n    return response;\n}\n\nasync function loadRevenueReport({ storeId, time }: IDataValue) {\n    const response = await reportApi.revenueReport({\n        storeId,\n        startTime: getStartTime({\n            type: time.type,\n            date: time.value,\n        }),\n        endTime: getEndTime({\n            type: time.type,\n            date: time.value,\n        }),\n    });\n\n    return response;\n}\n\nasync function getReportData({ storeId, time }: IDataValue) {\n    const data = await Promise.all([\n        loadCountReport({ storeId, time }),\n        loadRevenueReport({ storeId, time }),\n    ]);\n\n    return {\n        counts: data[0],\n        revenues: data[1],\n    };\n}\n\nexport { getReportData };\n"]},"metadata":{},"sourceType":"module"}