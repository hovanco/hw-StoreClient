{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/state/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useEffect, useMemo, useReducer, useContext, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport productApi from '../../../../api/product-api';\nimport { initialState, reducer } from './reducer';\nimport * as types from './types';\nimport { get } from 'lodash';\nimport { storeAction } from '../../../../reducers/storeState/action';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContext = {\n  state: initialState,\n  dispatch: () => {},\n  loadProduct: () => {}\n};\nconst Context = /*#__PURE__*/createContext(initialContext);\n\nconst ProviderProductDetail = ({\n  children\n}) => {\n  _s();\n\n  const params = useParams();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const storeObj = useSelector(state => state.store.data);\n  const dispatchRedux = useDispatch();\n  const loadProduct = useCallback(async ({\n    storeId,\n    productId\n  }) => {\n    try {\n      dispatch({\n        type: types.LOADING\n      });\n      const productResponse = await productApi.getProduct({\n        storeId,\n        productId\n      });\n      await dispatch({\n        type: types.LOAD_PRODUCT_SUCCESS,\n        payload: productResponse\n      });\n      await dispatchRedux(storeAction.getAttributes(storeId));\n      const attributes = get(productResponse, 'attributes');\n      const hasAttributes = !!attributes && attributes.length > 0;\n      const paramsGetStocks = hasAttributes ? {\n        storeId,\n        parentId: productId\n      } : {\n        storeId,\n        productId\n      };\n      await dispatchRedux(storeAction.getStocks(paramsGetStocks));\n    } catch (error) {\n      dispatch({\n        type: types.LOAD_PRODUCT_ERROR\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (storeObj._id) {\n      loadProduct({\n        storeId: storeObj._id,\n        productId: params.productId\n      });\n      dispatchRedux(storeAction.getAttributes(storeObj._id));\n      dispatchRedux(storeAction.getStocks({\n        storeId: storeObj._id,\n        parentId: params.productId\n      }));\n    } // eslint-disable-next-line\n\n  }, [storeObj._id]);\n  const value = useMemo(() => ({\n    state,\n    loadProduct,\n    dispatch\n  }), [state, loadProduct, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProviderProductDetail, \"98L5LiXf/quNDbr/wz7J6XofK34=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = ProviderProductDetail;\n\nconst useProductDetail = () => {\n  _s2();\n\n  const {\n    state,\n    loadProduct,\n    dispatch\n  } = useContext(Context);\n\n  const updateProduct = product => {\n    dispatch({\n      type: types.UPDATE_PRODUCT,\n      payload: product\n    });\n  };\n\n  const setLoading = value => {\n    dispatch({\n      type: types.SET_LOADING,\n      payload: value\n    });\n  };\n\n  return { ...state,\n    loadProduct,\n    updateProduct,\n    setLoading\n  };\n};\n\n_s2(useProductDetail, \"SIQclsPT+lUVA+RcLUS4Jjzr5mo=\");\n\nexport { ProviderProductDetail, useProductDetail };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderProductDetail\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/state/context.tsx"],"names":["React","createContext","useEffect","useMemo","useReducer","useContext","useCallback","useDispatch","useSelector","productApi","initialState","reducer","types","get","storeAction","useParams","initialContext","state","dispatch","loadProduct","Context","ProviderProductDetail","children","params","storeObj","store","data","dispatchRedux","storeId","productId","type","LOADING","productResponse","getProduct","LOAD_PRODUCT_SUCCESS","payload","getAttributes","attributes","hasAttributes","length","paramsGetStocks","parentId","getStocks","error","LOAD_PRODUCT_ERROR","_id","value","useProductDetail","updateProduct","product","UPDATE_PRODUCT","setLoading","SET_LOADING"],"mappings":"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","sourcesContent":["import React, {\n    createContext,\n    useEffect,\n    FC,\n    ReactNode,\n    useMemo,\n    useReducer,\n    useContext,\n    useCallback,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport productApi from '../../../../api/product-api';\nimport { IContext } from './inteface';\nimport { initialState, reducer } from './reducer';\nimport * as types from './types';\nimport { get } from 'lodash';\nimport { storeAction } from '../../../../reducers/storeState/action';\nimport { IState } from '../../../../store/rootReducer';\nimport { useParams } from 'react-router-dom';\nimport { IProductDetailParams } from '../../interface';\nimport { IProduct } from '../../../../models';\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst initialContext = {\n    state: initialState,\n    dispatch: () => {},\n    loadProduct: () => {},\n};\nconst Context = createContext<IContext>(initialContext);\n\nconst ProviderProductDetail: FC<Props> = ({ children }) => {\n    const params = useParams<IProductDetailParams>();\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const storeObj = useSelector((state: IState) => state.store.data);\n\n    const dispatchRedux = useDispatch();\n\n    const loadProduct = useCallback(\n        async ({ storeId, productId }: { storeId: string; productId: string }) => {\n            try {\n                dispatch({ type: types.LOADING });\n\n                const productResponse = await productApi.getProduct({\n                    storeId,\n                    productId,\n                });\n\n                await dispatch({\n                    type: types.LOAD_PRODUCT_SUCCESS,\n                    payload: productResponse,\n                });\n\n                await dispatchRedux(storeAction.getAttributes(storeId));\n\n                const attributes = get(productResponse, 'attributes');\n                const hasAttributes = !!attributes && attributes.length > 0;\n\n                const paramsGetStocks = hasAttributes\n                    ? { storeId, parentId: productId }\n                    : { storeId, productId };\n\n                await dispatchRedux(storeAction.getStocks(paramsGetStocks));\n            } catch (error) {\n                dispatch({\n                    type: types.LOAD_PRODUCT_ERROR,\n                });\n            }\n        },\n        []\n    );\n\n    useEffect(() => {\n        if (storeObj._id) {\n            loadProduct({\n                storeId: storeObj._id,\n                productId: params.productId,\n            });\n            dispatchRedux(storeAction.getAttributes(storeObj._id));\n            dispatchRedux(\n                storeAction.getStocks({\n                    storeId: storeObj._id,\n                    parentId: params.productId,\n                })\n            );\n        }\n        // eslint-disable-next-line\n    }, [storeObj._id]);\n\n    const value = useMemo(() => ({ state, loadProduct, dispatch }), [state, loadProduct, dispatch]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nconst useProductDetail = () => {\n    const { state, loadProduct, dispatch } = useContext(Context);\n\n    const updateProduct = (product: IProduct) => {\n        dispatch({\n            type: types.UPDATE_PRODUCT,\n            payload: product,\n        });\n    };\n\n    const setLoading = (value: boolean) => {\n        dispatch({\n            type: types.SET_LOADING,\n            payload: value,\n        });\n    };\n\n    return {\n        ...state,\n        loadProduct,\n        updateProduct,\n        setLoading,\n    };\n};\n\nexport { ProviderProductDetail, useProductDetail };\n"]},"metadata":{},"sourceType":"module"}