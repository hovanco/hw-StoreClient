{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/return/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { Checkbox, Col, Dropdown, Menu, message, Modal, Row, Space, Typography } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../api/order-api';\nimport { InsaTable, PageTopWrapper } from '../../../components';\nimport constants from '../../../constants';\nimport formatMoney from '../../../helper/format-money';\nimport { DefaultLayout } from '../../../layout';\nimport { ORDER_STATUS } from '../../../models';\nimport theme from '../../../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Mã đơn hàng',\n  align: 'center',\n  dataIndex: 'code',\n  render: code => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"blue-text\",\n    children: code\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 35\n  }, this)\n}, {\n  title: 'Khách hàng',\n  align: 'center',\n  render: order => {\n    var _order$customer, _order$customer2, _order$customer3;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blue-text\",\n        children: [(_order$customer = order.customer) === null || _order$customer === void 0 ? void 0 : _order$customer.phoneNo, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), (_order$customer2 = order.customer) === null || _order$customer2 === void 0 ? void 0 : _order$customer2.name, \" \", (_order$customer3 = order.customer) === null || _order$customer3 === void 0 ? void 0 : _order$customer3.address]\n    }, void 0, true);\n  }\n}, {\n  title: 'Ngày tạo đơn',\n  align: 'center',\n  dataIndex: 'createdAt',\n  key: 'createdAt',\n  render: text => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [moment(text).format('HH:mm'), \" \", moment(text).format('DD/MM/YYYY')]\n  }, void 0, true)\n}, {\n  title: 'Kho hàng',\n  align: 'center',\n  dataIndex: 'warehouseId',\n  key: 'warehouseId',\n  render: warehouseId => warehouseId.name\n}, {\n  title: 'Người tạo',\n  align: 'center',\n  dataIndex: 'createdBy',\n  key: 'createdBy',\n  render: createdBy => /*#__PURE__*/_jsxDEV(Space, {\n    size: 5,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      src: `${constants.URL_IMG}${createdBy.picture}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), createdBy.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this)\n}, {\n  title: 'Tổng tiền',\n  align: 'center',\n  dataIndex: 'totalPrice',\n  render: totalPrice => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [formatMoney(totalPrice), \" VND\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 33\n  }, this)\n}, {\n  title: 'Ghi chú',\n  align: 'center',\n  dataIndex: '',\n  key: 'note',\n  render: order => {\n    const text = order.note && order.note.length > 0 ? order.note : order.deliveryOptions && order.deliveryOptions.customerNote ? order.deliveryOptions.customerNote : '---';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 20\n    }, this);\n  }\n}];\nconst PAGE_NUMBER_DEFAULT = 1;\nconst LIMIT_NUMBER_DEFAULT = 15;\n\nconst useOrdersReturn = () => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(PAGE_NUMBER_DEFAULT);\n  const [limit, setLImit] = useState(LIMIT_NUMBER_DEFAULT);\n  const [orders, setOrders] = useState({\n    data: [],\n    total: 0\n  });\n\n  const onChangePagination = (pageNumber, pageSize) => {\n    setPage(pageNumber);\n    setLImit(pageSize || LIMIT_NUMBER_DEFAULT);\n  };\n\n  const loadOrderReturn = useCallback(async arg => {\n    try {\n      const response = await orderApi.getOrder({\n        id: store._id,\n        status: ORDER_STATUS.CANCELED,\n        page,\n        limit\n      });\n      setOrders(response);\n    } catch (error) {} finally {\n      setLoading(false);\n    }\n  }, [limit, page, store._id]);\n  useEffect(() => {\n    loadOrderReturn({\n      page,\n      limit,\n      storeId: store._id\n    });\n  }, [page, limit, store._id, loadOrderReturn]);\n  return { ...orders,\n    loading,\n    page,\n    limit,\n    loadOrderReturn,\n    onChangePagination\n  };\n};\n\n_s(useOrdersReturn, \"P7Yaouj5FDzAeox4wvvxTVGRiV8=\", false, function () {\n  return [useSelector];\n});\n\nconst OrderReturnPage = () => {\n  _s2();\n\n  const store = useSelector(state => state.store.data);\n  const {\n    loading,\n    data,\n    total,\n    page,\n    limit,\n    loadOrderReturn,\n    onChangePagination\n  } = useOrdersReturn();\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [widthTable, setWidthTable] = useState(0);\n  const [loadingRemoveOrders, setLoadingRemoveOrders] = useState(false);\n\n  const onSelectChange = selectedRowKeys => {\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const selectAll = () => {\n    const orderKeys = data.map(order => order._id);\n    setSelectedRowKeys(orderKeys);\n  };\n\n  const removeAllSelect = () => {\n    setSelectedRowKeys([]);\n  };\n\n  const removeOrderSelect = () => {\n    Modal.confirm({\n      title: 'Xóa Đơn Hàng?',\n      content: `Bạn chắc chắn muốn xóa đơn hàng?`,\n      okText: 'Xóa',\n      okType: 'danger',\n      cancelText: 'Hủy',\n\n      onOk() {\n        if (store._id) {\n          setLoadingRemoveOrders(true);\n          Promise.all(selectedRowKeys.map(async orderId => {\n            await orderApi.removeOrder({\n              storeId: store._id,\n              orderId\n            });\n            return true;\n          })).then(() => {\n            message.success(`Đã xóa ${selectedRowKeys.length} đơn hàng`);\n            setSelectedRowKeys([]);\n            loadOrderReturn({\n              page,\n              limit\n            });\n          }).catch(error => {\n            message.error('Lỗi xóa đơn hàng');\n          }).finally(() => {\n            setLoadingRemoveOrders(false);\n          });\n        }\n      }\n\n    });\n  };\n\n  const handleMenuClick = e => {\n    switch (e.key) {\n      case 'remove':\n        removeOrderSelect();\n        break;\n\n      case 'unselect':\n        setSelectedRowKeys([]);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: handleMenuClick,\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"X\\xF3a \\u0111\\u01A1n h\\xE0ng\"\n    }, \"remove\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"B\\u1ECF ch\\u1ECDn\"\n    }, \"unselect\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n\n  useEffect(() => {\n    var _document;\n\n    const antTableHeadEle = (_document = document) === null || _document === void 0 ? void 0 : _document.querySelector('.order-tbl .ant-table-thead');\n    const customerActionsWidth = antTableHeadEle ? antTableHeadEle.clientWidth : 0;\n    setWidthTable(customerActionsWidth); // eslint-disable-next-line\n  }, []);\n\n  const renderColumnTitle = () => {\n    if (selectedRowKeys.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        onClick: selectAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        zIndex: 100,\n        background: '#fff',\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10,\n        width: widthTable\n      },\n      children: /*#__PURE__*/_jsxDEV(Dropdown.Button, {\n        overlay: menu,\n        buttonsRender: ([leftButton, rightButton]) => [leftButton, /*#__PURE__*/React.cloneElement(rightButton, {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Ch\\u1ECDn thao t\\xE1c \", /*#__PURE__*/_jsxDEV(CaretDownOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true),\n          loading: loadingRemoveOrders,\n          icon: undefined\n        })],\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            onClick: removeAllSelect,\n            checked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u0110\\xE3 ch\\u1ECDn \", selectedRowKeys.length, \" \\u0111\\u01A1n h\\xE0ng\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n    columnTitle: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 45\n      },\n      children: renderColumnTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 22\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    title: \"Orders\",\n    children: [/*#__PURE__*/_jsxDEV(PageTopWrapper, {\n      leftContent: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 3,\n        children: \"KH\\xC1CH TR\\u1EA2 H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        padding: theme.spacing.m\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(InsaTable, {\n          rowSelection: rowSelection,\n          rowKey: \"_id\",\n          columns: columns,\n          dataSource: data,\n          bordered: true,\n          name: \"Danh s\\xE1ch \\u0111\\u01A1n h\\xE0ng\",\n          className: \"order-tbl\",\n          hasDefaultColumn: false,\n          loading: loading,\n          pagination: {\n            pageSize: limit,\n            current: page,\n            total,\n            onChange: onChangePagination\n          },\n          onRow: record => {\n            return {\n              onClick: event => {\n                if (selectedRowKeys.includes(record._id)) {\n                  const newSelectedRowKeys = selectedRowKeys.filter(key => key !== record._id);\n                  setSelectedRowKeys(newSelectedRowKeys);\n                } else {\n                  setSelectedRowKeys([...selectedRowKeys, record._id]);\n                }\n              }\n            };\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(OrderReturnPage, \"V5L405JJunQbWXkJR1iqTwaEJjw=\", false, function () {\n  return [useSelector, useOrdersReturn];\n});\n\n_c = OrderReturnPage;\nexport default OrderReturnPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderReturnPage\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/return/index.tsx"],"names":["CaretDownOutlined","Checkbox","Col","Dropdown","Menu","message","Modal","Row","Space","Typography","Avatar","moment","React","useCallback","useEffect","useState","useSelector","orderApi","InsaTable","PageTopWrapper","constants","formatMoney","DefaultLayout","ORDER_STATUS","theme","columns","title","align","dataIndex","render","code","order","customer","phoneNo","name","address","key","text","format","warehouseId","createdBy","URL_IMG","picture","totalPrice","note","length","deliveryOptions","customerNote","PAGE_NUMBER_DEFAULT","LIMIT_NUMBER_DEFAULT","useOrdersReturn","store","state","data","loading","setLoading","page","setPage","limit","setLImit","orders","setOrders","total","onChangePagination","pageNumber","pageSize","loadOrderReturn","arg","response","getOrder","id","_id","status","CANCELED","error","storeId","OrderReturnPage","selectedRowKeys","setSelectedRowKeys","widthTable","setWidthTable","loadingRemoveOrders","setLoadingRemoveOrders","onSelectChange","selectAll","orderKeys","map","removeAllSelect","removeOrderSelect","confirm","content","okText","okType","cancelText","onOk","Promise","all","orderId","removeOrder","then","success","catch","finally","handleMenuClick","e","menu","antTableHeadEle","document","querySelector","customerActionsWidth","clientWidth","renderColumnTitle","position","top","left","bottom","right","zIndex","background","display","alignItems","paddingLeft","width","leftButton","rightButton","cloneElement","children","icon","undefined","rowSelection","onChange","columnTitle","padding","spacing","m","current","record","onClick","event","includes","newSelectedRowKeys","filter"],"mappings":"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","sourcesContent":["import { CaretDownOutlined } from '@ant-design/icons';\nimport { Checkbox, Col, Dropdown, Menu, message, Modal, Row, Space, Typography } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { ColumnsType } from 'antd/lib/table';\nimport moment from 'moment';\nimport React, { FC, ReactElement, useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../api/order-api';\nimport { InsaTable, PageTopWrapper } from '../../../components';\nimport constants from '../../../constants';\nimport formatMoney from '../../../helper/format-money';\nimport { DefaultLayout } from '../../../layout';\nimport { IOrder, ORDER_STATUS } from '../../../models';\nimport { IState } from '../../../store/rootReducer';\nimport theme from '../../../theme';\n\nconst columns: ColumnsType<IOrder> = [\n    {\n        title: 'Mã đơn hàng',\n        align: 'center',\n        dataIndex: 'code',\n        render: (code: string) => <span className=\"blue-text\">{code}</span>,\n    },\n    {\n        title: 'Khách hàng',\n        align: 'center',\n        render: (order) => (\n            <>\n                <span className=\"blue-text\">{order.customer?.phoneNo} </span>\n                {order.customer?.name} {order.customer?.address}\n            </>\n        ),\n    },\n    {\n        title: 'Ngày tạo đơn',\n        align: 'center',\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        render: (text: string) => (\n            <>\n                {moment(text).format('HH:mm')} {moment(text).format('DD/MM/YYYY')}\n            </>\n        ),\n    },\n    {\n        title: 'Kho hàng',\n        align: 'center',\n        dataIndex: 'warehouseId',\n        key: 'warehouseId',\n        render: (warehouseId) => warehouseId.name,\n    },\n\n    {\n        title: 'Người tạo',\n        align: 'center',\n        dataIndex: 'createdBy',\n        key: 'createdBy',\n        render: (createdBy) => (\n            <Space size={5}>\n                <Avatar src={`${constants.URL_IMG}${createdBy.picture}`} />\n                {createdBy.name}\n            </Space>\n        ),\n    },\n\n    {\n        title: 'Tổng tiền',\n        align: 'center',\n        dataIndex: 'totalPrice',\n        render: (totalPrice) => <span>{formatMoney(totalPrice)} VND</span>,\n    },\n\n    {\n        title: 'Ghi chú',\n        align: 'center',\n        dataIndex: '',\n        key: 'note',\n        render: (order: IOrder) => {\n            const text =\n                order.note && order.note.length > 0\n                    ? order.note\n                    : order.deliveryOptions && order.deliveryOptions.customerNote\n                    ? order.deliveryOptions.customerNote\n                    : '---';\n\n            return <span>{text}</span>;\n        },\n    },\n];\n\ninterface IOrderReturn {\n    data: IOrder[];\n    total: number;\n}\n\nconst PAGE_NUMBER_DEFAULT = 1;\nconst LIMIT_NUMBER_DEFAULT = 15;\n\nconst useOrdersReturn = () => {\n    const store = useSelector((state: IState) => state.store.data);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [page, setPage] = useState<number>(PAGE_NUMBER_DEFAULT);\n    const [limit, setLImit] = useState<number>(LIMIT_NUMBER_DEFAULT);\n\n    const [orders, setOrders] = useState<IOrderReturn>({\n        data: [],\n        total: 0,\n    });\n\n    const onChangePagination = (pageNumber: number, pageSize?: number) => {\n        setPage(pageNumber);\n        setLImit(pageSize || LIMIT_NUMBER_DEFAULT);\n    };\n\n    const loadOrderReturn = useCallback(\n        async (arg) => {\n            try {\n                const response = await orderApi.getOrder({\n                    id: store._id as string,\n                    status: ORDER_STATUS.CANCELED,\n                    page,\n                    limit,\n                });\n\n                setOrders(response);\n            } catch (error) {\n            } finally {\n                setLoading(false);\n            }\n        },\n        [limit, page, store._id]\n    );\n\n    useEffect(() => {\n        loadOrderReturn({\n            page,\n            limit,\n            storeId: store._id,\n        });\n    }, [page, limit, store._id, loadOrderReturn]);\n\n    return {\n        ...orders,\n        loading,\n        page,\n        limit,\n        loadOrderReturn,\n        onChangePagination,\n    };\n};\n\nconst OrderReturnPage: FC = () => {\n    const store = useSelector((state: IState) => state.store.data);\n    const {\n        loading,\n        data,\n        total,\n        page,\n        limit,\n        loadOrderReturn,\n        onChangePagination,\n    } = useOrdersReturn();\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState<any[]>([]);\n    const [widthTable, setWidthTable] = useState<number>(0);\n    const [loadingRemoveOrders, setLoadingRemoveOrders] = useState<boolean>(false);\n\n    const onSelectChange = (selectedRowKeys: any) => {\n        setSelectedRowKeys(selectedRowKeys);\n    };\n\n    const selectAll = () => {\n        const orderKeys = data.map((order: IOrder) => order._id);\n        setSelectedRowKeys(orderKeys);\n    };\n\n    const removeAllSelect = () => {\n        setSelectedRowKeys([]);\n    };\n\n    const removeOrderSelect = () => {\n        Modal.confirm({\n            title: 'Xóa Đơn Hàng?',\n            content: `Bạn chắc chắn muốn xóa đơn hàng?`,\n            okText: 'Xóa',\n            okType: 'danger',\n            cancelText: 'Hủy',\n\n            onOk() {\n                if (store._id) {\n                    setLoadingRemoveOrders(true);\n                    Promise.all(\n                        selectedRowKeys.map(async (orderId: string) => {\n                            await orderApi.removeOrder({\n                                storeId: store._id as string,\n                                orderId,\n                            });\n\n                            return true;\n                        })\n                    )\n                        .then(() => {\n                            message.success(`Đã xóa ${selectedRowKeys.length} đơn hàng`);\n                            setSelectedRowKeys([]);\n\n                            loadOrderReturn({ page, limit });\n                        })\n                        .catch((error) => {\n                            message.error('Lỗi xóa đơn hàng');\n                        })\n                        .finally(() => {\n                            setLoadingRemoveOrders(false);\n                        });\n                }\n            },\n        });\n    };\n\n    const handleMenuClick = (e: any) => {\n        switch (e.key) {\n            case 'remove':\n                removeOrderSelect();\n                break;\n            case 'unselect':\n                setSelectedRowKeys([]);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"remove\">Xóa đơn hàng</Menu.Item>\n            <Menu.Item key=\"unselect\">Bỏ chọn</Menu.Item>\n        </Menu>\n    );\n\n    useEffect(() => {\n        const antTableHeadEle: HTMLTableHeaderCellElement | null = document?.querySelector(\n            '.order-tbl .ant-table-thead'\n        );\n        const customerActionsWidth: number = antTableHeadEle ? antTableHeadEle.clientWidth : 0;\n        setWidthTable(customerActionsWidth);\n        // eslint-disable-next-line\n    }, []);\n\n    const renderColumnTitle = () => {\n        if (selectedRowKeys.length === 0) {\n            return <Checkbox onClick={selectAll} />;\n        }\n\n        return (\n            <div\n                style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                    right: 0,\n                    zIndex: 100,\n                    background: '#fff',\n                    display: 'flex',\n                    alignItems: 'center',\n                    paddingLeft: 10,\n                    width: widthTable,\n                }}\n            >\n                <Dropdown.Button\n                    overlay={menu}\n                    buttonsRender={([leftButton, rightButton]) => [\n                        leftButton,\n                        React.cloneElement(rightButton as ReactElement, {\n                            children: (\n                                <>\n                                    Chọn thao tác <CaretDownOutlined />\n                                </>\n                            ),\n                            loading: loadingRemoveOrders,\n                            icon: undefined,\n                        }),\n                    ]}\n                >\n                    <Space>\n                        <Checkbox onClick={removeAllSelect} checked />\n                        <span>Đã chọn {selectedRowKeys.length} đơn hàng</span>\n                    </Space>\n                </Dropdown.Button>\n            </div>\n        );\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n        columnTitle: <div style={{ width: 45 }}>{renderColumnTitle()}</div>,\n    };\n\n    return (\n        <DefaultLayout title=\"Orders\">\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>KHÁCH TRẢ HÀNG</Typography.Title>}\n            />\n            {/* TODO: Show after add feature */}\n            {/* <Row justify=\"end\" align=\"middle\" style={{ height: 74, paddingRight: theme.spacing.m }}>\n                <Space>\n                    <InsaButton\n                        icon={<img style={{ marginRight: 10 }} src={iconDownload} alt=\"icon\" />}\n                    >\n                        <Typography.Text type=\"secondary\">Nhập file</Typography.Text>\n                    </InsaButton>\n                    <InsaButton\n                        icon={<img style={{ marginRight: 10 }} src={iconUpload} alt=\"icon\" />}\n                    >\n                        <Typography.Text type=\"secondary\">Xuất file</Typography.Text>\n                    </InsaButton>\n                </Space>\n            </Row> */}\n\n            <Row\n                style={{\n                    padding: theme.spacing.m,\n                }}\n            >\n                <Col span={24}>\n                    <InsaTable\n                        rowSelection={rowSelection}\n                        rowKey=\"_id\"\n                        columns={columns}\n                        dataSource={data}\n                        bordered\n                        name=\"Danh sách đơn hàng\"\n                        className=\"order-tbl\"\n                        hasDefaultColumn={false}\n                        loading={loading}\n                        pagination={{\n                            pageSize: limit,\n                            current: page,\n                            total,\n                            onChange: onChangePagination,\n                        }}\n                        onRow={(record) => {\n                            return {\n                                onClick: (event) => {\n                                    if (selectedRowKeys.includes(record._id)) {\n                                        const newSelectedRowKeys = selectedRowKeys.filter(\n                                            (key) => key !== record._id\n                                        );\n                                        setSelectedRowKeys(newSelectedRowKeys);\n                                    } else {\n                                        setSelectedRowKeys([...selectedRowKeys, record._id]);\n                                    }\n                                },\n                            };\n                        }}\n                    />\n                </Col>\n            </Row>\n        </DefaultLayout>\n    );\n};\n\nexport default OrderReturnPage;\n"]},"metadata":{},"sourceType":"module"}