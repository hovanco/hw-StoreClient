{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/product-form-properties/table-product-variant.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { debounce } from 'lodash';\nimport formatMoney, { formatterInput, parserInput } from '../../../../helper/format-money';\nimport { Input, Form, Typography, InputNumber } from 'antd';\nimport { InsaTable } from '../../../../components';\nimport ModalUpdateVariantQuantity from './modal-update-variant-quantity/index';\nimport useVariants from '../../context/use-variant';\nimport useStocks from '../../context/use-stock';\nimport './table-product-variant.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableProductVariant = () => {\n  _s();\n\n  const {\n    variants,\n    setVariants\n  } = useVariants();\n  const {\n    stocks\n  } = useStocks();\n  const [visible, setVisible] = useState(false);\n\n  const toggleModal = () => setVisible(!visible);\n\n  const columns = [{\n    title: 'Thuộc tính sản phẩm',\n    align: 'center',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: record.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue-text\",\n        children: record.attributes.map(item => item.tags).join(' - ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Mã SKU',\n    align: 'center',\n    dataIndex: 'sku',\n    key: 'sku',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Input, {\n      defaultValue: text,\n      onChange: e => updateDataSource(record._id, {\n        sku: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Mã Barcode',\n    align: 'center',\n    dataIndex: 'code',\n    key: 'code',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Input, {\n      defaultValue: text,\n      onChange: e => updateDataSource(record._id, {\n        code: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Tổng số lượng',\n    align: 'center',\n    dataIndex: 'length',\n    key: 'length',\n    width: 140,\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Typography.Link, {\n      onClick: toggleModal,\n      underline: true,\n      children: [\"Kh\\u1EA3 d\\u1EE5ng: \", formatMoney(getVariantQuantity(record._id))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Giá bán',\n    align: 'center',\n    dataIndex: 'price',\n    key: 'price',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(InputNumber, {\n      defaultValue: Number(text),\n      formatter: formatterInput,\n      parser: parserInput,\n      onChange: value => updateDataSource(record._id, {\n        price: Number(value),\n        wholesalePrice: Number(value)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)\n  }];\n  const updateDataSource = debounce((rowId, newProperty) => {\n    const newDataSource = variants.map(row => {\n      if (row._id === rowId) return { ...row,\n        ...newProperty\n      };\n      return row;\n    });\n    setVariants(newDataSource);\n  }, 750);\n  const getVariantQuantity = useCallback(variantId => {\n    let targetStocks = stocks.filter(item => item.productId._id === variantId);\n    return targetStocks.reduce((prevValue, currValue) => prevValue + currValue.quantity, 0);\n  }, [stocks]);\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"variants\",\n    noStyle: true,\n    children: [variants.length > 0 ? /*#__PURE__*/_jsxDEV(InsaTable, {\n      rowKey: \"_id\",\n      columns: columns,\n      dataSource: variants,\n      bordered: true,\n      className: \"order-tbl table-product-variant\",\n      pagination: false,\n      title: undefined,\n      footer: undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(ModalUpdateVariantQuantity, {\n      visible: visible,\n      toggle: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableProductVariant, \"SvSV6h9BrgPU8Mp3yZwFcnNr+/8=\", false, function () {\n  return [useVariants, useStocks];\n});\n\n_c = TableProductVariant;\nexport default TableProductVariant;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableProductVariant\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/product-form-properties/table-product-variant.tsx"],"names":["React","useState","useCallback","debounce","formatMoney","formatterInput","parserInput","Input","Form","Typography","InputNumber","InsaTable","ModalUpdateVariantQuantity","useVariants","useStocks","TableProductVariant","variants","setVariants","stocks","visible","setVisible","toggleModal","columns","title","align","dataIndex","key","render","text","record","name","attributes","map","item","tags","join","e","updateDataSource","_id","sku","target","value","code","width","getVariantQuantity","Number","price","wholesalePrice","rowId","newProperty","newDataSource","row","variantId","targetStocks","filter","productId","reduce","prevValue","currValue","quantity","length","undefined"],"mappings":"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","sourcesContent":["import React, { FC, useState, useCallback } from 'react';\nimport { ColumnType } from 'antd/lib/table';\nimport { debounce } from 'lodash';\nimport { IAttribute, IStock, IVariant } from '../../../../models';\nimport formatMoney, { formatterInput, parserInput } from '../../../../helper/format-money';\n\nimport { Input, Form, Typography, InputNumber } from 'antd';\nimport { InsaTable } from '../../../../components';\nimport ModalUpdateVariantQuantity from './modal-update-variant-quantity/index';\nimport useVariants from '../../context/use-variant';\nimport useStocks from '../../context/use-stock';\n\nimport './table-product-variant.less';\n\ninterface Props {}\n\nconst TableProductVariant: FC<Props> = () => {\n    const { variants, setVariants } = useVariants();\n    const { stocks } = useStocks();\n    const [visible, setVisible] = useState<boolean>(false);\n\n    const toggleModal = () => setVisible(!visible);\n\n    const columns: ColumnType<any>[] = [\n        {\n            title: 'Thuộc tính sản phẩm',\n            align: 'center',\n            dataIndex: 'name',\n            key: 'name',\n            render: (text: string, record: IVariant) => (\n                <div>\n                    <div>{record.name}</div>\n                    <div className=\"blue-text\">\n                        {record.attributes.map((item: IAttribute) => item.tags).join(' - ')}\n                    </div>\n                </div>\n            ),\n        },\n        {\n            title: 'Mã SKU',\n            align: 'center',\n            dataIndex: 'sku',\n            key: 'sku',\n            render: (text: string, record: IVariant) => (\n                <Input\n                    defaultValue={text}\n                    onChange={(e) => updateDataSource(record._id, { sku: e.target.value })}\n                />\n            ),\n        },\n        {\n            title: 'Mã Barcode',\n            align: 'center',\n            dataIndex: 'code',\n            key: 'code',\n            render: (text: string, record: IVariant) => (\n                <Input\n                    defaultValue={text}\n                    onChange={(e) => updateDataSource(record._id, { code: e.target.value })}\n                />\n            ),\n        },\n        {\n            title: 'Tổng số lượng',\n            align: 'center',\n            dataIndex: 'length',\n            key: 'length',\n            width: 140,\n            render: (text: string, record: any) => (\n                <Typography.Link onClick={toggleModal} underline>\n                    Khả dụng: {formatMoney(getVariantQuantity(record._id))}\n                </Typography.Link>\n            ),\n        },\n        {\n            title: 'Giá bán',\n            align: 'center',\n            dataIndex: 'price',\n            key: 'price',\n            render: (text: string, record: any) => (\n                <InputNumber\n                    defaultValue={Number(text)}\n                    formatter={formatterInput}\n                    parser={parserInput}\n                    onChange={(value) =>\n                        updateDataSource(record._id, {\n                            price: Number(value),\n                            wholesalePrice: Number(value),\n                        })\n                    }\n                />\n            ),\n        },\n    ];\n\n    const updateDataSource = debounce((rowId: string, newProperty: any) => {\n        const newDataSource = variants.map((row: IVariant) => {\n            if (row._id === rowId) return { ...row, ...newProperty };\n\n            return row;\n        });\n\n        setVariants(newDataSource);\n    }, 750);\n\n    const getVariantQuantity = useCallback(\n        (variantId: string) => {\n            let targetStocks = stocks.filter((item: IStock) => item.productId._id === variantId);\n\n            return targetStocks.reduce(\n                (prevValue: number, currValue: IStock) => prevValue + currValue.quantity,\n                0\n            );\n        },\n        [stocks]\n    );\n\n    return (\n        <Form.Item name=\"variants\" noStyle>\n            {variants.length > 0 ? (\n                <InsaTable\n                    rowKey=\"_id\"\n                    columns={columns}\n                    dataSource={variants}\n                    bordered\n                    className=\"order-tbl table-product-variant\"\n                    pagination={false}\n                    title={undefined}\n                    footer={undefined}\n                />\n            ) : (\n                <></>\n            )}\n\n            <ModalUpdateVariantQuantity visible={visible} toggle={toggleModal} />\n        </Form.Item>\n    );\n};\n\nexport default TableProductVariant;\n"]},"metadata":{},"sourceType":"module"}