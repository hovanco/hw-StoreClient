{"ast":null,"code":"export const twoArrayMixer = (mainArray, dependArray) => {\n  if (!mainArray.length) return dependArray.map(item => [item]);\n  if (!dependArray.length) return mainArray.map(item => Array.isArray(item) ? item : [item]);\n  let result = [];\n  mainArray.forEach(mainItem => {\n    dependArray.forEach(dependItem => {\n      if (Array.isArray(mainItem)) {\n        result.push([...mainItem, dependItem]);\n      } else {\n        result.push([mainItem, dependItem]);\n      }\n    });\n  });\n  return result;\n};\nexport const generateVariantsByTags = attributeByTags => {\n  if (attributeByTags.length === 0) return [];\n  if (attributeByTags.length === 1) return twoArrayMixer(attributeByTags[0], []);\n  let variantTags = twoArrayMixer(attributeByTags[0], attributeByTags[1]);\n  if (attributeByTags.length === 2) return variantTags;\n  attributeByTags.splice(0, 2, variantTags);\n  return generateVariantsByTags(attributeByTags);\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/helper.ts"],"names":["twoArrayMixer","mainArray","dependArray","length","map","item","Array","isArray","result","forEach","mainItem","dependItem","push","generateVariantsByTags","attributeByTags","variantTags","splice"],"mappings":"AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAmBC,WAAnB,KAAiE;AAC1F,MAAI,CAACD,SAAS,CAACE,MAAf,EAAuB,OAAOD,WAAW,CAACE,GAAZ,CAAiBC,IAAD,IAAsB,CAACA,IAAD,CAAtC,CAAP;AACvB,MAAI,CAACH,WAAW,CAACC,MAAjB,EACI,OAAOF,SAAS,CAACG,GAAV,CAAeC,IAAD,IAAgBC,KAAK,CAACC,OAAN,CAAcF,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA3D,CAAP;AACJ,MAAIG,MAAsB,GAAG,EAA7B;AACAP,EAAAA,SAAS,CAACQ,OAAV,CAAmBC,QAAD,IAAmB;AACjCR,IAAAA,WAAW,CAACO,OAAZ,CAAqBE,UAAD,IAA4B;AAC5C,UAAIL,KAAK,CAACC,OAAN,CAAcG,QAAd,CAAJ,EAA6B;AACzBF,QAAAA,MAAM,CAACI,IAAP,CAAY,CAAC,GAAGF,QAAJ,EAAcC,UAAd,CAAZ;AACH,OAFD,MAEO;AACHH,QAAAA,MAAM,CAACI,IAAP,CAAY,CAACF,QAAD,EAAWC,UAAX,CAAZ;AACH;AACJ,KAND;AAOH,GARD;AASA,SAAOH,MAAP;AACH,CAfM;AAiBP,OAAO,MAAMK,sBAAsB,GAAIC,eAAD,IAA4C;AAC9E,MAAIA,eAAe,CAACX,MAAhB,KAA2B,CAA/B,EAAkC,OAAO,EAAP;AAClC,MAAIW,eAAe,CAACX,MAAhB,KAA2B,CAA/B,EAAkC,OAAOH,aAAa,CAACc,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAApB;AAClC,MAAIC,WAAW,GAAGf,aAAa,CAACc,eAAe,CAAC,CAAD,CAAhB,EAAqBA,eAAe,CAAC,CAAD,CAApC,CAA/B;AACA,MAAIA,eAAe,CAACX,MAAhB,KAA2B,CAA/B,EAAkC,OAAOY,WAAP;AAClCD,EAAAA,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BD,WAA7B;AACA,SAAOF,sBAAsB,CAACC,eAAD,CAA7B;AACH,CAPM","sourcesContent":["import { IAttribute } from '../../../models';\n\nexport const twoArrayMixer = (mainArray: any[], dependArray: IAttribute[]): IAttribute[][] => {\n    if (!mainArray.length) return dependArray.map((item: IAttribute) => [item]);\n    if (!dependArray.length)\n        return mainArray.map((item: any) => (Array.isArray(item) ? item : [item]));\n    let result: IAttribute[][] = [];\n    mainArray.forEach((mainItem: any) => {\n        dependArray.forEach((dependItem: IAttribute) => {\n            if (Array.isArray(mainItem)) {\n                result.push([...mainItem, dependItem]);\n            } else {\n                result.push([mainItem, dependItem]);\n            }\n        });\n    });\n    return result;\n};\n\nexport const generateVariantsByTags = (attributeByTags: any[]): IAttribute[][] => {\n    if (attributeByTags.length === 0) return [];\n    if (attributeByTags.length === 1) return twoArrayMixer(attributeByTags[0], []);\n    let variantTags = twoArrayMixer(attributeByTags[0], attributeByTags[1]);\n    if (attributeByTags.length === 2) return variantTags;\n    attributeByTags.splice(0, 2, variantTags);\n    return generateVariantsByTags(attributeByTags);\n};\n"]},"metadata":{},"sourceType":"module"}