{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nconst baseUrlBLog = 'https://blog.insa.vn/graphql';\nconst axiosClient = axios.create({\n  headers: {\n    'content-type': 'application/json'\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(config => {\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}, async error => {\n  return Promise.reject(error);\n});\nexport async function getPosts() {\n  const response = await axiosClient({\n    method: 'POST',\n    url: baseUrlBLog,\n    data: JSON.stringify({\n      query: `\n            query {\n                posts(where: {tag: \"\", offsetPagination: {offset: 0, size: 3}, categoryId: 233}) {\n                nodes {\n                    id\n                    link\n                    slug\n                    title\n                    uri\n                    featuredImage {\n                      node {\n                        id\n                        sourceUrl\n                      }\n                    }\n                    excerpt\n                    date\n                  }\n              }\n            }\n            `\n    })\n  });\n  return response;\n}\nexport function getPostDetail() {}","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/api/blog-api.ts"],"names":["axios","queryString","baseUrlBLog","axiosClient","create","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","data","error","Promise","reject","getPosts","method","url","JSON","query","getPostDetail"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,MAAMC,WAAW,GAAG,8BAApB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GADoB;AAI7BC,EAAAA,gBAAgB,EAAGC,MAAD,IAAYN,WAAW,CAACO,SAAZ,CAAsBD,MAAtB;AAJD,CAAb,CAApB;AAOAJ,WAAW,CAACM,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAsCC,MAAD,IAAY;AAC7C,SAAOA,MAAP;AACH,CAFD;AAIAT,WAAW,CAACM,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CACKE,QAAD,IAAc;AACV,MAAIA,QAAQ,CAACC,IAAb,EAAmB;AACf,WAAOD,QAAQ,CAACC,IAAhB;AACH;;AACD,SAAOD,QAAP;AACH,CANL,EAQI,MAAOE,KAAP,IAAiB;AACb,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVL;AAaA,OAAO,eAAeG,QAAf,GAA0B;AAC7B,QAAML,QAAQ,GAAG,MAAMV,WAAW,CAAC;AAC/BgB,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,GAAG,EAAElB,WAF0B;AAG/BY,IAAAA,IAAI,EAAEO,IAAI,CAACb,SAAL,CAAe;AACjBc,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArB6B,KAAf;AAHyB,GAAD,CAAlC;AA4BA,SAAOT,QAAP;AACH;AAED,OAAO,SAASU,aAAT,GAAyB,CAAE","sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\n\nconst baseUrlBLog = 'https://blog.insa.vn/graphql';\n\nconst axiosClient = axios.create({\n    headers: {\n        'content-type': 'application/json',\n    },\n    paramsSerializer: (params) => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use((config) => {\n    return config;\n});\n\naxiosClient.interceptors.response.use(\n    (response) => {\n        if (response.data) {\n            return response.data;\n        }\n        return response;\n    },\n\n    async (error) => {\n        return Promise.reject(error);\n    },\n);\n\nexport async function getPosts() {\n    const response = await axiosClient({\n        method: 'POST',\n        url: baseUrlBLog,\n        data: JSON.stringify({\n            query: `\n            query {\n                posts(where: {tag: \"\", offsetPagination: {offset: 0, size: 3}, categoryId: 233}) {\n                nodes {\n                    id\n                    link\n                    slug\n                    title\n                    uri\n                    featuredImage {\n                      node {\n                        id\n                        sourceUrl\n                      }\n                    }\n                    excerpt\n                    date\n                  }\n              }\n            }\n            `,\n        }),\n    });\n\n    return response;\n}\n\nexport function getPostDetail() {}\n"]},"metadata":{},"sourceType":"module"}