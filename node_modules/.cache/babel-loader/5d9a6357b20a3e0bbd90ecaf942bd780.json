{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/warehouse/components/warehouse-form/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Input, message, Row, Select, Space } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { map, pick } from 'lodash';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport warehouseApi from '../../../../../api/warehouse-api';\nimport { disabledAutosuggestion } from '../../../../../helper';\nimport rules from '../../../../../helper/rules';\nimport { useDistricts, useProvices, useWards } from '../../../../../hook/useLocation';\nimport types from '../../../../../reducers/storeState/type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WarehouseForm = ({\n  toggle,\n  warehouse\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const warehouses = useSelector(state => state.store.warehouses);\n  const dispatch = useDispatch();\n  const [form] = useForm();\n  const [loading, setLoading] = useState(false);\n  const [province, setProvince] = useState(warehouse === null || warehouse === void 0 ? void 0 : warehouse.province);\n  const [district, setDistrict] = useState(warehouse === null || warehouse === void 0 ? void 0 : warehouse.district);\n  const {\n    loadingProvince,\n    provinces\n  } = useProvices();\n  const {\n    loadingDistrict,\n    districts\n  } = useDistricts(province);\n  const {\n    loadingWard,\n    wards\n  } = useWards({\n    province,\n    district\n  });\n\n  const onChangeProvince = value => {\n    setProvince(value);\n    removeField('district');\n  };\n\n  const onChangeDistrict = value => {\n    setDistrict(value);\n    removeField('ward');\n  };\n\n  const removeField = field => {\n    form.setFieldsValue({\n      [field]: undefined\n    });\n  };\n\n  const resetForm = () => {\n    // toggle;\n    form.resetFields();\n  };\n\n  const resetForm2 = () => {\n    toggle;\n    resetForm();\n  };\n\n  const createWarehouse = async values => {\n    try {\n      const response = await warehouseApi.createWarehouse(store._id, values);\n      message.success('Thêm chi nhánh thành công');\n\n      if (toggle) {\n        toggle();\n      }\n\n      const newWarehouses = [...warehouses, response];\n      dispatch({\n        type: types.SET_WAREHOUSES,\n        payload: newWarehouses\n      });\n    } catch (error) {\n      message.error('Lỗi thêm chi nhánh');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const editWarehouse = async values => {\n    try {\n      const response = await warehouseApi.editWarehouse(store._id, warehouse === null || warehouse === void 0 ? void 0 : warehouse._id, values);\n      message.success('Sửa chi nhánh thành công');\n\n      if (toggle) {\n        toggle();\n      }\n\n      const newWarehouses = warehouses.map(item => {\n        if (item._id === response._id) {\n          return response;\n        }\n\n        return item;\n      });\n      dispatch({\n        type: types.SET_WAREHOUSES,\n        payload: newWarehouses\n      });\n    } catch (error) {\n      message.error('Lỗi sửa chi nhánh');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFinish = async values => {\n    setLoading(true);\n\n    if (warehouse) {\n      editWarehouse(values);\n    } else {\n      createWarehouse(values);\n    }\n  };\n\n  const initialValues = { ...pick(warehouse, ['name', 'phoneNo', 'province', 'district', 'ward', 'address'])\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onFinish,\n    layout: \"vertical\",\n    initialValues: initialValues,\n    form: form,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn chi nh\\xE1nh\",\n      rules: [{\n        required: true,\n        message: 'Điền tên chi nhánh'\n      }, {\n        max: 255,\n        message: 'Tên chi nhánh quá dài'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u0110i\\u1EC1n t\\xEAn chi nh\\xE1nh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phoneNo\",\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n      rules: [{\n        required: true,\n        message: 'Điền số điện thoại chi nhánh'\n      }, {\n        validator: rules.validatePhone\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u0110i\\u1EC1n s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i chi nh\\xE1nh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 15,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"province\",\n          label: \"T\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n          rules: [{\n            required: true,\n            message: 'Chọn tỉnh/thành phố'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            style: {\n              width: '100%'\n            },\n            optionFilterProp: \"children\",\n            onChange: onChangeProvince,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            loading: loadingProvince,\n            onFocus: disabledAutosuggestion,\n            placeholder: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), map(provinces, province => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: province.code,\n              children: province.name\n            }, province.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"district\",\n          label: \"Qu\\u1EADn/huy\\u1EC7n\",\n          rules: [{\n            required: true,\n            message: 'Chọn quận/huyện'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\",\n            onChange: onChangeDistrict,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !province,\n            loading: loadingDistrict,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), map(districts, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: district.code,\n              children: district.name\n            }, district.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"ward\",\n          label: \"X\\xE3/ph\\u01B0\\u1EDDng\",\n          rules: [{\n            required: true,\n            message: 'Chọn xã/phường'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Ch\\u1ECDn x\\xE3/ph\\u01B0\\u1EDDng\",\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !district,\n            loading: loadingWard,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn x\\xE3/ph\\u01B0\\u1EDDng\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), map(wards, ward => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: ward.code,\n                children: ward.name\n              }, ward.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"address\",\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      rules: [{\n        required: true,\n        message: 'Điền địa chỉ chi nhánh'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 3,\n        placeholder: \"\\u0110i\\u1EC1n \\u0111\\u1ECBa ch\\u1EC9 chi nh\\xE1nh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          float: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetForm2,\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: loading,\n          children: warehouse ? 'Cập nhật' : 'Lưu'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WarehouseForm, \"FT9IpFBe8wRGhwpOmJXKOWq78Xo=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useForm, useProvices, useDistricts, useWards];\n});\n\n_c = WarehouseForm;\nexport default WarehouseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WarehouseForm\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/warehouse/components/warehouse-form/index.tsx"],"names":["Button","Col","Form","Input","message","Row","Select","Space","useForm","map","pick","React","useState","useDispatch","useSelector","warehouseApi","disabledAutosuggestion","rules","useDistricts","useProvices","useWards","types","WarehouseForm","toggle","warehouse","store","state","data","warehouses","dispatch","form","loading","setLoading","province","setProvince","district","setDistrict","loadingProvince","provinces","loadingDistrict","districts","loadingWard","wards","onChangeProvince","value","removeField","onChangeDistrict","field","setFieldsValue","undefined","resetForm","resetFields","resetForm2","createWarehouse","values","response","_id","success","newWarehouses","type","SET_WAREHOUSES","payload","error","editWarehouse","item","onFinish","initialValues","required","max","validator","validatePhone","width","input","option","children","toLowerCase","indexOf","code","name","ward","float"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Input, message, Row, Select, Space, Modal } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { map, pick } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport warehouseApi from '../../../../../api/warehouse-api';\nimport { disabledAutosuggestion } from '../../../../../helper';\nimport rules from '../../../../../helper/rules';\nimport {\n    District,\n    Province,\n    useDistricts,\n    useProvices,\n    useWards,\n    Ward,\n} from '../../../../../hook/useLocation';\nimport { IState } from '../../../../../store/rootReducer';\nimport types from '../../../../../reducers/storeState/type';\nimport { IWarehouse } from '../../../../../models';\n\ninterface FormData {\n    name: string;\n    phoneNo: string;\n    province: string;\n    district: string;\n    ward: string;\n    address: string;\n}\n\ninterface Props {\n    toggle?: Function;\n    warehouse?: IWarehouse;\n}\n\nconst WarehouseForm: FC<Props> = ({ toggle, warehouse }) => {\n    const store = useSelector((state: IState) => state.store.data);\n    const warehouses = useSelector((state: IState) => state.store.warehouses);\n    const dispatch = useDispatch();\n    const [form] = useForm();\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [province, setProvince] = useState<string | undefined>(warehouse?.province);\n    const [district, setDistrict] = useState<string | undefined>(warehouse?.district);\n\n    const { loadingProvince, provinces } = useProvices();\n    const { loadingDistrict, districts } = useDistricts(province);\n    const { loadingWard, wards } = useWards({ province, district });\n\n    const onChangeProvince = (value: string) => {\n        setProvince(value);\n\n        removeField('district');\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDistrict(value);\n\n        removeField('ward');\n    };\n\n    const removeField = (field: string) => {\n        form.setFieldsValue({\n            [field]: undefined,\n        });\n    };\n\n    const resetForm = () => {\n        // toggle;\n        form.resetFields();\n    };\n    const resetForm2 = () => {\n        toggle;\n        resetForm();\n    };\n\n    \n    const createWarehouse = async (values: FormData) => {\n        try {\n            const response = await warehouseApi.createWarehouse(store._id as string, values);\n            message.success('Thêm chi nhánh thành công');\n            if (toggle) {\n                toggle();\n            }\n\n            const newWarehouses = [...warehouses, response];\n\n            dispatch({\n                type: types.SET_WAREHOUSES,\n                payload: newWarehouses,\n            });\n        } catch (error) {\n            message.error('Lỗi thêm chi nhánh');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const editWarehouse = async (values: FormData) => {\n        try {\n            const response = await warehouseApi.editWarehouse(\n                store._id as string,\n                warehouse?._id as string,\n                values\n            );\n\n            message.success('Sửa chi nhánh thành công');\n            if (toggle) {\n                toggle();\n            }\n\n            const newWarehouses = warehouses.map((item) => {\n                if (item._id === response._id) {\n                    return response;\n                }\n                return item;\n            });\n\n            dispatch({\n                type: types.SET_WAREHOUSES,\n                payload: newWarehouses,\n            });\n        } catch (error) {\n            message.error('Lỗi sửa chi nhánh');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const onFinish = async (values: FormData) => {\n        setLoading(true);\n        if (warehouse) {\n            editWarehouse(values);\n        } else {\n            createWarehouse(values);\n        }\n    };\n\n    const initialValues = {\n        ...pick(warehouse, ['name', 'phoneNo', 'province', 'district', 'ward', 'address']),\n    };\n\n    return (\n        <Form onFinish={onFinish} layout='vertical' initialValues={initialValues} form={form}>\n            <Form.Item\n                name='name'\n                label='Tên chi nhánh'\n                rules={[\n                    {\n                        required: true,\n                        message: 'Điền tên chi nhánh',\n                    },\n                    {\n                        max: 255,\n                        message: 'Tên chi nhánh quá dài',\n                    },\n                ]}\n            >\n                <Input placeholder='Điền tên chi nhánh' />\n            </Form.Item>\n\n            <Form.Item\n                name='phoneNo'\n                label='Số điện thoại'\n                rules={[\n                    {\n                        required: true,\n                        message: 'Điền số điện thoại chi nhánh',\n                    },\n\n                    {\n                        validator: rules.validatePhone,\n                    },\n                ]}\n            >\n                <Input placeholder='Điền số điện thoại chi nhánh' />\n            </Form.Item>\n\n            <Row gutter={15}>\n                <Col span={8}>\n                    <Form.Item\n                        name='province'\n                        label='Tỉnh/thành phố'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn tỉnh/thành phố',\n                            },\n                        ]}\n                    >\n                        <Select\n                            showSearch\n                            style={{ width: '100%' }}\n                            optionFilterProp='children'\n                            onChange={onChangeProvince}\n                            filterOption={(input: string, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            loading={loadingProvince}\n                            onFocus={disabledAutosuggestion}\n                            placeholder='Chọn tỉnh/thành phố'\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn tỉnh/thành phố\n                            </Select.Option>\n\n                            {map(provinces, (province: Province) => (\n                                <Select.Option value={province.code} key={province.code}>\n                                    {province.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item\n                        name='district'\n                        label='Quận/huyện'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn quận/huyện',\n                            },\n                        ]}\n                    >\n                        <Select\n                            placeholder='Chọn quận/huyện'\n                            onChange={onChangeDistrict}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!province}\n                            loading={loadingDistrict}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn quận/huyện\n                            </Select.Option>\n                            {map(districts, (district: District) => (\n                                <Select.Option value={district.code} key={district.code}>\n                                    {district.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={8}>\n                    <Form.Item\n                        name='ward'\n                        label='Xã/phường'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn xã/phường',\n                            },\n                        ]}\n                    >\n                        <Select\n                            placeholder='Chọn xã/phường'\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!district}\n                            loading={loadingWard}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn xã/phường\n                            </Select.Option>\n                            {map(wards, (ward: Ward) => {\n                                return (\n                                    <Select.Option value={ward.code} key={ward.code}>\n                                        {ward.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item\n                name='address'\n                label='Địa chỉ'\n                rules={[\n                    {\n                        required: true,\n                        message: 'Điền địa chỉ chi nhánh',\n                    },\n                ]}\n            >\n                <Input.TextArea rows={3} placeholder='Điền địa chỉ chi nhánh' />\n            </Form.Item>\n\n            <Form.Item>\n                <Space style={{ float: 'right' }}>\n                    <Button onClick={resetForm2}>Hủy</Button>\n                    <Button type='primary' htmlType='submit' loading={loading}>\n                        {warehouse ? 'Cập nhật' : 'Lưu'}\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default WarehouseForm;\n"]},"metadata":{},"sourceType":"module"}