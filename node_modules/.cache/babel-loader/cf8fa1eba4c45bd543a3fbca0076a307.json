{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-product/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { debounce } from 'lodash';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport productApi from '../../../../api/product-api';\nimport SearchDropdown from '../../../../components/search-dropdown';\nimport ProviderContext from './context';\nimport InputSearch from './input-search';\nimport ProductsDropdown from './products-dropdown';\nimport './search-product.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchProduct = ({\n  selectProduct,\n  warehouseId\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n  const inputRef = useRef();\n  const focusInput = useCallback(e => {\n    if (e.code === 'F2' && inputRef.current) {\n      return inputRef.current.focus();\n    }\n\n    return null;\n  }, []);\n  const onChange = debounce(text_string => {\n    setProducts([]);\n    setLoading(true);\n\n    if (store._id) {\n      productApi.getProducts({\n        storeId: store._id,\n        page: 1,\n        limit: 20,\n        search: text_string,\n        withQuantity: true,\n        variant: true,\n        warehouseId\n      }).then(response => {\n        setProducts(response.data);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, 300);\n\n  const handleSelectProduct = product => {\n    selectProduct(product);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', focusInput);\n    return () => {\n      document.removeEventListener('keydown', focusInput);\n    };\n  }, [focusInput]);\n  return /*#__PURE__*/_jsxDEV(ProviderContext, {\n    selectProduct: handleSelectProduct,\n    children: /*#__PURE__*/_jsxDEV(SearchDropdown, {\n      className: \"search-product\",\n      input: /*#__PURE__*/_jsxDEV(InputSearch, {\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 63\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ProductsDropdown, {\n        products: products,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchProduct, \"1DVrTIySY+VoXiC2BVUEmbrEte8=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchProduct;\nexport default SearchProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchProduct\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-product/index.tsx"],"names":["debounce","React","useCallback","useEffect","useRef","useState","useSelector","productApi","SearchDropdown","ProviderContext","InputSearch","ProductsDropdown","SearchProduct","selectProduct","warehouseId","store","state","data","loading","setLoading","products","setProducts","inputRef","focusInput","e","code","current","focus","onChange","text_string","_id","getProducts","storeId","page","limit","search","withQuantity","variant","then","response","finally","handleSelectProduct","product","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { debounce } from 'lodash';\nimport React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport productApi from '../../../../api/product-api';\nimport SearchDropdown from '../../../../components/search-dropdown';\nimport { IProduct } from '../../../../models';\nimport { IState } from '../../../../store/rootReducer';\nimport { IProductState } from '../../create/state/interface';\nimport ProviderContext from './context';\nimport InputSearch from './input-search';\nimport ProductsDropdown from './products-dropdown';\nimport './search-product.less';\n\ninterface Props {\n    selectProduct: (product: IProductState) => void;\n    warehouseId?: string;\n}\n\nconst SearchProduct: FC<Props> = ({ selectProduct, warehouseId }) => {\n    const store = useSelector((state: IState) => state.store.data);\n\n    const [loading, setLoading] = useState<boolean>(false);\n    const [products, setProducts] = useState<IProduct[]>([]);\n\n    const inputRef = useRef<any>();\n\n    const focusInput = useCallback((e: any) => {\n        if (e.code === 'F2' && inputRef.current) {\n            return inputRef.current.focus();\n        }\n        return null;\n    }, []);\n\n    const onChange = debounce((text_string?: string) => {\n        setProducts([]);\n        setLoading(true);\n\n        if (store._id) {\n            productApi\n                .getProducts({\n                    storeId: store._id,\n                    page: 1,\n                    limit: 20,\n                    search: text_string,\n                    withQuantity: true,\n                    variant: true,\n                    warehouseId,\n                })\n                .then((response: any) => {\n                    setProducts(response.data);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, 300);\n\n    const handleSelectProduct = (product: IProductState) => {\n        selectProduct(product);\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', focusInput);\n\n        return () => {\n            document.removeEventListener('keydown', focusInput);\n        };\n    }, [focusInput]);\n\n    return (\n        <ProviderContext selectProduct={handleSelectProduct}>\n            <SearchDropdown className=\"search-product\" input={<InputSearch onChange={onChange} />}>\n                <ProductsDropdown products={products} loading={loading} />\n            </SearchDropdown>\n        </ProviderContext>\n    );\n};\n\nexport default SearchProduct;\n"]},"metadata":{},"sourceType":"module"}