{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/table-action.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport customerApi from '../../../api/customer-api';\nimport { CaretDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Checkbox, Dropdown, Menu, message, Modal, Space } from 'antd';\nimport { useCustomerTable } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableAction = ({\n  customers,\n  widthTable,\n  resetCustomerSelected\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const storeObj = useSelector(state => state.store.data);\n  const {\n    getCustomers\n  } = useCustomerTable();\n\n  const comfirmDeleteCustomer = () => {\n    Modal.confirm({\n      title: `Bạn chắc chắn muốn xoá ${customers.length} khách hàng này?`,\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this),\n\n      async onOk() {\n        await deleteCustomer();\n      },\n\n      onCancel() {}\n\n    });\n  };\n\n  const deleteCustomer = async () => {\n    try {\n      setLoading(true);\n      await Promise.all(customers.map(customerId => {\n        return customerApi.deleteCustomer({\n          storeId: storeObj._id,\n          customerId\n        });\n      }));\n      message.success(`Đã xoá thành công ${customers.length} khách hàng`);\n      resetCustomerSelected();\n      getCustomers();\n    } catch {\n      message.error(`Xoá khách hàng thất bại`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      onClick: comfirmDeleteCustomer,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#f53d2d'\n        },\n        children: \"Xo\\xE1 kh\\xE1ch h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, \"3\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      onClick: resetCustomerSelected,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"B\\u1ECF ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, \"4\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-actions\",\n    style: {\n      width: widthTable\n    },\n    children: /*#__PURE__*/_jsxDEV(Dropdown.Button, {\n      overlay: menu,\n      buttonsRender: ([leftButton, rightButton]) => [leftButton, /*#__PURE__*/React.cloneElement(rightButton, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Ch\\u1ECDn thao t\\xE1c \", /*#__PURE__*/_jsxDEV(CaretDownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true),\n        loading: loading,\n        icon: undefined\n      })],\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onClick: resetCustomerSelected,\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u0110\\xE3 ch\\u1ECDn \", customers.length, \" kh\\xE1ch h\\xE0ng\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableAction, \"8BfcAEW+tGClpnl3sQ2Renbac4Y=\", false, function () {\n  return [useSelector, useCustomerTable];\n});\n\n_c = TableAction;\nexport default TableAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableAction\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/table-action.tsx"],"names":["React","useState","useSelector","customerApi","CaretDownOutlined","ExclamationCircleOutlined","Checkbox","Dropdown","Menu","message","Modal","Space","useCustomerTable","TableAction","customers","widthTable","resetCustomerSelected","loading","setLoading","storeObj","state","store","data","getCustomers","comfirmDeleteCustomer","confirm","title","length","icon","onOk","deleteCustomer","onCancel","Promise","all","map","customerId","storeId","_id","success","error","menu","color","width","leftButton","rightButton","cloneElement","children","undefined"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport customerApi from '../../../api/customer-api';\nimport { IState } from '../../../store/rootReducer';\n\nimport { CaretDownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Checkbox, Dropdown, Menu, message, Modal, Space } from 'antd';\nimport { useCustomerTable } from './context';\n\ninterface Props {\n    customers: any;\n    resetCustomerSelected: () => void;\n    widthTable: number;\n}\n\nconst TableAction: FC<Props> = ({ customers, widthTable, resetCustomerSelected }): JSX.Element => {\n    const [loading, setLoading] = useState(false);\n    const storeObj = useSelector((state: IState) => state.store.data);\n    const { getCustomers } = useCustomerTable();\n\n    const comfirmDeleteCustomer = () => {\n        Modal.confirm({\n            title: `Bạn chắc chắn muốn xoá ${customers.length} khách hàng này?`,\n            icon: <ExclamationCircleOutlined />,\n            async onOk() {\n                await deleteCustomer();\n            },\n            onCancel() {},\n        });\n    };\n\n    const deleteCustomer = async () => {\n        try {\n            setLoading(true);\n            await Promise.all(\n                customers.map((customerId: string) => {\n                    return customerApi.deleteCustomer({\n                        storeId: storeObj._id as string,\n                        customerId,\n                    });\n                })\n            );\n\n            message.success(`Đã xoá thành công ${customers.length} khách hàng`);\n\n            resetCustomerSelected();\n            getCustomers();\n        } catch {\n            message.error(`Xoá khách hàng thất bại`);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const menu = (\n        <Menu>\n            {/* <Menu.Item key='0'>\n                Cập nhật khách hàng\n            </Menu.Item>\n            <Menu.Item key='1'>\n                Ngừng giao dịch\n            </Menu.Item>\n            <Menu.Item key='2'>\n                Cập nhật trạng thái\n            </Menu.Item> */}\n            <Menu.Item key=\"3\" onClick={comfirmDeleteCustomer}>\n                <span style={{ color: '#f53d2d' }}>Xoá khách hàng</span>\n            </Menu.Item>\n            <Menu.Item key=\"4\" onClick={resetCustomerSelected}>\n                <span>Bỏ chọn</span>\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <div className='customer-actions' style={{ width: widthTable }}>\n            <Dropdown.Button\n                overlay={menu}\n                buttonsRender={([leftButton, rightButton]) => [\n                    leftButton,\n                    React.cloneElement(rightButton as ReactElement, {\n                        children: (\n                            <>\n                                Chọn thao tác <CaretDownOutlined />\n                            </>\n                        ),\n                        loading: loading,\n                        icon: undefined,\n                    }),\n                ]}\n            >\n                <Space>\n                    <Checkbox onClick={resetCustomerSelected} checked />\n                    <span>Đã chọn {customers.length} khách hàng</span>\n                </Space>\n            </Dropdown.Button>\n        </div>\n    );\n};\n\nexport default TableAction;\n"]},"metadata":{},"sourceType":"module"}