{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account-detail/components/remove-account/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { message, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport staffsApi from '../../../../../api/staff-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RemoveAccount = ({\n  title,\n  staffId,\n  children\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const removeAccount = () => {\n    Modal.confirm({\n      title: 'Gỡ tài khoản',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }, this),\n      content: 'Bạn muốn gỡ tài khoản',\n      okText: 'Gỡ tài khoản',\n      cancelText: 'Hủy',\n      onOk: async () => {\n        try {\n          setLoading(true);\n          await staffsApi.deleteStaff(store._id, staffId);\n          message.success('Gỡ tài khoản thành công');\n          history.push('/setting/account');\n        } catch (error) {\n          message.error('Lỗi gỡ tài khoản');\n        } finally {\n          setLoading(false);\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.cloneElement(children, {\n    onClick: removeAccount,\n    loading\n  });\n};\n\n_s(RemoveAccount, \"ygnxVa7hh1+foH/4BFtd9ZhoYOQ=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = RemoveAccount;\nexport default RemoveAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveAccount\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account-detail/components/remove-account/index.tsx"],"names":["ExclamationCircleOutlined","message","Modal","React","useState","useSelector","useHistory","staffsApi","RemoveAccount","title","staffId","children","store","state","data","loading","setLoading","history","removeAccount","confirm","icon","content","okText","cancelText","onOk","deleteStaff","_id","success","push","error","cloneElement","onClick"],"mappings":";;;AAAA,SAASA,yBAAT,QAA0C,mBAA1C;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,MAA/B;AACA,OAAOC,KAAP,IAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAQA,MAAMC,aAAwB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAAA;;AAC/D,QAAMC,KAAK,GAAGP,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACD,KAAN,CAAYE,IAAhC,CAAzB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;;AAEA,QAAMY,aAAa,GAAG,MAAM;AACxBhB,IAAAA,KAAK,CAACiB,OAAN,CAAc;AACVV,MAAAA,KAAK,EAAE,cADG;AAEVW,MAAAA,IAAI,eAAE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,cAFI;AAGVC,MAAAA,OAAO,EAAE,uBAHC;AAIVC,MAAAA,MAAM,EAAE,cAJE;AAKVC,MAAAA,UAAU,EAAE,KALF;AAMVC,MAAAA,IAAI,EAAE,YAAY;AACd,YAAI;AACAR,UAAAA,UAAU,CAAC,IAAD,CAAV;AACA,gBAAMT,SAAS,CAACkB,WAAV,CAAsBb,KAAK,CAACc,GAA5B,EAA2ChB,OAA3C,CAAN;AACAT,UAAAA,OAAO,CAAC0B,OAAR,CAAgB,yBAAhB;AACAV,UAAAA,OAAO,CAACW,IAAR,CAAa,kBAAb;AACH,SALD,CAKE,OAAOC,KAAP,EAAc;AACZ5B,UAAAA,OAAO,CAAC4B,KAAR,CAAc,kBAAd;AACH,SAPD,SAOU;AACNb,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;AAjBS,KAAd;AAmBH,GApBD;;AAsBA,sBAAOb,KAAK,CAAC2B,YAAN,CAAmBnB,QAAnB,EAA6B;AAAEoB,IAAAA,OAAO,EAAEb,aAAX;AAA0BH,IAAAA;AAA1B,GAA7B,CAAP;AACH,CA5BD;;GAAMP,a;UACYH,W,EAEEC,U;;;KAHdE,a;AA8BN,eAAeA,aAAf","sourcesContent":["import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { message, Modal } from 'antd';\nimport React, { FC, ReactElement, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport staffsApi from '../../../../../api/staff-api';\nimport { IState } from '../../../../../store/rootReducer';\n\ninterface Props {\n    title?: string;\n    staffId: string;\n    children: ReactElement;\n}\nconst RemoveAccount: FC<Props> = ({ title, staffId, children }) => {\n    const store = useSelector((state: IState) => state.store.data);\n    const [loading, setLoading] = useState<boolean>(false);\n    const history = useHistory();\n\n    const removeAccount = () => {\n        Modal.confirm({\n            title: 'Gỡ tài khoản',\n            icon: <ExclamationCircleOutlined />,\n            content: 'Bạn muốn gỡ tài khoản',\n            okText: 'Gỡ tài khoản',\n            cancelText: 'Hủy',\n            onOk: async () => {\n                try {\n                    setLoading(true);\n                    await staffsApi.deleteStaff(store._id as string, staffId);\n                    message.success('Gỡ tài khoản thành công');\n                    history.push('/setting/account');\n                } catch (error) {\n                    message.error('Lỗi gỡ tài khoản');\n                } finally {\n                    setLoading(false);\n                }\n            },\n        });\n    };\n\n    return React.cloneElement(children, { onClick: removeAccount, loading });\n};\n\nexport default RemoveAccount;\n"]},"metadata":{},"sourceType":"module"}