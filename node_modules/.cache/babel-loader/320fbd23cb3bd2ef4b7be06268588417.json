{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting-profile/modal-change-password/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Modal, Form, Input, Divider, message } from 'antd';\nimport { InsaButton } from '../../../components';\nimport { logout } from '../../../reducers/authState/authAction';\nimport { changePassword } from '../../../api/user';\nimport { get } from 'lodash';\nimport '../style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar errMsg;\n\n(function (errMsg) {\n  errMsg[\"PASSWORD_INCORRECT\"] = \"PASSWORD_INCORRECT\";\n})(errMsg || (errMsg = {}));\n\nconst ModalChangePassword = ({\n  visible,\n  setVisible\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [formPassword] = Form.useForm();\n\n  const handleChangeNewPassword = async () => {\n    try {\n      const dataForm = await formPassword.validateFields();\n      await changePassword({\n        currentPassword: dataForm.currentPassword,\n        newPassword: dataForm.newPassword\n      });\n      message.success('Thay đổi mật khẩu thành công. Vui lòng đăng nhập lại!');\n      dispatch(logout());\n      dispatch(push('/'));\n    } catch (error) {\n      const errorMessage = get(error.response, 'data.message');\n\n      switch (errorMessage) {\n        case errMsg.PASSWORD_INCORRECT:\n          message.error('Mật khẩu hiện tại không chính xác');\n          break;\n\n        default:\n          message.error('Thay đổi mật khẩu thất bại');\n          break;\n      }\n    }\n  };\n\n  const onCancel = () => {\n    formPassword.resetFields();\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Thay \\u0111\\u1ED5i m\\u1EADt kh\\u1EA9u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this),\n      centered: true,\n      visible: visible,\n      onOk: () => {},\n      okText: \"Ti\\u1EBFp t\\u1EE5c\",\n      onCancel: () => setVisible(false),\n      cancelText: \"D\\u1EEBng l\\u1EA1i\",\n      width: 390,\n      closable: false,\n      maskClosable: true,\n      keyboard: false,\n      footer: [/*#__PURE__*/_jsxDEV(InsaButton, {\n        onClick: onCancel,\n        children: \"H\\u1EE7y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InsaButton, {\n        type: \"primary\",\n        onClick: handleChangeNewPassword,\n        children: \"C\\u1EADp nh\\u1EADt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)],\n      className: \"modal-change-password\",\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        form: formPassword,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u hi\\u1EC7n t\\u1EA1i\",\n          name: \"currentPassword\",\n          rules: [{\n            required: true,\n            message: 'Nhập mật khẩu hiện tại'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            placeholder: \"*********\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n          name: \"newPassword\",\n          dependencies: ['currentPassword'],\n          rules: [{\n            required: true,\n            message: 'Nhập mật khẩu mới'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('currentPassword') !== value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('Mật khẩu mới và mật khẩu cũ không được giống nhau'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            placeholder: \"*********\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n          name: \"confirm\",\n          dependencies: ['newPassword'],\n          rules: [{\n            required: true,\n            message: 'Xác nhận mật khẩu mới'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('newPassword') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('Hai mật khẩu bạn đã nhập không giống nhau!'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            type: \"password\",\n            placeholder: \"*********\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModalChangePassword, \"E9+SgDtm0/yWhqFUkTypLSYwsIw=\", false, function () {\n  return [useDispatch, Form.useForm];\n});\n\n_c = ModalChangePassword;\nexport default ModalChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalChangePassword\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting-profile/modal-change-password/index.tsx"],"names":["React","useDispatch","push","Modal","Form","Input","Divider","message","InsaButton","logout","changePassword","get","errMsg","ModalChangePassword","visible","setVisible","dispatch","formPassword","useForm","handleChangeNewPassword","dataForm","validateFields","currentPassword","newPassword","success","error","errorMessage","response","PASSWORD_INCORRECT","onCancel","resetFields","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Modal, Form, Input, Divider, message } from 'antd';\nimport { InsaButton } from '../../../components';\nimport { logout } from '../../../reducers/authState/authAction';\nimport { changePassword } from '../../../api/user';\nimport { get } from 'lodash';\n\nimport '../style.less';\n\ninterface IModalChangePassword {\n    visible: boolean;\n    setVisible: (value: boolean) => void;\n}\n\nenum errMsg {\n    PASSWORD_INCORRECT = 'PASSWORD_INCORRECT',\n}\n\nconst ModalChangePassword: FC<IModalChangePassword> = ({ visible, setVisible }) => {\n    const dispatch = useDispatch();\n\n    const [formPassword] = Form.useForm();\n\n    const handleChangeNewPassword = async () => {\n        try {\n            const dataForm = await formPassword.validateFields();\n            \n            await changePassword({\n                currentPassword: dataForm.currentPassword,\n                newPassword: dataForm.newPassword,\n            });\n            message.success('Thay đổi mật khẩu thành công. Vui lòng đăng nhập lại!');\n            dispatch(logout());\n            dispatch(push('/'));\n        } catch (error) {\n            const errorMessage = get(error.response, 'data.message');\n            switch (errorMessage) {\n                case errMsg.PASSWORD_INCORRECT: \n                    message.error('Mật khẩu hiện tại không chính xác');\n                    break;\n                default:\n                    message.error('Thay đổi mật khẩu thất bại');\n                    break;\n            }\n        }\n    };\n\n    const onCancel = () => {\n        formPassword.resetFields();\n\n        setVisible(false);\n    }\n\n    return (\n        <>\n            <Modal\n                title={<span>Thay đổi mật khẩu</span>}\n                centered\n                visible={visible}\n                onOk={() => {}}\n                okText=\"Tiếp tục\"\n                onCancel={() => setVisible(false)}\n                cancelText=\"Dừng lại\"\n                width={390}\n                closable={false}\n                maskClosable={true}\n                keyboard={false}\n                footer={[\n                    <InsaButton onClick={onCancel}>Hủy</InsaButton>,\n                    <InsaButton type=\"primary\" onClick={handleChangeNewPassword}>\n                        Cập nhật\n                    </InsaButton>,\n                ]}\n                className=\"modal-change-password\"\n                destroyOnClose\n            >\n                <Form layout=\"vertical\" form={formPassword}>\n                    <Form.Item\n                        label=\"Nhập mật khẩu hiện tại\"\n                        name=\"currentPassword\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Nhập mật khẩu hiện tại',\n                            },\n                        ]}\n                    >\n                        <Input.Password type=\"password\" placeholder=\"*********\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Mật khẩu mới\"\n                        name=\"newPassword\"\n                        dependencies={['currentPassword']}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Nhập mật khẩu mới',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('currentPassword') !== value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(\n                                        new Error('Mật khẩu mới và mật khẩu cũ không được giống nhau')\n                                    );\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password type=\"password\" placeholder=\"*********\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Xác nhận mật khẩu\"\n                        name=\"confirm\"\n                        dependencies={['newPassword']}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Xác nhận mật khẩu mới',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('newPassword') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(\n                                        new Error('Hai mật khẩu bạn đã nhập không giống nhau!')\n                                    );\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password type=\"password\" placeholder=\"*********\" />\n                    </Form.Item>\n                    <Divider />\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default ModalChangePassword;\n"]},"metadata":{},"sourceType":"module"}