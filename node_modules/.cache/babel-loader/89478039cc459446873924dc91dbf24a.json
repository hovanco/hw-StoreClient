{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/components/table/index.tsx\";\nimport { Row, Table, Typography } from 'antd';\nimport classnames from 'classnames';\nimport { isNil } from 'lodash';\nimport React, { memo } from 'react';\nimport './table.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultColumn = {\n  title: 'STT',\n  dataIndex: 'id',\n  render: (_, record, index) => index + 1,\n  align: 'center'\n};\n\nconst InsaTable = ({\n  name,\n  pagination,\n  className,\n  headerExtend,\n  columns,\n  hasDefaultColumn,\n  isShowTotal = false,\n  ...props\n}) => {\n  const renderHeader = () => {\n    if (name || headerExtend) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [name && /*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 4,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this), !isNil(headerExtend) && /*#__PURE__*/_jsxDEV(Row, {\n          className: \"table__header__extend\",\n          justify: \"space-between\",\n          align: \"middle\",\n          children: headerExtend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  const showTotal = () => {\n    if (!isShowTotal) return undefined;\n    const _pagination = pagination;\n\n    if (_pagination && _pagination.current && _pagination.pageSize && props.dataSource) {\n      var _props$dataSource;\n\n      return /*#__PURE__*/_jsxDEV(Typography.Paragraph, {\n        style: {\n          fontWeight: 400,\n          color: '#525253'\n        },\n        children: `Hiển thị kết quả từ ${((_pagination === null || _pagination === void 0 ? void 0 : _pagination.current) - 1) * _pagination.pageSize + 1} - ${((_pagination === null || _pagination === void 0 ? void 0 : _pagination.current) - 1) * _pagination.pageSize + ((_props$dataSource = props.dataSource) === null || _props$dataSource === void 0 ? void 0 : _props$dataSource.length)} trên tổng ${_pagination.total} mục`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const paginationConfig = pagination ? { ...pagination,\n    showTotal\n  } : false;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    className: classnames('table', className, {\n      showTotal: isShowTotal\n    }),\n    rowClassName: (record, index) => index % 2 === 0 ? 'table-row-dark' : 'table-row-light',\n    title: renderHeader,\n    columns: hasDefaultColumn ? [defaultColumn, ...columns] : columns,\n    pagination: paginationConfig,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InsaTable;\nexport default _c2 = /*#__PURE__*/memo(InsaTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InsaTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/components/table/index.tsx"],"names":["Row","Table","Typography","classnames","isNil","React","memo","defaultColumn","title","dataIndex","render","_","record","index","align","InsaTable","name","pagination","className","headerExtend","columns","hasDefaultColumn","isShowTotal","props","renderHeader","showTotal","undefined","_pagination","current","pageSize","dataSource","fontWeight","color","length","total","paginationConfig"],"mappings":"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","sourcesContent":["import { Row, Table, Typography } from 'antd';\nimport { ColumnType, TablePaginationConfig, TableProps } from 'antd/lib/table';\nimport classnames from 'classnames';\nimport { isNil } from 'lodash';\nimport React, { FC, memo, ReactNode } from 'react';\nimport './table.less';\n\ninterface IProps<T = any> extends TableProps<T> {\n    name?: string;\n    headerExtend?: ReactNode;\n    hasDefaultColumn?: boolean;\n    isShowTotal?: boolean;\n}\n\nconst defaultColumn: ColumnType<any> = {\n    title: 'STT',\n    dataIndex: 'id',\n    render: (_: any, record: any, index: number) => index + 1,\n    align: 'center',\n};\n\nconst InsaTable: FC<IProps> = ({\n    name,\n    pagination,\n    className,\n    headerExtend,\n    columns,\n    hasDefaultColumn,\n    isShowTotal = false,\n    ...props\n}) => {\n    const renderHeader = () => {\n        if (name || headerExtend) {\n            return (\n                <>\n                    {name && <Typography.Title level={4}>{name}</Typography.Title>}\n                    {!isNil(headerExtend) && (\n                        <Row\n                            className=\"table__header__extend\"\n                            justify=\"space-between\"\n                            align=\"middle\"\n                        >\n                            {headerExtend}\n                        </Row>\n                    )}\n                </>\n            );\n        }\n    };\n\n    const showTotal = () => {\n        if (!isShowTotal) return undefined;\n\n        const _pagination = pagination as TablePaginationConfig;\n\n        if (_pagination && _pagination.current && _pagination.pageSize && props.dataSource) {\n            return (\n                <Typography.Paragraph\n                    style={{\n                        fontWeight: 400,\n                        color: '#525253',\n                    }}\n                >\n                    {`Hiển thị kết quả từ ${\n                        (_pagination?.current - 1) * _pagination.pageSize + 1\n                    } - ${\n                        (_pagination?.current - 1) * _pagination.pageSize + props.dataSource?.length\n                    } trên tổng ${_pagination.total} mục`}\n                </Typography.Paragraph>\n            );\n        }\n    };\n\n    const paginationConfig = pagination\n        ? {\n              ...pagination,\n              showTotal,\n          }\n        : false;\n\n    return (\n        <Table\n            className={classnames('table', className, {\n                showTotal: isShowTotal,\n            })}\n            rowClassName={(record, index) =>\n                index % 2 === 0 ? 'table-row-dark' : 'table-row-light'\n            }\n            title={renderHeader}\n            columns={hasDefaultColumn ? [defaultColumn, ...(columns as [])] : columns}\n            pagination={paginationConfig}\n            {...props}\n        />\n    );\n};\n\nexport default memo(InsaTable);\n"]},"metadata":{},"sourceType":"module"}