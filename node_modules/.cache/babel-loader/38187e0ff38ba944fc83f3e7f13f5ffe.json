{"ast":null,"code":"import { CRUDReducer } from '../helper';\nimport types from './type';\nconst initState = {\n  data: {},\n  product: CRUDReducer(),\n  order: CRUDReducer(),\n  categories: [],\n  attributes: CRUDReducer(),\n  loadingStore: true,\n  warehouses: [],\n  stocks: CRUDReducer(),\n  customers: CRUDReducer(),\n  enableSaleChannels: []\n};\n\nconst storeReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.SET_LOADING_STORE:\n      return { ...state,\n        loadingStore: true\n      };\n\n    case types.SET_STORE:\n      return { ...state,\n        data: { ...state.data,\n          ...action.payload\n        },\n        loadingStore: false\n      };\n\n    case types.SET_PRODUCTS:\n      return { ...state,\n        product: { ...state.product,\n          ...action.payload,\n          loading: false\n        }\n      };\n\n    case types.SET_PRODUCT_LOADING:\n      return { ...state,\n        product: { ...state.product,\n          loading: action.payload\n        }\n      };\n\n    case types.SET_STORE_CATEGORIES:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case types.SET_ORDERS:\n      return { ...state,\n        order: { ...state.order,\n          ...action.payload,\n          loading: false\n        }\n      };\n\n    case types.SET_ORDER_LOADING:\n      return { ...state,\n        order: { ...state.order,\n          loading: action.payload\n        }\n      };\n\n    case types.SET_ATTRIBUTES:\n      return { ...state,\n        attributes: { ...state.attributes,\n          ...action.payload,\n          loading: false\n        }\n      };\n\n    case types.SET_ATTRIBUTE_LOADING:\n      return { ...state,\n        attributes: { ...state.attributes,\n          loading: action.payload\n        }\n      };\n\n    case types.RESET_STORE:\n      return initState;\n\n    case types.SET_WAREHOUSES:\n      return { ...state,\n        warehouses: action.payload\n      };\n\n    case types.SET_STOCK_LOADING:\n      return { ...state,\n        stocks: { ...state.stocks,\n          pagination: { ...state.stocks.pagination,\n            ...action.payload\n          },\n          loading: true\n        }\n      };\n\n    case types.SET_STOCKS:\n      return { ...state,\n        stocks: { ...state.stocks,\n          ...action.payload,\n          loading: false\n        }\n      };\n\n    case types.SET_CUSTOMERS:\n      return { ...state,\n        customers: { ...state.order,\n          ...action.payload,\n          loading: false\n        }\n      };\n\n    case types.SET_CUSTOMERS_LOADING:\n      return { ...state,\n        customers: { ...state.customers,\n          pagination: { ...state.customers.pagination,\n            ...action.payload\n          },\n          loading: true\n        }\n      };\n\n    case types.SET_ENABLE_SALE_CHANNELS:\n      return { ...state,\n        enableSaleChannels: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default storeReducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/reducers/storeState/reducer.ts"],"names":["CRUDReducer","types","initState","data","product","order","categories","attributes","loadingStore","warehouses","stocks","customers","enableSaleChannels","storeReducer","state","action","type","SET_LOADING_STORE","SET_STORE","payload","SET_PRODUCTS","loading","SET_PRODUCT_LOADING","SET_STORE_CATEGORIES","SET_ORDERS","SET_ORDER_LOADING","SET_ATTRIBUTES","SET_ATTRIBUTE_LOADING","RESET_STORE","SET_WAREHOUSES","SET_STOCK_LOADING","pagination","SET_STOCKS","SET_CUSTOMERS","SET_CUSTOMERS_LOADING","SET_ENABLE_SALE_CHANNELS"],"mappings":"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","sourcesContent":["import { CRUDReducer, ICRUDReducer } from '../helper';\nimport types from './type';\nimport { IStore, IStoreCategory, IWarehouse } from '../../models';\n\ninterface IAction {\n    type: string;\n    payload: any;\n}\n\nexport interface IStoreState {\n    order: ICRUDReducer<any>;\n    data: IStore;\n    product: ICRUDReducer<any>;\n    categories: IStoreCategory[];\n    attributes: ICRUDReducer<any>;\n    loadingStore: boolean;\n    warehouses: IWarehouse[];\n    stocks: ICRUDReducer<any>;\n    customers: ICRUDReducer<any>;\n    enableSaleChannels: string[];\n}\n\nconst initState: IStoreState = {\n    data: {},\n    product: CRUDReducer(),\n    order: CRUDReducer(),\n    categories: [],\n    attributes: CRUDReducer(),\n    loadingStore: true,\n    warehouses: [],\n    stocks: CRUDReducer(),\n    customers: CRUDReducer(),\n    enableSaleChannels: [],\n};\n\nconst storeReducer = (state = initState, action: IAction): IStoreState => {\n    switch (action.type) {\n        case types.SET_LOADING_STORE:\n            return {\n                ...state,\n                loadingStore: true,\n            };\n\n        case types.SET_STORE:\n            return {\n                ...state,\n                data: { ...state.data, ...action.payload },\n                loadingStore: false,\n            };\n        case types.SET_PRODUCTS:\n            return {\n                ...state,\n                product: {\n                    ...state.product,\n                    ...action.payload,\n                    loading: false,\n                },\n            };\n        case types.SET_PRODUCT_LOADING:\n            return {\n                ...state,\n                product: {\n                    ...state.product,\n                    loading: action.payload,\n                },\n            };\n        case types.SET_STORE_CATEGORIES:\n            return {\n                ...state,\n                categories: action.payload,\n            };\n        case types.SET_ORDERS:\n            return {\n                ...state,\n                order: {\n                    ...state.order,\n                    ...action.payload,\n                    loading: false,\n                },\n            };\n        case types.SET_ORDER_LOADING:\n            return {\n                ...state,\n                order: {\n                    ...state.order,\n                    loading: action.payload,\n                },\n            };\n\n        case types.SET_ATTRIBUTES:\n            return {\n                ...state,\n                attributes: {\n                    ...state.attributes,\n                    ...action.payload,\n                    loading: false,\n                },\n            };\n        case types.SET_ATTRIBUTE_LOADING:\n            return {\n                ...state,\n                attributes: {\n                    ...state.attributes,\n                    loading: action.payload,\n                },\n            };\n\n        case types.RESET_STORE:\n            return initState;\n\n        case types.SET_WAREHOUSES:\n            return {\n                ...state,\n                warehouses: action.payload,\n            };\n\n        case types.SET_STOCK_LOADING:\n            return {\n                ...state,\n                stocks: {\n                    ...state.stocks,\n                    pagination: {\n                        ...state.stocks.pagination,\n                        ...action.payload,\n                    },\n                    loading: true,\n                },\n            };\n\n        case types.SET_STOCKS:\n            return {\n                ...state,\n                stocks: {\n                    ...state.stocks,\n                    ...action.payload,\n                    loading: false,\n                },\n            };\n\n        case types.SET_CUSTOMERS:\n            return {\n                ...state,\n                customers: {\n                    ...state.order,\n                    ...action.payload,\n                    loading: false,\n                },\n            };\n        case types.SET_CUSTOMERS_LOADING:\n            return {\n                ...state,\n                customers: {\n                    ...state.customers,\n                    pagination: {\n                        ...state.customers.pagination,\n                        ...action.payload,\n                    },\n                    loading: true,\n                },\n            };\n\n        case types.SET_ENABLE_SALE_CHANNELS:\n            return {\n                ...state,\n                enableSaleChannels: action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\nexport default storeReducer;\n"]},"metadata":{},"sourceType":"module"}