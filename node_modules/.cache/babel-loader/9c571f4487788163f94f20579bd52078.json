{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/discount/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Form, InputNumber, Radio } from 'antd';\nimport { get } from 'lodash';\nimport React from 'react';\nimport formatMoney, { formatterInput, parserInput } from '../../../../../helper/format-money';\nimport { EDeliveryDiscountBy } from '../../../../../models/order';\nimport { useOrderNew } from '../../state/context';\nimport { EStatusPage } from '../../state/interface';\nimport { getValueDiscount, getMoneyProduct } from '../../ultil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst discountTypes = [{\n  label: 'VND',\n  value: EDeliveryDiscountBy.Money\n}, {\n  label: '%',\n  value: EDeliveryDiscountBy.Percent\n}];\n\nconst Discount = () => {\n  _s();\n\n  const {\n    statusPage,\n    changeValueField,\n    discountBy,\n    discount,\n    order,\n    products\n  } = useOrderNew();\n  const maxDiscountMoney = getMoneyProduct(products);\n  const isDiscountByMoney = discountBy === EDeliveryDiscountBy.Money;\n\n  if (statusPage === EStatusPage.DETAIL) {\n    if (discountBy === EDeliveryDiscountBy.Money) return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `${formatMoney(discount || 0)} đ`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this);\n    const orderProducts = get(order, 'products') || [];\n    const products = orderProducts.map(product => ({ ...product,\n      ...product.productId\n    }));\n    const value_discount = getValueDiscount({\n      products,\n      discount,\n      discountBy\n    });\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: `${formatMoney(value_discount)} đ`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  const onChangeDiscountType = e => {\n    const value = e.target.value;\n    changeValueField({\n      field: 'discountBy',\n      value\n    });\n\n    if (discount && discount > 100 && value === EDeliveryDiscountBy.Percent) {\n      changeValueField({\n        field: 'discount',\n        value: 100\n      });\n    }\n  };\n\n  const changeDiscountValue = value => {\n    changeValueField({\n      field: 'discount',\n      value: Number(value)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          value: discountBy,\n          onChange: onChangeDiscountType,\n          options: discountTypes,\n          optionType: \"button\",\n          className: \"discountType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"Nh\\u1EADp gi\\xE1 tr\\u1ECB chi\\u1EBFt kh\\u1EA5u\",\n          onChange: changeDiscountValue,\n          style: {\n            width: '100%'\n          },\n          value: discount,\n          formatter: formatterInput,\n          parser: parserInput,\n          min: 0,\n          max: isDiscountByMoney ? maxDiscountMoney : 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Discount, \"pn8D2Lr/erUUcTAA352cETUxc1A=\", false, function () {\n  return [useOrderNew];\n});\n\n_c = Discount;\nexport default Discount;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discount\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/discount/index.tsx"],"names":["Col","Form","InputNumber","Radio","get","React","formatMoney","formatterInput","parserInput","EDeliveryDiscountBy","useOrderNew","EStatusPage","getValueDiscount","getMoneyProduct","discountTypes","label","value","Money","Percent","Discount","statusPage","changeValueField","discountBy","discount","order","products","maxDiscountMoney","isDiscountByMoney","DETAIL","orderProducts","map","product","productId","value_discount","onChangeDiscountType","e","target","field","changeDiscountValue","Number","flex","width"],"mappings":"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","sourcesContent":["import { Col, Form, InputNumber, Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport { get } from 'lodash';\nimport React from 'react';\nimport formatMoney, { formatterInput, parserInput } from '../../../../../helper/format-money';\nimport { EDeliveryDiscountBy } from '../../../../../models/order';\nimport { useOrderNew } from '../../state/context';\nimport { EStatusPage } from '../../state/interface';\nimport { getValueDiscount, getMoneyProduct } from '../../ultil';\n\ninterface IDiscountItem {\n    label: string;\n    value: EDeliveryDiscountBy;\n}\n\nconst discountTypes: IDiscountItem[] = [\n    {\n        label: 'VND',\n        value: EDeliveryDiscountBy.Money,\n    },\n    {\n        label: '%',\n        value: EDeliveryDiscountBy.Percent,\n    },\n];\n\nconst Discount = () => {\n    const { statusPage, changeValueField, discountBy, discount, order, products } = useOrderNew();\n\n    const maxDiscountMoney = getMoneyProduct(products);\n    const isDiscountByMoney = discountBy === EDeliveryDiscountBy.Money;\n\n    if (statusPage === EStatusPage.DETAIL) {\n        if (discountBy === EDeliveryDiscountBy.Money)\n            return <span>{`${formatMoney(discount || 0)} đ`}</span>;\n\n        const orderProducts = get(order, 'products') || [];\n\n        const products = orderProducts.map((product: any) => ({\n            ...product,\n            ...product.productId,\n        }));\n\n        const value_discount = getValueDiscount({\n            products,\n            discount,\n            discountBy,\n        });\n\n        return <span>{`${formatMoney(value_discount)} đ`}</span>;\n    }\n\n    const onChangeDiscountType = (e: RadioChangeEvent) => {\n\n        const value = e.target.value;\n        changeValueField({\n            field: 'discountBy',\n            value,\n        });\n\n        if (discount && discount > 100 && value === EDeliveryDiscountBy.Percent) {\n            changeValueField({\n                field: 'discount',\n                value: 100,\n            });\n        }\n    };\n\n    const changeDiscountValue = (value?: string | number) => {\n        changeValueField({\n            field: 'discount',\n            value: Number(value),\n        });\n    };\n\n    return (\n        <>\n            <Col>\n                <Form.Item>\n                    <Radio.Group\n                        value={discountBy}\n                        onChange={onChangeDiscountType}\n                        options={discountTypes}\n                        optionType=\"button\"\n                        className=\"discountType\"\n                    />\n                </Form.Item>\n            </Col>\n\n            <Col\n                style={{\n                    flex: 1,\n                }}\n            >\n                <Form.Item>\n                    <InputNumber\n                        placeholder=\"Nhập giá trị chiết khấu\"\n                        onChange={changeDiscountValue}\n                        style={{\n                            width: '100%',\n                        }}\n                        value={discount}\n                        formatter={formatterInput}\n                        parser={parserInput}\n                        min={0}\n                        max={isDiscountByMoney ? maxDiscountMoney : 100}\n                    />\n                </Form.Item>\n            </Col>\n        </>\n    );\n};\n\nexport default Discount;\n"]},"metadata":{},"sourceType":"module"}