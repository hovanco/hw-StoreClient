{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/overview/components/modal-list-delivery/table-delivery-list.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport orderApi from '../../../../../api/order-api';\nimport { InsaTable } from '../../../../../components';\nimport formatMoney from '../../../../../helper/format-money';\nimport OrderLabelStatus from '../../../../order/components/order-label-status';\nimport PaidLabelStatus from '../../../../order/components/paid-label-status';\nimport { getFeeForCustomer } from '../../../../order/create/ultil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIMIT = 20;\n\nconst TableDeliveryList = ({\n  status,\n  times\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const history = useHistory();\n  const store = useSelector(({\n    store\n  }) => store.data);\n\n  const onChangePagination = (pageNumber, pageSize) => {\n    setPage(pageNumber);\n    fetchData(pageNumber);\n  };\n\n  const gotoOrder = orderId => {\n    history.push(`/orders/order/${orderId}`);\n  };\n\n  const fetchData = async pageNumber => {\n    try {\n      setLoading(true);\n      const res = await orderApi.getOrder({\n        id: store._id,\n        limit: LIMIT,\n        page: pageNumber || page,\n        status,\n        startTime: times[0],\n        endTime: times[1]\n      });\n      setData(res.data || []);\n      setTotal(res.total || 0);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setPage(1);\n    setData([]);\n    setTotal(0);\n    fetchData(1); // eslint-disable-next-line\n  }, [status]);\n  const columns = [{\n    title: 'Mã đơn hàng',\n    align: 'center',\n    dataIndex: 'code',\n    key: 'code',\n    render: (text, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"blue-text\",\n      onClick: () => gotoOrder(order._id),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Khách hàng',\n    align: 'center',\n    dataIndex: 'customer',\n    key: 'customer',\n    render: (customer, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => gotoOrder(order._id),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blue-text\",\n        children: [customer === null || customer === void 0 ? void 0 : customer.phoneNo, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), customer === null || customer === void 0 ? void 0 : customer.name, \" \", customer === null || customer === void 0 ? void 0 : customer.address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Trạng thái đơn hàng',\n    align: 'center',\n    dataIndex: 'status',\n    key: 'status',\n    render: (status, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => gotoOrder(order._id),\n      children: /*#__PURE__*/_jsxDEV(OrderLabelStatus, {\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Trạng thái thanh toán',\n    align: 'center',\n    dataIndex: 'paidAt',\n    key: 'paidAt',\n    render: paidAt => /*#__PURE__*/_jsxDEV(PaidLabelStatus, {\n      paidAt: paidAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }, this)\n  }, {\n    title: 'Ngày tạo đơn',\n    align: 'center',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    render: (text, order) => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => gotoOrder(order._id),\n      children: [moment(text).format('HH:mm'), \" \", moment(text).format('DD/MM/YYYY')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Ghi chú',\n    align: 'center',\n    dataIndex: '',\n    key: 'note',\n    render: order => {\n      const text = order.note && order.note.length > 0 ? order.note : order.deliveryOptions && order.deliveryOptions.customerNote ? order.deliveryOptions.customerNote : '---';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => gotoOrder(order._id),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'Khách phải trả',\n    align: 'center',\n    render: order => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => gotoOrder(order._id),\n      children: [formatMoney(getFeeForCustomer(order)), \" VND\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(InsaTable, {\n    loading: loading,\n    columns: columns,\n    isShowTotal: true,\n    dataSource: data,\n    rowKey: \"_id\",\n    bordered: true,\n    pagination: {\n      pageSize: LIMIT,\n      current: page,\n      total: total,\n      onChange: onChangePagination\n    },\n    hasDefaultColumn: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableDeliveryList, \"dC2UrdZkNop7VLTGXKI0nqVFjw8=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = TableDeliveryList;\nexport default TableDeliveryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableDeliveryList\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/overview/components/modal-list-delivery/table-delivery-list.tsx"],"names":["moment","React","useEffect","useState","useSelector","useHistory","orderApi","InsaTable","formatMoney","OrderLabelStatus","PaidLabelStatus","getFeeForCustomer","LIMIT","TableDeliveryList","status","times","loading","setLoading","page","setPage","data","setData","total","setTotal","history","store","onChangePagination","pageNumber","pageSize","fetchData","gotoOrder","orderId","push","res","getOrder","id","_id","limit","startTime","endTime","error","columns","title","align","dataIndex","key","render","text","order","customer","phoneNo","name","address","paidAt","format","note","length","deliveryOptions","customerNote","current","onChange"],"mappings":"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","sourcesContent":["import { ColumnsType } from 'antd/lib/table';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport orderApi from '../../../../../api/order-api';\nimport { InsaTable } from '../../../../../components';\nimport formatMoney from '../../../../../helper/format-money';\nimport { ICustomer, IOrder, ORDER_STATUS } from '../../../../../models';\nimport { IStoreState } from '../../../../../reducers/storeState/reducer';\nimport OrderLabelStatus from '../../../../order/components/order-label-status';\nimport PaidLabelStatus from '../../../../order/components/paid-label-status';\nimport { getFeeForCustomer } from '../../../../order/create/ultil';\n\ninterface Props {\n    status: number;\n    times: any[];\n}\n\nconst LIMIT = 20;\n\nconst TableDeliveryList: FC<Props> = ({ status, times }) => {\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [data, setData] = useState<any[]>([]);\n    const [total, setTotal] = useState(0);\n\n    const history = useHistory();\n\n    const store = useSelector(({ store }: { store: IStoreState }) => store.data);\n\n    const onChangePagination = (pageNumber: number, pageSize?: number) => {\n        setPage(pageNumber);\n        fetchData(pageNumber);\n    };\n\n    const gotoOrder = (orderId: string) => {\n        history.push(`/orders/order/${orderId}`);\n    };\n\n    const fetchData = async (pageNumber?: number) => {\n        try {\n            setLoading(true);\n            const res = await orderApi.getOrder({\n                id: store._id as string,\n                limit: LIMIT,\n                page: pageNumber || page,\n                status,\n                startTime: times[0],\n                endTime: times[1],\n            });\n\n            setData(res.data || []);\n            setTotal(res.total || 0);\n            \n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        setPage(1);\n        setData([]);\n        setTotal(0);\n        fetchData(1);\n        // eslint-disable-next-line\n    }, [status]);\n\n    const columns: ColumnsType<IOrder> = [\n        {\n            title: 'Mã đơn hàng',\n            align: 'center',\n            dataIndex: 'code',\n            key: 'code',\n            render: (text: string, order) => (\n                <span className=\"blue-text\" onClick={() => gotoOrder(order._id)}>\n                    {text}\n                </span>\n            ),\n        },\n        {\n            title: 'Khách hàng',\n            align: 'center',\n            dataIndex: 'customer',\n            key: 'customer',\n            render: (customer: ICustomer, order) => (\n                <span onClick={() => gotoOrder(order._id)}>\n                    <span className=\"blue-text\">{customer?.phoneNo} </span>\n                    {customer?.name} {customer?.address}\n                </span>\n            ),\n        },\n        {\n            title: 'Trạng thái đơn hàng',\n            align: 'center',\n            dataIndex: 'status',\n            key: 'status',\n            render: (status: ORDER_STATUS, order) => (\n                <span onClick={() => gotoOrder(order._id)}>\n                    <OrderLabelStatus status={status} />\n                </span>\n            ),\n        },\n        {\n            title: 'Trạng thái thanh toán',\n            align: 'center',\n            dataIndex: 'paidAt',\n            key: 'paidAt',\n            render: (paidAt: string) => <PaidLabelStatus paidAt={paidAt} />,\n        },\n        {\n            title: 'Ngày tạo đơn',\n            align: 'center',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            render: (text: string, order) => (\n                <span onClick={() => gotoOrder(order._id)}>\n                    {moment(text).format('HH:mm')} {moment(text).format('DD/MM/YYYY')}\n                </span>\n            ),\n        },\n        {\n            title: 'Ghi chú',\n            align: 'center',\n            dataIndex: '',\n            key: 'note',\n            render: (order: IOrder) => {\n                const text =\n                    order.note && order.note.length > 0\n                        ? order.note\n                        : order.deliveryOptions && order.deliveryOptions.customerNote\n                        ? order.deliveryOptions.customerNote\n                        : '---';\n\n                return <span onClick={() => gotoOrder(order._id)}>{text}</span>;\n            },\n        },\n\n        {\n            title: 'Khách phải trả',\n            align: 'center',\n            render: (order: IOrder) => (\n                <span onClick={() => gotoOrder(order._id)}>{formatMoney(getFeeForCustomer(order))} VND</span>\n            ),\n        },\n    ];\n\n    return (\n        <InsaTable\n            loading={loading}\n            columns={columns}\n            isShowTotal\n            dataSource={data}\n            rowKey=\"_id\"\n            bordered\n            pagination={{\n                pageSize: LIMIT,\n                current: page,\n                total: total,\n                onChange: onChangePagination,\n            }}\n            hasDefaultColumn={false}\n        />\n    );\n};\n\nexport default TableDeliveryList;\n"]},"metadata":{},"sourceType":"module"}