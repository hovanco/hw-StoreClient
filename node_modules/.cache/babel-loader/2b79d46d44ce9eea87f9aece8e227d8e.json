{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/detail/components/btn-confrm-finish/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, message, Modal } from 'antd';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../../api/order-api';\nimport { ORDER_STATUS } from '../../../../../models';\nimport { useOrderDetail } from '../../state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BtnConfirmFinish = ({\n  order\n}) => {\n  _s();\n\n  const {\n    loadOrder\n  } = useOrderDetail();\n  const store = useSelector(state => state.store.data);\n\n  const finishOrder = async () => {\n    Modal.confirm({\n      title: 'Hoàn thành đơn hàng',\n      content: 'Xác nhận hoàn thành đơn hàng',\n      okText: 'Xác nhận',\n      cancelText: 'Hủy',\n      onOk: () => new Promise(async (resolve, reject) => {\n        try {\n          const orderResponse = await orderApi.updateOrder({\n            storeId: store._id,\n            orderId: order._id,\n            data: {\n              status: ORDER_STATUS.DELIVERED\n            }\n          });\n          loadOrder(orderResponse._id);\n          message.success('Đơn hàng đã hoàn thành');\n          return resolve();\n        } catch (error) {\n          message.error('Đã xảy ra lỗi, vui lòng thử lại');\n          return reject();\n        }\n      }),\n      onCancel: () => {}\n    });\n  };\n\n  const disabled = order.status === ORDER_STATUS.DELIVERED;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    type: \"primary\",\n    onClick: finishOrder,\n    disabled: disabled,\n    children: \"Ho\\xE0n th\\xE0nh \\u0111\\u01A1n h\\xE0ng\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BtnConfirmFinish, \"KpiHelxaXtyARTs8TxgaXgt3teU=\", false, function () {\n  return [useOrderDetail, useSelector];\n});\n\n_c = BtnConfirmFinish;\nexport default BtnConfirmFinish;\n\nvar _c;\n\n$RefreshReg$(_c, \"BtnConfirmFinish\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/detail/components/btn-confrm-finish/index.tsx"],"names":["Button","message","Modal","React","useSelector","orderApi","ORDER_STATUS","useOrderDetail","BtnConfirmFinish","order","loadOrder","store","state","data","finishOrder","confirm","title","content","okText","cancelText","onOk","Promise","resolve","reject","orderResponse","updateOrder","storeId","_id","orderId","status","DELIVERED","success","error","onCancel","disabled"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,MAAvC;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAAiBC,YAAjB,QAAqC,uBAArC;AAEA,SAASC,cAAT,QAA+B,aAA/B;;;AAMA,MAAMC,gBAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,cAAc,EAApC;AACA,QAAMI,KAAK,GAAGP,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACD,KAAN,CAAYE,IAAhC,CAAzB;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC5BZ,IAAAA,KAAK,CAACa,OAAN,CAAc;AACVC,MAAAA,KAAK,EAAE,qBADG;AAEVC,MAAAA,OAAO,EAAE,8BAFC;AAGVC,MAAAA,MAAM,EAAE,UAHE;AAIVC,MAAAA,UAAU,EAAE,KAJF;AAKVC,MAAAA,IAAI,EAAE,MACF,IAAIC,OAAJ,CAAkB,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACzC,YAAI;AACA,gBAAMC,aAAa,GAAG,MAAMnB,QAAQ,CAACoB,WAAT,CAAqB;AAC7CC,YAAAA,OAAO,EAAEf,KAAK,CAACgB,GAD8B;AAE7CC,YAAAA,OAAO,EAAGnB,KAAD,CAAkBkB,GAFkB;AAG7Cd,YAAAA,IAAI,EAAE;AACFgB,cAAAA,MAAM,EAAEvB,YAAY,CAACwB;AADnB;AAHuC,WAArB,CAA5B;AAQApB,UAAAA,SAAS,CAACc,aAAa,CAACG,GAAf,CAAT;AACA1B,UAAAA,OAAO,CAAC8B,OAAR,CAAgB,wBAAhB;AACA,iBAAOT,OAAO,EAAd;AACH,SAZD,CAYE,OAAOU,KAAP,EAAc;AACZ/B,UAAAA,OAAO,CAAC+B,KAAR,CAAc,iCAAd;AACA,iBAAOT,MAAM,EAAb;AACH;AACJ,OAjBD,CANM;AAyBVU,MAAAA,QAAQ,EAAE,MAAM,CAAE;AAzBR,KAAd;AA2BH,GA5BD;;AA8BA,QAAMC,QAAQ,GAAGzB,KAAK,CAACoB,MAAN,KAAiBvB,YAAY,CAACwB,SAA/C;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEhB,WAAhC;AAA6C,IAAA,QAAQ,EAAEoB,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzCD;;GAAM1B,gB;UACoBD,c,EACRH,W;;;KAFZI,gB;AA2CN,eAAeA,gBAAf","sourcesContent":["import { Button, message, Modal } from 'antd';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../../api/order-api';\nimport { IOrder, ORDER_STATUS } from '../../../../../models';\nimport { IState } from '../../../../../store/rootReducer';\nimport { useOrderDetail } from '../../state';\n\ninterface Props {\n    order: IOrder;\n}\n\nconst BtnConfirmFinish: FC<Props> = ({ order }) => {\n    const { loadOrder } = useOrderDetail();\n    const store = useSelector((state: IState) => state.store.data);\n\n    const finishOrder = async () => {\n        Modal.confirm({\n            title: 'Hoàn thành đơn hàng',\n            content: 'Xác nhận hoàn thành đơn hàng',\n            okText: 'Xác nhận',\n            cancelText: 'Hủy',\n            onOk: () =>\n                new Promise<void>(async (resolve, reject) => {\n                    try {\n                        const orderResponse = await orderApi.updateOrder({\n                            storeId: store._id as string,\n                            orderId: (order as IOrder)._id,\n                            data: {\n                                status: ORDER_STATUS.DELIVERED,\n                            },\n                        });\n\n                        loadOrder(orderResponse._id);\n                        message.success('Đơn hàng đã hoàn thành');\n                        return resolve();\n                    } catch (error) {\n                        message.error('Đã xảy ra lỗi, vui lòng thử lại');\n                        return reject();\n                    }\n                }),\n\n            onCancel: () => {},\n        });\n    };\n\n    const disabled = order.status === ORDER_STATUS.DELIVERED;\n\n    return (\n        <Button type=\"primary\" onClick={finishOrder} disabled={disabled}>\n            Hoàn thành đơn hàng\n        </Button>\n    );\n};\n\nexport default BtnConfirmFinish;\n"]},"metadata":{},"sourceType":"module"}