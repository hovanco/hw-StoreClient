{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/overview/components/status-counts/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Col, Row } from 'antd';\nimport clx from 'classnames';\nimport React, { useState } from 'react';\nimport { ORDER_STATUS } from '../../../../../models/order';\nimport ModalDeliveryList from '../modal-list-delivery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataBase = [{\n  count: 0,\n  status: ORDER_STATUS.NEW,\n  title: 'Chờ đóng gói'\n}, {\n  count: 0,\n  status: ORDER_STATUS.WAIT_FOR_DELIVERY,\n  title: 'Đã đóng gói'\n}, {\n  count: 0,\n  status: ORDER_STATUS.DELIVERING,\n  title: 'Đang giao'\n}, {\n  count: 0,\n  status: ORDER_STATUS.CANCELED,\n  title: 'Hủy giao - chờ nhận'\n}, {\n  count: 0,\n  status: ORDER_STATUS.DELIVERED,\n  title: 'Đã giao'\n}, {\n  count: 0,\n  status: ORDER_STATUS.RETURNED,\n  title: 'Hủy giao - đã nhận'\n}];\n\nconst StatusCounts = ({\n  statusCounts,\n  times\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [status, setStatus] = useState(0);\n  const data = dataBase.map(item => {\n    const exist = statusCounts.find(i => i.status === item.status);\n    return { ...item,\n      ...exist\n    };\n  });\n\n  const showListDelivery = item => {\n    setStatus(item.status);\n    setVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"delivery-card\",\n    gutter: [16, 16],\n    children: [data.map(item => {\n      const className = clx('card-custom', {\n        cancel: item.status === ORDER_STATUS.CANCELED,\n        delivered: item.status === ORDER_STATUS.DELIVERED,\n        returned: item.status === ORDER_STATUS.RETURNED\n      });\n      return /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: className,\n          bordered: false,\n          type: \"inner\",\n          onClick: () => showListDelivery(item),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"delivery-number\",\n            children: item.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delivery-status\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, item.status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ModalDeliveryList, {\n      status: status,\n      times: times,\n      visible: visible,\n      setVisible: setVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StatusCounts, \"2INVAEu+aV5aPF1ns8D8dend0AA=\");\n\n_c = StatusCounts;\nexport { StatusCounts };\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusCounts\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/overview/components/status-counts/index.tsx"],"names":["Card","Col","Row","clx","React","useState","ORDER_STATUS","ModalDeliveryList","dataBase","count","status","NEW","title","WAIT_FOR_DELIVERY","DELIVERING","CANCELED","DELIVERED","RETURNED","StatusCounts","statusCounts","times","visible","setVisible","setStatus","data","map","item","exist","find","i","showListDelivery","className","cancel","delivered","returned"],"mappings":"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","sourcesContent":["import { Card, Col, Row } from 'antd';\nimport clx from 'classnames';\nimport React, { FC, useState } from 'react';\nimport { ORDER_STATUS } from '../../../../../models/order';\nimport ModalDeliveryList from '../modal-list-delivery';\n\ninterface IStatusCount {}\ninterface Props {\n    statusCounts: any[];\n    times: any[];\n}\n\ninterface IStatusCount {\n    count: number;\n    status: ORDER_STATUS;\n    title: string;\n}\n\nconst dataBase: IStatusCount[] = [\n    {\n        count: 0,\n        status: ORDER_STATUS.NEW,\n        title: 'Chờ đóng gói',\n    },\n    {\n        count: 0,\n        status: ORDER_STATUS.WAIT_FOR_DELIVERY,\n        title: 'Đã đóng gói',\n    },\n    {\n        count: 0,\n        status: ORDER_STATUS.DELIVERING,\n        title: 'Đang giao',\n    },\n    {\n        count: 0,\n        status: ORDER_STATUS.CANCELED,\n        title: 'Hủy giao - chờ nhận',\n    },\n    {\n        count: 0,\n        status: ORDER_STATUS.DELIVERED,\n        title: 'Đã giao',\n    },\n    {\n        count: 0,\n        status: ORDER_STATUS.RETURNED,\n        title: 'Hủy giao - đã nhận',\n    },\n];\n\nconst StatusCounts: FC<Props> = ({ statusCounts, times }) => {\n    const [visible, setVisible] = useState(false);\n    const [status, setStatus] = useState(0);\n\n    const data = dataBase.map((item: any) => {\n        const exist = statusCounts.find((i: any) => i.status === item.status);\n\n        return {\n            ...item,\n            ...exist,\n        };\n    });\n\n    const showListDelivery = (item: any) => {\n        setStatus(item.status);\n        setVisible(true);\n    }\n\n    return (\n        <Row className=\"delivery-card\" gutter={[16, 16]}>\n            {data.map((item) => {\n                const className = clx('card-custom', {\n                    cancel: item.status === ORDER_STATUS.CANCELED,\n                    delivered: item.status === ORDER_STATUS.DELIVERED,\n                    returned: item.status === ORDER_STATUS.RETURNED,\n                });\n                return (\n                    <Col key={item.status} span={8}>\n                        <Card className={className} bordered={false} type=\"inner\" onClick={() => showListDelivery(item)}>\n                            <div className=\"delivery-number\">{item.count}</div>\n                            <span className=\"delivery-status\">{item.title}</span>\n                        </Card>\n                    </Col>\n                );\n            })}\n            <ModalDeliveryList status={status} times={times} visible={visible} setVisible={setVisible} />\n        </Row>\n    );\n};\n\nexport { StatusCounts };\n"]},"metadata":{},"sourceType":"module"}