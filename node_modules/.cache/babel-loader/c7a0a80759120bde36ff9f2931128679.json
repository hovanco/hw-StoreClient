{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-list/select-warehouse.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useInventoryTable } from './context';\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectWarehouse = () => {\n  _s();\n\n  const {\n    filter,\n    warehouseChange\n  } = useInventoryTable();\n  const storeObj = useSelector(({\n    store\n  }) => store.data);\n  const warehouses = useSelector(({\n    store\n  }) => store.warehouses);\n  const getWarehouseOptions = useMemo(() => {\n    if (warehouses.length === 0) return [];\n    return warehouses.map(warehouse => {\n      if (storeObj.warehouseId === warehouse._id) return {\n        name: 'Kho mặc định',\n        value: storeObj.warehouseId\n      };\n      return {\n        name: warehouse.name,\n        value: warehouse._id\n      };\n    });\n  }, [storeObj.warehouseId, warehouses]);\n\n  const handleChangeWarehouse = value => {\n    warehouseChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    style: {\n      minWidth: 200\n    },\n    value: filter.warehouseId,\n    onChange: handleChangeWarehouse,\n    children: getWarehouseOptions.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n      value: item.value,\n      children: item.name\n    }, item.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectWarehouse, \"FJO3YDhfSu5Sv+3Kg/GkRDWPCL4=\", false, function () {\n  return [useInventoryTable, useSelector, useSelector];\n});\n\n_c = SelectWarehouse;\nexport default SelectWarehouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectWarehouse\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-list/select-warehouse.tsx"],"names":["React","useMemo","useSelector","useInventoryTable","Select","SelectWarehouse","filter","warehouseChange","storeObj","store","data","warehouses","getWarehouseOptions","length","map","warehouse","warehouseId","_id","name","value","handleChangeWarehouse","minWidth","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,SAASC,iBAAT,QAAkC,WAAlC;AAEA,SAASC,MAAT,QAAuB,MAAvB;;;AAEA,MAAMC,eAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA8BJ,iBAAiB,EAArD;AAEA,QAAMK,QAAQ,GAAGN,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACC,IAA9C,CAA5B;AAEA,QAAMC,UAAU,GAAGT,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACE,UAA9C,CAA9B;AAEA,QAAMC,mBAAmB,GAAGX,OAAO,CAAC,MAAM;AACtC,QAAIU,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B,OAAO,EAAP;AAE7B,WAAOF,UAAU,CAACG,GAAX,CAAgBC,SAAD,IAA2B;AAC7C,UAAIP,QAAQ,CAACQ,WAAT,KAAyBD,SAAS,CAACE,GAAvC,EACI,OAAO;AACHC,QAAAA,IAAI,EAAE,cADH;AAEHC,QAAAA,KAAK,EAAEX,QAAQ,CAACQ;AAFb,OAAP;AAKJ,aAAO;AACHE,QAAAA,IAAI,EAAEH,SAAS,CAACG,IADb;AAEHC,QAAAA,KAAK,EAAEJ,SAAS,CAACE;AAFd,OAAP;AAIH,KAXM,CAAP;AAYH,GAfkC,EAehC,CAACT,QAAQ,CAACQ,WAAV,EAAuBL,UAAvB,CAfgC,CAAnC;;AAiBA,QAAMS,qBAAqB,GAAID,KAAD,IAAmB;AAC7CZ,IAAAA,eAAe,CAACY,KAAD,CAAf;AACH,GAFD;;AAIA,sBACI,QAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KADX;AAEI,IAAA,KAAK,EAAEf,MAAM,CAACU,WAFlB;AAGI,IAAA,QAAQ,EAAEI,qBAHd;AAAA,cAKKR,mBAAmB,CAACE,GAApB,CAAyBQ,IAAD,iBACrB,QAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAEA,IAAI,CAACH,KAA3B;AAAA,gBACKG,IAAI,CAACJ;AADV,OAAuCI,IAAI,CAACH,KAA5C;AAAA;AAAA;AAAA;AAAA,YADH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzCD;;GAAMd,e;UACkCF,iB,EAEnBD,W,EAEEA,W;;;KALjBG,e;AA2CN,eAAeA,eAAf","sourcesContent":["import React, { FC, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { IStoreState } from '../../../reducers/storeState/reducer';\nimport { IWarehouse } from '../../../models';\nimport { useInventoryTable } from './context';\n\nimport { Select } from 'antd';\n\nconst SelectWarehouse: FC = () => {\n    const { filter, warehouseChange } = useInventoryTable();\n\n    const storeObj = useSelector(({ store }: { store: IStoreState }) => store.data);\n\n    const warehouses = useSelector(({ store }: { store: IStoreState }) => store.warehouses);\n\n    const getWarehouseOptions = useMemo(() => {\n        if (warehouses.length === 0) return [];\n\n        return warehouses.map((warehouse: IWarehouse) => {\n            if (storeObj.warehouseId === warehouse._id)\n                return {\n                    name: 'Kho mặc định',\n                    value: storeObj.warehouseId as string,\n                };\n\n            return {\n                name: warehouse.name as string,\n                value: warehouse._id as string,\n            };\n        });\n    }, [storeObj.warehouseId, warehouses]);\n\n    const handleChangeWarehouse = (value: string) => {\n        warehouseChange(value);\n    };\n\n    return (\n        <Select\n            style={{ minWidth: 200 }}\n            value={filter.warehouseId}\n            onChange={handleChangeWarehouse}\n        >\n            {getWarehouseOptions.map((item: any) => (\n                <Select.Option value={item.value} key={item.value}>\n                    {item.name}\n                </Select.Option>\n            ))}\n        </Select>\n    );\n};\n\nexport default SelectWarehouse;\n"]},"metadata":{},"sourceType":"module"}