{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/context/context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useMemo, useReducer, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport reducer, { initialReducer } from './reducer';\nimport types from './type';\nimport { pick } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContext = {\n  state: initialReducer,\n  dispatch: () => {},\n  form: {}\n};\nexport const ProductContext = /*#__PURE__*/createContext(initialContext);\nexport const ProductContextProvider = ({\n  form,\n  isCreateMode = false,\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialReducer);\n  const listAttribute = useSelector(state => state.store.attributes.data);\n  useEffect(() => {\n    if (listAttribute.length && isCreateMode) {\n      dispatch({\n        type: types.ADD_ATTRIBUTES,\n        payload: { ...pick(listAttribute[0], ['_id', 'name']),\n          tags: []\n        }\n      });\n    }\n  }, [listAttribute, isCreateMode]);\n  useEffect(() => {\n    let newOptionData = listAttribute;\n\n    if (state.attributes.length) {\n      newOptionData = listAttribute.filter(attribute => state.attributes.map(i => i._id).indexOf(attribute._id) === -1);\n    }\n\n    dispatch({\n      type: types.SET_ATTRIBUTE_OPTIONS,\n      payload: newOptionData\n    });\n  }, [state.attributes, listAttribute]);\n  useEffect(() => {\n    form.setFieldsValue({ ...pick(state, ['variants', 'attributes', 'stocks'])\n    });\n  }, [state.variants, state.attributes, state.stocks]);\n  const value = useMemo(() => ({\n    state,\n    dispatch,\n    form,\n    isCreateMode\n  }), [state, form, isCreateMode]);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProductContextProvider, \"kBUnzg0mH1Zk78FK/RoZb0iJJA0=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProductContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/context/context.tsx"],"names":["React","createContext","useMemo","useReducer","useEffect","useSelector","reducer","initialReducer","types","pick","initialContext","state","dispatch","form","ProductContext","ProductContextProvider","isCreateMode","children","listAttribute","store","attributes","data","length","type","ADD_ATTRIBUTES","payload","tags","newOptionData","filter","attribute","map","i","_id","indexOf","SET_ATTRIBUTE_OPTIONS","setFieldsValue","variants","stocks","value"],"mappings":"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","sourcesContent":["import React, { FC, createContext, useMemo, useReducer, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport reducer, { initialReducer } from './reducer';\nimport { IContext, IAttributeOption } from './interface';\nimport { FormInstance } from 'antd/lib/form';\nimport types from './type';\nimport { pick } from 'lodash';\n\nconst initialContext = {\n    state: initialReducer,\n    dispatch: () => {},\n    form: {} as FormInstance,\n};\n\nexport const ProductContext = createContext<IContext>(initialContext);\n\ninterface Props {\n    form: FormInstance;\n    isCreateMode?: boolean;\n    children: React.ReactNode;\n}\n\nexport const ProductContextProvider: FC<Props> = ({ form, isCreateMode = false, children }) => {\n    const [state, dispatch] = useReducer(reducer, initialReducer);\n    const listAttribute: IAttributeOption[] = useSelector(\n        (state: any) => state.store.attributes.data\n    );\n\n    useEffect(() => {\n        if (listAttribute.length && isCreateMode) {\n            dispatch({\n                type: types.ADD_ATTRIBUTES,\n                payload: {\n                    ...pick(listAttribute[0], ['_id', 'name']),\n                    tags: [],\n                },\n            });\n        }\n    }, [listAttribute, isCreateMode]);\n\n    useEffect(() => {\n        let newOptionData: IAttributeOption[] = listAttribute;\n\n        if (state.attributes.length) {\n            newOptionData = listAttribute.filter(\n                (attribute: any) =>\n                    state.attributes.map((i: any) => i._id).indexOf(attribute._id) === -1\n            );\n        }\n\n        dispatch({\n            type: types.SET_ATTRIBUTE_OPTIONS,\n            payload: newOptionData,\n        });\n    }, [state.attributes, listAttribute]);\n\n    useEffect(() => {\n        form.setFieldsValue({\n            ...pick(state, ['variants', 'attributes', 'stocks']),\n        });\n    }, [state.variants, state.attributes, state.stocks]);\n\n    const value = useMemo(() => ({ state, dispatch, form, isCreateMode }), [\n        state,\n        form,\n        isCreateMode,\n    ]);\n\n    return <ProductContext.Provider value={value}>{children}</ProductContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}