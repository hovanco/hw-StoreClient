{"ast":null,"code":"import { get, pick } from 'lodash';\nimport { EDeliveryDiscountBy } from '../../../../models/order';\nimport { EShipTypes } from './interface';\nimport types from './types';\nconst initialReducer = {\n  products: [],\n  customer: undefined,\n  infoDelivery: undefined,\n  shipType: EShipTypes.SendShipping,\n  warehouseId: undefined,\n  shipmentFee: undefined,\n  shipmentFeeForCustomer: undefined,\n  discountBy: EDeliveryDiscountBy.Money,\n  discount: undefined,\n  noteForDelivery: undefined,\n  customerNote: undefined,\n  ship: undefined,\n  source: undefined,\n  paymentType: undefined,\n  paymentMethod: undefined,\n  isEdit: false,\n  delivered: true\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case types.INIT_STATE:\n      return { ...state,\n        ...action.payload\n      };\n\n    case types.ADD_PRODUCTS:\n      return { ...state,\n        products: action.payload\n      };\n\n    case types.ADD_PRODUCT:\n      {\n        const product_exit = state.products.find(item => item._id === action.payload._id);\n        const newProducts = product_exit ? state.products.map(product => {\n          if (product._id === action.payload._id) return { ...product,\n            count: product.count + 1\n          };\n          return product;\n        }) : [...state.products, action.payload];\n        return { ...state,\n          products: newProducts,\n          isEdit: true\n        };\n      }\n\n    case types.REMOVE_PRODUCT:\n      {\n        const newProducts = state.products.filter(product => product._id !== action.payload);\n\n        if (newProducts.length === 0) {\n          return { ...state,\n            products: [],\n            ship: undefined,\n            shipmentFee: 0\n          };\n        }\n\n        return { ...state,\n          products: newProducts\n        };\n      }\n\n    case types.UPDATE_COUNT_PRODUCT:\n      {\n        const newProducts = state.products.map(product => {\n          if (product._id === action.payload._id) return action.payload;\n          return product;\n        });\n        return { ...state,\n          products: newProducts\n        };\n      }\n\n    case types.ADD_CUSTOMER:\n      return { ...state,\n        customer: action.payload,\n        infoDelivery: pick(action.payload, ['name', 'phoneNo', 'address', 'ward', 'wardName', 'district', 'districtName', 'province', 'provinceName'])\n      };\n\n    case types.UPDATE_INFO_DELIVERY:\n      return { ...state,\n        infoDelivery: action.payload\n      };\n\n    case types.REMOVE_CUSTOMER:\n      return { ...state,\n        customer: undefined,\n        infoDelivery: undefined,\n        ship: undefined,\n        shipmentFee: 0\n      };\n\n    case types.CHANGE_WAREHOUSE:\n      return { ...state,\n        warehouseId: action.payload,\n        products: []\n      };\n\n    case types.CHANGE_VALUE_FIELD:\n      return { ...state,\n        [action.payload.field]: action.payload.value\n      };\n\n    case types.CHANGE_SHIP_TYPE:\n      {\n        return { ...state,\n          shipType: action.payload,\n          ship: action.payload === EShipTypes.SelfTransport ? undefined : state.ship\n        };\n      }\n\n    case types.CHANGE_SHIP:\n      return { ...state,\n        ship: action.payload,\n        shipmentFee: get(action.payload, 'shipmentFee', 0)\n      };\n\n    case types.CHANGE_PAYMENT_TYPE:\n      return { ...state,\n        paymentType: action.payload\n      };\n\n    case types.CHANGE_DELIVERY:\n      return { ...state,\n        delivered: !state.delivered\n      };\n\n    case types.RESET_NEW_ORDER:\n      return { ...initialReducer,\n        ...pick(state, ['shipType', 'warehouseId', 'source'])\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer as default, initialReducer };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/state/reducer.ts"],"names":["get","pick","EDeliveryDiscountBy","EShipTypes","types","initialReducer","products","customer","undefined","infoDelivery","shipType","SendShipping","warehouseId","shipmentFee","shipmentFeeForCustomer","discountBy","Money","discount","noteForDelivery","customerNote","ship","source","paymentType","paymentMethod","isEdit","delivered","reducer","state","action","type","INIT_STATE","payload","ADD_PRODUCTS","ADD_PRODUCT","product_exit","find","item","_id","newProducts","map","product","count","REMOVE_PRODUCT","filter","length","UPDATE_COUNT_PRODUCT","ADD_CUSTOMER","UPDATE_INFO_DELIVERY","REMOVE_CUSTOMER","CHANGE_WAREHOUSE","CHANGE_VALUE_FIELD","field","value","CHANGE_SHIP_TYPE","SelfTransport","CHANGE_SHIP","CHANGE_PAYMENT_TYPE","CHANGE_DELIVERY","RESET_NEW_ORDER","default"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,QAA1B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,UAAT,QAA2D,aAA3D;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,cAAsB,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,EADiB;AAE3BC,EAAAA,QAAQ,EAAEC,SAFiB;AAG3BC,EAAAA,YAAY,EAAED,SAHa;AAI3BE,EAAAA,QAAQ,EAAEP,UAAU,CAACQ,YAJM;AAK3BC,EAAAA,WAAW,EAAEJ,SALc;AAM3BK,EAAAA,WAAW,EAAEL,SANc;AAO3BM,EAAAA,sBAAsB,EAAEN,SAPG;AAQ3BO,EAAAA,UAAU,EAAEb,mBAAmB,CAACc,KARL;AAS3BC,EAAAA,QAAQ,EAAET,SATiB;AAU3BU,EAAAA,eAAe,EAAEV,SAVU;AAW3BW,EAAAA,YAAY,EAAEX,SAXa;AAY3BY,EAAAA,IAAI,EAAEZ,SAZqB;AAa3Ba,EAAAA,MAAM,EAAEb,SAbmB;AAc3Bc,EAAAA,WAAW,EAAEd,SAdc;AAe3Be,EAAAA,aAAa,EAAEf,SAfY;AAgB3BgB,EAAAA,MAAM,EAAE,KAhBmB;AAiB3BC,EAAAA,SAAS,EAAE;AAjBgB,CAA/B;;AAoBA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAAoC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKzB,KAAK,CAAC0B,UAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEH,WAAGC,MAAM,CAACG;AAFP,OAAP;;AAKJ,SAAK3B,KAAK,CAAC4B,YAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHrB,QAAAA,QAAQ,EAAEsB,MAAM,CAACG;AAFd,OAAP;;AAKJ,SAAK3B,KAAK,CAAC6B,WAAX;AAAwB;AACpB,cAAMC,YAAY,GAAGP,KAAK,CAACrB,QAAN,CAAe6B,IAAf,CAChBC,IAAD,IAAyBA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeM,GADpC,CAArB;AAIA,cAAMC,WAAW,GAAGJ,YAAY,GAC1BP,KAAK,CAACrB,QAAN,CAAeiC,GAAf,CAAoBC,OAAD,IAA4B;AAC3C,cAAIA,OAAO,CAACH,GAAR,KAAgBT,MAAM,CAACG,OAAP,CAAeM,GAAnC,EACI,OAAO,EACH,GAAGG,OADA;AAEHC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAFpB,WAAP;AAIJ,iBAAOD,OAAP;AACH,SAPD,CAD0B,GAS1B,CAAC,GAAGb,KAAK,CAACrB,QAAV,EAAoBsB,MAAM,CAACG,OAA3B,CATN;AAWA,eAAO,EACH,GAAGJ,KADA;AAEHrB,UAAAA,QAAQ,EAAEgC,WAFP;AAGHd,UAAAA,MAAM,EAAE;AAHL,SAAP;AAKH;;AAED,SAAKpB,KAAK,CAACsC,cAAX;AAA2B;AACvB,cAAMJ,WAAW,GAAGX,KAAK,CAACrB,QAAN,CAAeqC,MAAf,CACfH,OAAD,IAA4BA,OAAO,CAACH,GAAR,KAAgBT,MAAM,CAACG,OADnC,CAApB;;AAIA,YAAIO,WAAW,CAACM,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,iBAAO,EACH,GAAGjB,KADA;AAEHrB,YAAAA,QAAQ,EAAE,EAFP;AAGHc,YAAAA,IAAI,EAAEZ,SAHH;AAIHK,YAAAA,WAAW,EAAE;AAJV,WAAP;AAMH;;AAED,eAAO,EACH,GAAGc,KADA;AAEHrB,UAAAA,QAAQ,EAAEgC;AAFP,SAAP;AAIH;;AAED,SAAKlC,KAAK,CAACyC,oBAAX;AAAiC;AAC7B,cAAMP,WAAW,GAAGX,KAAK,CAACrB,QAAN,CAAeiC,GAAf,CAAoBC,OAAD,IAA4B;AAC/D,cAAIA,OAAO,CAACH,GAAR,KAAgBT,MAAM,CAACG,OAAP,CAAeM,GAAnC,EAAwC,OAAOT,MAAM,CAACG,OAAd;AAExC,iBAAOS,OAAP;AACH,SAJmB,CAApB;AAMA,eAAO,EACH,GAAGb,KADA;AAEHrB,UAAAA,QAAQ,EAAEgC;AAFP,SAAP;AAIH;;AAED,SAAKlC,KAAK,CAAC0C,YAAX;AACI,aAAO,EACH,GAAGnB,KADA;AAEHpB,QAAAA,QAAQ,EAAEqB,MAAM,CAACG,OAFd;AAGHtB,QAAAA,YAAY,EAAER,IAAI,CAAC2B,MAAM,CAACG,OAAR,EAAiB,CAC/B,MAD+B,EAE/B,SAF+B,EAG/B,SAH+B,EAI/B,MAJ+B,EAK/B,UAL+B,EAM/B,UAN+B,EAO/B,cAP+B,EAQ/B,UAR+B,EAS/B,cAT+B,CAAjB;AAHf,OAAP;;AAgBJ,SAAK3B,KAAK,CAAC2C,oBAAX;AACI,aAAO,EACH,GAAGpB,KADA;AAEHlB,QAAAA,YAAY,EAAEmB,MAAM,CAACG;AAFlB,OAAP;;AAKJ,SAAK3B,KAAK,CAAC4C,eAAX;AACI,aAAO,EACH,GAAGrB,KADA;AAEHpB,QAAAA,QAAQ,EAAEC,SAFP;AAGHC,QAAAA,YAAY,EAAED,SAHX;AAIHY,QAAAA,IAAI,EAAEZ,SAJH;AAKHK,QAAAA,WAAW,EAAE;AALV,OAAP;;AAQJ,SAAKT,KAAK,CAAC6C,gBAAX;AACI,aAAO,EACH,GAAGtB,KADA;AAEHf,QAAAA,WAAW,EAAEgB,MAAM,CAACG,OAFjB;AAGHzB,QAAAA,QAAQ,EAAE;AAHP,OAAP;;AAMJ,SAAKF,KAAK,CAAC8C,kBAAX;AACI,aAAO,EACH,GAAGvB,KADA;AAEH,SAACC,MAAM,CAACG,OAAP,CAAeoB,KAAhB,GAAwBvB,MAAM,CAACG,OAAP,CAAeqB;AAFpC,OAAP;;AAKJ,SAAKhD,KAAK,CAACiD,gBAAX;AAA6B;AACzB,eAAO,EACH,GAAG1B,KADA;AAEHjB,UAAAA,QAAQ,EAAEkB,MAAM,CAACG,OAFd;AAGHX,UAAAA,IAAI,EAAEQ,MAAM,CAACG,OAAP,KAAmB5B,UAAU,CAACmD,aAA9B,GAA8C9C,SAA9C,GAA0DmB,KAAK,CAACP;AAHnE,SAAP;AAKH;;AAED,SAAKhB,KAAK,CAACmD,WAAX;AACI,aAAO,EACH,GAAG5B,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACG,OAFV;AAGHlB,QAAAA,WAAW,EAAEb,GAAG,CAAC4B,MAAM,CAACG,OAAR,EAAiB,aAAjB,EAAgC,CAAhC;AAHb,OAAP;;AAMJ,SAAK3B,KAAK,CAACoD,mBAAX;AACI,aAAO,EACH,GAAG7B,KADA;AAEHL,QAAAA,WAAW,EAAEM,MAAM,CAACG;AAFjB,OAAP;;AAKJ,SAAK3B,KAAK,CAACqD,eAAX;AACI,aAAO,EACH,GAAG9B,KADA;AAEHF,QAAAA,SAAS,EAAE,CAACE,KAAK,CAACF;AAFf,OAAP;;AAKJ,SAAKrB,KAAK,CAACsD,eAAX;AACI,aAAO,EACH,GAAGrD,cADA;AAEH,WAAGJ,IAAI,CAAC0B,KAAD,EAAQ,CAAC,UAAD,EAAa,aAAb,EAA4B,QAA5B,CAAR;AAFJ,OAAP;;AAKJ;AACI,aAAOA,KAAP;AApJR;AAsJH,CAvJD;;AAyJA,SAASD,OAAO,IAAIiC,OAApB,EAA6BtD,cAA7B","sourcesContent":["import { get, pick } from 'lodash';\nimport { EDeliveryDiscountBy } from '../../../../models/order';\nimport { EShipTypes, IAction, IProductState, IState } from './interface';\nimport types from './types';\n\nconst initialReducer: IState = {\n    products: [],\n    customer: undefined,\n    infoDelivery: undefined,\n    shipType: EShipTypes.SendShipping,\n    warehouseId: undefined,\n    shipmentFee: undefined,\n    shipmentFeeForCustomer: undefined,\n    discountBy: EDeliveryDiscountBy.Money,\n    discount: undefined,\n    noteForDelivery: undefined,\n    customerNote: undefined,\n    ship: undefined,\n    source: undefined,\n    paymentType: undefined,\n    paymentMethod: undefined,\n    isEdit: false,\n    delivered: true,\n};\n\nconst reducer = (state: IState, action: IAction) => {\n    switch (action.type) {\n        case types.INIT_STATE:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        case types.ADD_PRODUCTS:\n            return {\n                ...state,\n                products: action.payload,\n            };\n\n        case types.ADD_PRODUCT: {\n            const product_exit = state.products.find(\n                (item: IProductState) => item._id === action.payload._id\n            );\n\n            const newProducts = product_exit\n                ? state.products.map((product: IProductState) => {\n                      if (product._id === action.payload._id)\n                          return {\n                              ...product,\n                              count: product.count + 1,\n                          };\n                      return product;\n                  })\n                : [...state.products, action.payload];\n\n            return {\n                ...state,\n                products: newProducts,\n                isEdit: true,\n            };\n        }\n\n        case types.REMOVE_PRODUCT: {\n            const newProducts = state.products.filter(\n                (product: IProductState) => product._id !== action.payload\n            );\n\n            if (newProducts.length === 0) {\n                return {\n                    ...state,\n                    products: [],\n                    ship: undefined,\n                    shipmentFee: 0,\n                };\n            }\n\n            return {\n                ...state,\n                products: newProducts,\n            };\n        }\n\n        case types.UPDATE_COUNT_PRODUCT: {\n            const newProducts = state.products.map((product: IProductState) => {\n                if (product._id === action.payload._id) return action.payload;\n\n                return product;\n            });\n\n            return {\n                ...state,\n                products: newProducts,\n            };\n        }\n\n        case types.ADD_CUSTOMER:\n            return {\n                ...state,\n                customer: action.payload,\n                infoDelivery: pick(action.payload, [\n                    'name',\n                    'phoneNo',\n                    'address',\n                    'ward',\n                    'wardName',\n                    'district',\n                    'districtName',\n                    'province',\n                    'provinceName',\n                ]),\n            };\n\n        case types.UPDATE_INFO_DELIVERY:\n            return {\n                ...state,\n                infoDelivery: action.payload,\n            };\n\n        case types.REMOVE_CUSTOMER:\n            return {\n                ...state,\n                customer: undefined,\n                infoDelivery: undefined,\n                ship: undefined,\n                shipmentFee: 0,\n            };\n\n        case types.CHANGE_WAREHOUSE:\n            return {\n                ...state,\n                warehouseId: action.payload,\n                products: [],\n            };\n\n        case types.CHANGE_VALUE_FIELD:\n            return {\n                ...state,\n                [action.payload.field]: action.payload.value,\n            };\n\n        case types.CHANGE_SHIP_TYPE: {\n            return {\n                ...state,\n                shipType: action.payload,\n                ship: action.payload === EShipTypes.SelfTransport ? undefined : state.ship,\n            };\n        }\n\n        case types.CHANGE_SHIP:\n            return {\n                ...state,\n                ship: action.payload,\n                shipmentFee: get(action.payload, 'shipmentFee', 0),\n            };\n\n        case types.CHANGE_PAYMENT_TYPE:\n            return {\n                ...state,\n                paymentType: action.payload,\n            };\n\n        case types.CHANGE_DELIVERY:\n            return {\n                ...state,\n                delivered: !state.delivered,\n            };\n\n        case types.RESET_NEW_ORDER:\n            return {\n                ...initialReducer,\n                ...pick(state, ['shipType', 'warehouseId', 'source']),\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport { reducer as default, initialReducer };\n"]},"metadata":{},"sourceType":"module"}