{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { find, isEqual } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialVariant = {\n  attributes: [],\n  code: undefined,\n  height: undefined,\n  images: [],\n  isVariant: true,\n  length: undefined,\n  name: undefined,\n  originalPrice: undefined,\n  price: undefined,\n  weight: undefined,\n  wholesalePrice: undefined,\n  width: undefined,\n  sku: undefined\n};\nconst VariantContext = /*#__PURE__*/createContext({\n  image: undefined,\n  setImage: image => image,\n  variant: initialVariant,\n  setVariant: variant => variant,\n  attributesToAddNew: [],\n  setAttributeToAddNew: attributesToAddNew => attributesToAddNew\n});\nexport const VariantContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [variant, setVariant] = useState(initialVariant);\n  const [attributesToAddNew, setAttributeToAddNew] = useState([]);\n  const [image, setImage] = useState();\n  const value = {\n    variant,\n    attributesToAddNew,\n    setVariant,\n    setAttributeToAddNew,\n    image,\n    setImage\n  };\n  return /*#__PURE__*/_jsxDEV(VariantContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n\n_s(VariantContextProvider, \"syv6t6Iin6LmagGO7sFn5xjP9xs=\");\n\n_c = VariantContextProvider;\nexport const useVariant = () => {\n  _s2();\n\n  const {\n    variant,\n    attributesToAddNew,\n    setVariant,\n    setAttributeToAddNew,\n    setImage,\n    image\n  } = useContext(VariantContext);\n  const attributes = useSelector(state => state.store.attributes.data);\n\n  const addNewVariant = () => {\n    setVariant({ ...initialVariant,\n      attributes: attributesToAddNew\n    });\n  };\n\n  const updateNewVariantAttribute = productAttributes => {\n    if (variant.attributes.length) return;\n    if (!productAttributes.length) return;\n    let newVariantAttibutes = productAttributes.map(attr => {\n      let attrInStore = find(attributes, ['_id', attr._id]);\n      if (attrInStore) return { ...attr,\n        name: attrInStore.name,\n        tags: []\n      };\n      return { ...attr,\n        name: '',\n        tags: []\n      };\n    });\n\n    if (!isEqual(variant.attributes, newVariantAttibutes)) {\n      setVariant({ ...variant,\n        attributes: newVariantAttibutes\n      });\n    }\n  };\n\n  const prepareAttributesToAddNew = productAttributes => {\n    setAttributeToAddNew(productAttributes.map(i => ({ ...i,\n      tags: []\n    })));\n  };\n\n  const updateAttributeTag = updatedAttribute => {\n    let newAttributes = variant.attributes.map(attribute => {\n      if (updatedAttribute._id === attribute._id) return updatedAttribute;\n      return attribute;\n    });\n    setVariant({ ...variant,\n      attributes: newAttributes\n    });\n  };\n\n  return {\n    variant,\n    setImage,\n    image,\n    attributesToAddNew,\n    setVariant,\n    addNewVariant,\n    updateNewVariantAttribute,\n    prepareAttributesToAddNew,\n    updateAttributeTag\n  };\n};\n\n_s2(useVariant, \"SuoeSkRCx9ruYPcYKDQk7u1LUZA=\", false, function () {\n  return [useSelector];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"VariantContextProvider\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/context.tsx"],"names":["React","createContext","useState","useContext","useSelector","find","isEqual","initialVariant","attributes","code","undefined","height","images","isVariant","length","name","originalPrice","price","weight","wholesalePrice","width","sku","VariantContext","image","setImage","variant","setVariant","attributesToAddNew","setAttributeToAddNew","VariantContextProvider","children","value","useVariant","state","store","data","addNewVariant","updateNewVariantAttribute","productAttributes","newVariantAttibutes","map","attr","attrInStore","_id","tags","prepareAttributesToAddNew","i","updateAttributeTag","updatedAttribute","newAttributes","attribute"],"mappings":"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","sourcesContent":["import React, { createContext, FC, useState, useContext } from 'react';\nimport { IState } from '../../../store/rootReducer';\nimport { useSelector } from 'react-redux';\nimport { find, isEqual } from 'lodash';\nimport { IAttribute } from '../../../models';\n\nconst initialVariant: any = {\n    attributes: [],\n    code: undefined,\n    height: undefined,\n    images: [],\n    isVariant: true,\n    length: undefined,\n    name: undefined,\n    originalPrice: undefined,\n    price: undefined,\n    weight: undefined,\n    wholesalePrice: undefined,\n    width: undefined,\n    sku: undefined,\n};\n\nconst VariantContext = createContext({\n    image: undefined,\n    setImage: (image: any) => image,\n    variant: initialVariant,\n    setVariant: (variant: any) => variant,\n    attributesToAddNew: [],\n    setAttributeToAddNew: (attributesToAddNew: any) => attributesToAddNew,\n});\n\nexport const VariantContextProvider: FC = ({ children }) => {\n    const [variant, setVariant] = useState<any>(initialVariant);\n    const [attributesToAddNew, setAttributeToAddNew] = useState<any>([]);\n    const [image, setImage] = useState<any>();\n\n    const value = {\n        variant,\n        attributesToAddNew,\n        setVariant,\n        setAttributeToAddNew,\n        image,\n        setImage,\n    };\n\n    return <VariantContext.Provider value={value}>{children}</VariantContext.Provider>;\n};\n\nexport const useVariant = () => {\n    const {\n        variant,\n        attributesToAddNew,\n        setVariant,\n        setAttributeToAddNew,\n        setImage,\n        image,\n    } = useContext(VariantContext);\n    const attributes = useSelector((state: IState) => state.store.attributes.data);\n\n    const addNewVariant = () => {\n        setVariant({\n            ...initialVariant,\n            attributes: attributesToAddNew,\n        });\n    };\n\n    const updateNewVariantAttribute = (productAttributes: any) => {\n        if (variant.attributes.length) return;\n        if (!productAttributes.length) return;\n\n        let newVariantAttibutes = productAttributes.map((attr: any) => {\n            let attrInStore: any = find(attributes, ['_id', attr._id]);\n            if (attrInStore) return { ...attr, name: attrInStore.name, tags: [] };\n\n            return { ...attr, name: '', tags: [] };\n        });\n\n        if (!isEqual(variant.attributes, newVariantAttibutes)) {\n            setVariant({ ...variant, attributes: newVariantAttibutes });\n        }\n    };\n\n    const prepareAttributesToAddNew = (productAttributes: any) => {\n        setAttributeToAddNew(productAttributes.map((i: any) => ({ ...i, tags: [] })));\n    };\n\n    const updateAttributeTag = (updatedAttribute: IAttribute) => {\n        let newAttributes = variant.attributes.map((attribute: IAttribute) => {\n            if (updatedAttribute._id === attribute._id) return updatedAttribute;\n\n            return attribute;\n        });\n\n        setVariant({ ...variant, attributes: newAttributes });\n    };\n\n    return {\n        variant,\n        setImage,\n        image,\n        attributesToAddNew,\n        setVariant,\n        addNewVariant,\n        updateNewVariantAttribute,\n        prepareAttributesToAddNew,\n        updateAttributeTag,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}