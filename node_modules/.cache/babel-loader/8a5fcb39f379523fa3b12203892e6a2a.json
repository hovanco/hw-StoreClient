{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-list/filtered-tags.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { find } from 'lodash';\nimport { useInventoryTable } from './context';\nimport dataFilterInventory from './advance-filter/data';\nimport { Tag } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilteredTags = () => {\n  _s();\n\n  const {\n    filter,\n    advanceFilterChange\n  } = useInventoryTable();\n  const categories = useSelector(({\n    store\n  }) => store.categories);\n  const tags = useMemo(() => {\n    let {\n      status,\n      categoryId,\n      brandId\n    } = filter;\n\n    let getFilterItemByKey = (key, value) => {\n      let filterItem = find(dataFilterInventory, ['id', key]);\n      return { ...filterItem,\n        value\n      };\n    };\n\n    let getCategoryName = id => {\n      var _find;\n\n      return (_find = find(categories, ['_id', id])) === null || _find === void 0 ? void 0 : _find.name;\n    };\n\n    let result = [];\n    if (status !== undefined) result.push(getFilterItemByKey('status', status === '6' ? 'Ngừng giao dịch' : 'Đang giao dịch'));\n    if (categoryId !== undefined) result.push(getFilterItemByKey('categoryId', getCategoryName(categoryId)));\n    if (brandId !== undefined) result.push(getFilterItemByKey('brandId', brandId));\n    return result; // eslint-disable-next-line\n  }, [filter.status, filter.categoryId, filter.brandId]);\n\n  const removeTag = id => {\n    advanceFilterChange({ ...filter,\n      [id]: undefined\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tags.map(item => /*#__PURE__*/_jsxDEV(Tag, {\n      closable: true,\n      onClose: () => removeTag(item.id),\n      children: [item.name, \": \", item.value]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilteredTags, \"6tAV0Nu7/9zCDLJ44YSSMrL1B+8=\", false, function () {\n  return [useInventoryTable, useSelector];\n});\n\n_c = FilteredTags;\nexport default _c2 = /*#__PURE__*/memo(FilteredTags);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilteredTags\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-list/filtered-tags.tsx"],"names":["React","useMemo","memo","useSelector","find","useInventoryTable","dataFilterInventory","Tag","FilteredTags","filter","advanceFilterChange","categories","store","tags","status","categoryId","brandId","getFilterItemByKey","key","value","filterItem","getCategoryName","id","name","result","undefined","push","removeTag","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,OAApB,EAA6BC,IAA7B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,IAAT,QAAqB,QAArB;AAGA,SAASC,iBAAT,QAAkC,WAAlC;AACA,OAAOC,mBAAP,MAAmD,uBAAnD;AAEA,SAASC,GAAT,QAAoB,MAApB;;;AAMA,MAAMC,YAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkCL,iBAAiB,EAAzD;AAEA,QAAMM,UAAU,GAAGR,WAAW,CAAC,CAAC;AAAES,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACD,UAA9C,CAA9B;AAEA,QAAME,IAAI,GAAGZ,OAAO,CAAC,MAAM;AACvB,QAAI;AAAEa,MAAAA,MAAF;AAAUC,MAAAA,UAAV;AAAsBC,MAAAA;AAAtB,QAAkCP,MAAtC;;AAEA,QAAIQ,kBAAkB,GAAG,CAACC,GAAD,EAAcC,KAAd,KAA6B;AAClD,UAAIC,UAAU,GAAGhB,IAAI,CAACE,mBAAD,EAAsB,CAAC,IAAD,EAAOY,GAAP,CAAtB,CAArB;AAEA,aAAO,EAAE,GAAGE,UAAL;AAAiBD,QAAAA;AAAjB,OAAP;AACH,KAJD;;AAMA,QAAIE,eAAe,GAAIC,EAAD;AAAA;;AAAA,sBAAgBlB,IAAI,CAACO,UAAD,EAAa,CAAC,KAAD,EAAQW,EAAR,CAAb,CAApB,0CAAgB,MAA+BC,IAA/C;AAAA,KAAtB;;AAEA,QAAIC,MAAiB,GAAG,EAAxB;AACA,QAAIV,MAAM,KAAKW,SAAf,EACID,MAAM,CAACE,IAAP,CACIT,kBAAkB,CAAC,QAAD,EAAWH,MAAM,KAAK,GAAX,GAAiB,iBAAjB,GAAqC,gBAAhD,CADtB;AAGJ,QAAIC,UAAU,KAAKU,SAAnB,EACID,MAAM,CAACE,IAAP,CAAYT,kBAAkB,CAAC,YAAD,EAAeI,eAAe,CAACN,UAAD,CAA9B,CAA9B;AACJ,QAAIC,OAAO,KAAKS,SAAhB,EAA2BD,MAAM,CAACE,IAAP,CAAYT,kBAAkB,CAAC,SAAD,EAAYD,OAAZ,CAA9B;AAE3B,WAAOQ,MAAP,CApBuB,CAqBvB;AACH,GAtBmB,EAsBjB,CAACf,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACM,UAAvB,EAAmCN,MAAM,CAACO,OAA1C,CAtBiB,CAApB;;AAwBA,QAAMW,SAAS,GAAIL,EAAD,IAAgB;AAC9BZ,IAAAA,mBAAmB,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACa,EAAD,GAAMG;AAAnB,KAAD,CAAnB;AACH,GAFD;;AAIA,sBACI;AAAA,cACKZ,IAAI,CAACe,GAAL,CAAUC,IAAD,iBACN,QAAC,GAAD;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,OAAO,EAAE,MAAMF,SAAS,CAACE,IAAI,CAACP,EAAN,CAApD;AAAA,iBACKO,IAAI,CAACN,IADV,QACkBM,IAAI,CAACV,KADvB;AAAA,OAAUU,IAAI,CAACP,EAAf;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA1CD;;GAAMd,Y;UACsCH,iB,EAErBF,W;;;KAHjBK,Y;AA4CN,kCAAeN,IAAI,CAACM,YAAD,CAAnB","sourcesContent":["import React, { FC, useMemo, memo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { find } from 'lodash';\nimport { IStoreState } from '../../../reducers/storeState/reducer';\n\nimport { useInventoryTable } from './context';\nimport dataFilterInventory, { IFilterOption } from './advance-filter/data';\n\nimport { Tag } from 'antd';\n\ninterface IFilter extends IFilterOption {\n    value: any;\n}\n\nconst FilteredTags: FC = () => {\n    const { filter, advanceFilterChange } = useInventoryTable();\n\n    const categories = useSelector(({ store }: { store: IStoreState }) => store.categories);\n\n    const tags = useMemo(() => {\n        let { status, categoryId, brandId } = filter;\n\n        let getFilterItemByKey = (key: string, value: any) => {\n            let filterItem = find(dataFilterInventory, ['id', key]);\n\n            return { ...filterItem, value } as IFilter;\n        };\n\n        let getCategoryName = (id: string) => find(categories, ['_id', id])?.name;\n\n        let result: IFilter[] = [];\n        if (status !== undefined)\n            result.push(\n                getFilterItemByKey('status', status === '6' ? 'Ngừng giao dịch' : 'Đang giao dịch')\n            );\n        if (categoryId !== undefined)\n            result.push(getFilterItemByKey('categoryId', getCategoryName(categoryId)));\n        if (brandId !== undefined) result.push(getFilterItemByKey('brandId', brandId));\n\n        return result;\n        // eslint-disable-next-line\n    }, [filter.status, filter.categoryId, filter.brandId]);\n\n    const removeTag = (id: string) => {\n        advanceFilterChange({ ...filter, [id]: undefined });\n    };\n\n    return (\n        <div>\n            {tags.map((item: any) => (\n                <Tag key={item.id} closable onClose={() => removeTag(item.id)}>\n                    {item.name}: {item.value}\n                </Tag>\n            ))}\n        </div>\n    );\n};\n\nexport default memo(FilteredTags);\n"]},"metadata":{},"sourceType":"module"}