{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/components/product-form-media/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Form, Input, Space, Typography, Upload } from 'antd';\nimport React, { useState } from 'react';\nimport iconPlusPrimary from \"../../../../assets/images/ic-plus-primary.svg\";\nimport imgPlaceholder from \"../../../../assets/images/img-placeholder.svg\";\nimport { InsaButton } from '../../../../components';\nimport theme from '../../../../theme';\nimport { Image } from './image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limitedCurriculumDisplay = 8;\n\nconst ProductFormMedia = ({\n  images = [],\n  setFilesImage,\n  updateImageProduct\n}) => {\n  _s();\n\n  const [filesList, setFilesList] = useState([...images]);\n\n  const customRequest = ({\n    file,\n    onSuccess\n  }) => {\n    setTimeout(() => {\n      onSuccess('ok');\n    }, 0);\n  };\n\n  const onChangeUploadFile = async ({\n    fileList\n  }) => {\n    if (fileList.length > 8) {\n      return;\n    }\n\n    let fileListUrl = [];\n    let fileUpload = [];\n    fileList.forEach(e => {\n      const thumbUrl = e.thumbUrl ? e.thumbUrl : e.originFileObj ? window.URL.createObjectURL(e.originFileObj) : undefined;\n      const item = { ...e,\n        thumbUrl,\n        status: 'done'\n      };\n      fileListUrl.push(item);\n      fileUpload.push(item);\n    });\n    setFilesImage(fileUpload);\n    setFilesList([...images, ...fileListUrl]);\n  };\n\n  const isActive = filesList.length < limitedCurriculumDisplay;\n  const isShowButtonUpload = isActive && filesList.length > 0;\n  const filesUpload = filesList.filter(file => typeof file !== 'string');\n  const imagesUrl = filesList.filter(file => typeof file === 'string');\n\n  const renderUpload = () => {\n    if (filesList.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n        listType: \"picture-card\",\n        showUploadList: false,\n        style: {\n          minHeight: 188\n        },\n        accept: \".png, .jpeg, .jpg\",\n        multiple: true,\n        customRequest: () => customRequest,\n        disabled: !isActive,\n        onChange: ({\n          fileList\n        }) => onChangeUploadFile({\n          fileList\n        }),\n        fileList: [],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingTop: 44\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgPlaceholder,\n            alt: \"img-insa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography.Link, {\n            style: {\n              display: 'block',\n              textAlign: 'center'\n            },\n            children: \"Click or Drag to Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fafafa',\n        border: '1px dashed #d9d9d9',\n        borderRadius: 2,\n        padding: '16px 0',\n        minHeight: 188\n      },\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 15,\n        style: {\n          width: '100%',\n          flexWrap: 'wrap',\n          paddingLeft: theme.spacing.xs,\n          paddingRight: theme.spacing.xs\n        },\n        children: [imagesUrl.map((image, index) => {\n          const selectImage = () => {\n            if (updateImageProduct) {\n              let images = filesList.filter(i => typeof i === 'string');\n              images.splice(0, 0, images.splice(index, 1)[0]);\n              updateImageProduct(images);\n              setFilesList([...images, ...filesList.filter(i => typeof i !== 'string')]);\n            }\n          };\n\n          const removeImage = () => {\n            const newFileList = filesList.filter((_, i) => i !== index);\n            setFilesList(newFileList);\n\n            if (updateImageProduct) {\n              const images = newFileList.filter(i => typeof i === 'string');\n              updateImageProduct(images, 'remove');\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(Image, {\n            file: image,\n            selectImage: selectImage,\n            removeImage: removeImage\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this);\n        }), filesUpload.map((file, index) => {\n          const removeImage = () => {\n            const newFileList = filesList.filter((_, i) => i !== index);\n            setFilesList(newFileList);\n          };\n\n          return /*#__PURE__*/_jsxDEV(Image, {\n            file: file,\n            removeImage: removeImage\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 32\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Upload, {\n          customRequest: () => customRequest,\n          showUploadList: false,\n          accept: \".png, .jpeg, .jpg\",\n          multiple: true,\n          onChange: ({\n            fileList\n          }) => onChangeUploadFile({\n            fileList\n          }),\n          fileList: filesUpload,\n          children: isShowButtonUpload ? /*#__PURE__*/_jsxDEV(InsaButton, {\n            icon: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconPlusPrimary,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 39\n            }, this),\n            style: {\n              width: 70,\n              height: 70,\n              marginBottom: 16\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u1EA2nh s\\u1EA3n ph\\u1EA9m\",\n    size: \"small\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: /*#__PURE__*/_jsxDEV(Typography.Text, {\n        children: [\"Th\\u01B0 vi\\u1EC7n \\u1EA3nh\", /*#__PURE__*/_jsxDEV(Typography.Link, {\n          children: ` ( PNG, JPG, JPEG, 500px x 500px, tối đa ${limitedCurriculumDisplay} ảnh)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this),\n      children: renderUpload()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Video URL\",\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductFormMedia, \"AjzG0HfNR0Inrwq0xJhqvfHGAQ4=\");\n\n_c = ProductFormMedia;\nexport { ProductFormMedia };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductFormMedia\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/components/product-form-media/index.tsx"],"names":["Card","Form","Input","Space","Typography","Upload","React","useState","InsaButton","theme","Image","limitedCurriculumDisplay","ProductFormMedia","images","setFilesImage","updateImageProduct","filesList","setFilesList","customRequest","file","onSuccess","setTimeout","onChangeUploadFile","fileList","length","fileListUrl","fileUpload","forEach","e","thumbUrl","originFileObj","window","URL","createObjectURL","undefined","item","status","push","isActive","isShowButtonUpload","filesUpload","filter","imagesUrl","renderUpload","minHeight","paddingTop","imgPlaceholder","display","textAlign","background","border","borderRadius","padding","width","flexWrap","paddingLeft","spacing","xs","paddingRight","map","image","index","selectImage","i","splice","removeImage","newFileList","_","iconPlusPrimary","height","marginBottom"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAAoCC,KAApC,EAA2CC,UAA3C,EAAuDC,MAAvD,QAAqE,MAArE;AAEA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;;;AAGA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,MAAMC,wBAAgC,GAAG,CAAzC;;AAQA,MAAMC,gBAA2B,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,EAAX;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,CAAD,KAAwD;AAAA;;AACxF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAQ,CAAC,GAAGM,MAAJ,CAAR,CAA1C;;AAEA,QAAMK,aAAa,GAAG,CAAC;AACnBC,IAAAA,IADmB;AAEnBC,IAAAA;AAFmB,GAAD,KAMhB;AACFC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFS,EAEP,CAFO,CAAV;AAGH,GAVD;;AAYA,QAAME,kBAAkB,GAAG,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAAyD;AAChF,QAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACrB;AACH;;AAED,QAAIC,WAAkB,GAAG,EAAzB;AACA,QAAIC,UAAiB,GAAG,EAAxB;AAEAH,IAAAA,QAAQ,CAACI,OAAT,CAAkBC,CAAD,IAAO;AACpB,YAAMC,QAAQ,GAAGD,CAAC,CAACC,QAAF,GACXD,CAAC,CAACC,QADS,GAEXD,CAAC,CAACE,aAAF,GACAC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,CAAC,CAACE,aAA7B,CADA,GAEAI,SAJN;AAMA,YAAMC,IAAI,GAAG,EACT,GAAGP,CADM;AAETC,QAAAA,QAFS;AAGTO,QAAAA,MAAM,EAAE;AAHC,OAAb;AAMAX,MAAAA,WAAW,CAACY,IAAZ,CAAiBF,IAAjB;AACAT,MAAAA,UAAU,CAACW,IAAX,CAAgBF,IAAhB;AACH,KAfD;AAiBArB,IAAAA,aAAa,CAACY,UAAD,CAAb;AACAT,IAAAA,YAAY,CAAC,CAAC,GAAGJ,MAAJ,EAAY,GAAGY,WAAf,CAAD,CAAZ;AACH,GA3BD;;AA6BA,QAAMa,QAAQ,GAAGtB,SAAS,CAACQ,MAAV,GAAmBb,wBAApC;AACA,QAAM4B,kBAAkB,GAAGD,QAAQ,IAAItB,SAAS,CAACQ,MAAV,GAAmB,CAA1D;AACA,QAAMgB,WAAW,GAAGxB,SAAS,CAACyB,MAAV,CAAkBtB,IAAD,IAAU,OAAOA,IAAP,KAAgB,QAA3C,CAApB;AACA,QAAMuB,SAAS,GAAG1B,SAAS,CAACyB,MAAV,CAAkBtB,IAAD,IAAU,OAAOA,IAAP,KAAgB,QAA3C,CAAlB;;AAEA,QAAMwB,YAAY,GAAG,MAAM;AACvB,QAAI3B,SAAS,CAACQ,MAAV,KAAqB,CAAzB,EAA4B;AACxB,0BACI,QAAC,MAAD,CAAQ,OAAR;AACI,QAAA,QAAQ,EAAC,cADb;AAEI,QAAA,cAAc,EAAE,KAFpB;AAGI,QAAA,KAAK,EAAE;AAAEoB,UAAAA,SAAS,EAAE;AAAb,SAHX;AAII,QAAA,MAAM,EAAC,mBAJX;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,aAAa,EAAE,MAAM1B,aANzB;AAOI,QAAA,QAAQ,EAAE,CAACoB,QAPf;AAQI,QAAA,QAAQ,EAAE,CAAC;AAAEf,UAAAA;AAAF,SAAD,KAAkBD,kBAAkB,CAAC;AAAEC,UAAAA;AAAF,SAAD,CARlD;AASI,QAAA,QAAQ,EAAE,EATd;AAAA,+BAWI;AACI,UAAA,KAAK,EAAE;AACHsB,YAAAA,UAAU,EAAE;AADT,WADX;AAAA,kCAKI;AAAK,YAAA,GAAG,EAAEC,cAAV;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,KAAK,EAAE;AAAEC,cAAAA,OAAO,EAAE,OAAX;AAAoBC,cAAAA,SAAS,EAAE;AAA/B,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAwBH;;AAED,wBACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,UAAU,EAAE,SADT;AAEHC,QAAAA,MAAM,EAAE,oBAFL;AAGHC,QAAAA,YAAY,EAAE,CAHX;AAIHC,QAAAA,OAAO,EAAE,QAJN;AAKHR,QAAAA,SAAS,EAAE;AALR,OADX;AAAA,6BASI,QAAC,KAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,KAAK,EAAE;AACHS,UAAAA,KAAK,EAAE,MADJ;AAEHC,UAAAA,QAAQ,EAAE,MAFP;AAGHC,UAAAA,WAAW,EAAE9C,KAAK,CAAC+C,OAAN,CAAcC,EAHxB;AAIHC,UAAAA,YAAY,EAAEjD,KAAK,CAAC+C,OAAN,CAAcC;AAJzB,SAFX;AAAA,mBASKf,SAAS,CAACiB,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7B,gBAAMC,WAAW,GAAG,MAAM;AACtB,gBAAI/C,kBAAJ,EAAwB;AACpB,kBAAIF,MAAM,GAAGG,SAAS,CAACyB,MAAV,CAAkBsB,CAAD,IAAO,OAAOA,CAAP,KAAa,QAArC,CAAb;AACAlD,cAAAA,MAAM,CAACmD,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoBnD,MAAM,CAACmD,MAAP,CAAcH,KAAd,EAAqB,CAArB,EAAwB,CAAxB,CAApB;AAEA9C,cAAAA,kBAAkB,CAACF,MAAD,CAAlB;AAEAI,cAAAA,YAAY,CAAC,CACT,GAAGJ,MADM,EAET,GAAGG,SAAS,CAACyB,MAAV,CAAkBsB,CAAD,IAAO,OAAOA,CAAP,KAAa,QAArC,CAFM,CAAD,CAAZ;AAIH;AACJ,WAZD;;AAcA,gBAAME,WAAW,GAAG,MAAM;AACtB,kBAAMC,WAAW,GAAGlD,SAAS,CAACyB,MAAV,CAAiB,CAAC0B,CAAD,EAAIJ,CAAJ,KAAkBA,CAAC,KAAKF,KAAzC,CAApB;AAEA5C,YAAAA,YAAY,CAACiD,WAAD,CAAZ;;AAEA,gBAAInD,kBAAJ,EAAwB;AACpB,oBAAMF,MAAM,GAAGqD,WAAW,CAACzB,MAAZ,CAAoBsB,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAvC,CAAf;AAEAhD,cAAAA,kBAAkB,CAACF,MAAD,EAAS,QAAT,CAAlB;AACH;AACJ,WAVD;;AAYA,8BACI,QAAC,KAAD;AACI,YAAA,IAAI,EAAE+C,KADV;AAEI,YAAA,WAAW,EAAEE,WAFjB;AAGI,YAAA,WAAW,EAAEG;AAHjB,aAISJ,KAJT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SAnCA,CATL,EA8CKrB,WAAW,CAACmB,GAAZ,CAAgB,CAACxC,IAAD,EAAO0C,KAAP,KAAiB;AAC9B,gBAAMI,WAAW,GAAG,MAAM;AACtB,kBAAMC,WAAW,GAAGlD,SAAS,CAACyB,MAAV,CAAiB,CAAC0B,CAAD,EAAIJ,CAAJ,KAAkBA,CAAC,KAAKF,KAAzC,CAApB;AACA5C,YAAAA,YAAY,CAACiD,WAAD,CAAZ;AACH,WAHD;;AAKA,8BAAO,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE/C,IAAb;AAAmB,YAAA,WAAW,EAAE8C;AAAhC,aAAkDJ,KAAlD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAPA,CA9CL,eAsDI,QAAC,MAAD;AACI,UAAA,aAAa,EAAE,MAAM3C,aADzB;AAEI,UAAA,cAAc,EAAE,KAFpB;AAGI,UAAA,MAAM,EAAC,mBAHX;AAII,UAAA,QAAQ,MAJZ;AAKI,UAAA,QAAQ,EAAE,CAAC;AAAEK,YAAAA;AAAF,WAAD,KAAkBD,kBAAkB,CAAC;AAAEC,YAAAA;AAAF,WAAD,CALlD;AAMI,UAAA,QAAQ,EAAEiB,WANd;AAAA,oBAQKD,kBAAkB,gBACf,QAAC,UAAD;AACI,YAAA,IAAI,eAAE;AAAK,cAAA,GAAG,EAAE6B,eAAV;AAA2B,cAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADV;AAEI,YAAA,KAAK,EAAE;AAAEf,cAAAA,KAAK,EAAE,EAAT;AAAagB,cAAAA,MAAM,EAAE,EAArB;AAAyBC,cAAAA,YAAY,EAAE;AAAvC;AAFX;AAAA;AAAA;AAAA;AAAA,kBADe,GAKf;AAbR;AAAA;AAAA;AAAA;AAAA,gBAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkFH,GA9GD;;AAgHA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,6BAAZ;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAA,4BACI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,eACD,QAAC,UAAD,CAAY,IAAZ;AAAA,+DAEI,QAAC,UAAD,CAAY,IAAZ;AAAA,oBACM,4CAA2C3D,wBAAyB;AAD1E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA,gBAUKgC,YAAY;AAVjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA,6BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvLD;;GAAM/B,gB;;KAAAA,gB;AAyLN,SAASA,gBAAT","sourcesContent":["import { Card, Form, Input, Select, Space, Typography, Upload } from 'antd';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { FC, useState } from 'react';\nimport iconPlusPrimary from '../../../../assets/images/ic-plus-primary.svg';\nimport imgPlaceholder from '../../../../assets/images/img-placeholder.svg';\nimport { InsaButton } from '../../../../components';\nimport theme from '../../../../theme';\nimport { Image } from './image';\n\nconst limitedCurriculumDisplay: number = 8;\n\ninterface Props {\n    images?: string[];\n    setFilesImage: (filesImage: any[]) => void;\n    updateImageProduct?: (images: string[], type?: 'remove' | 'add') => void;\n}\n\nconst ProductFormMedia: FC<Props> = ({ images = [], setFilesImage, updateImageProduct }) => {\n    const [filesList, setFilesList] = useState<any[]>([...images]);\n\n    const customRequest = ({\n        file,\n        onSuccess,\n    }: {\n        file: File;\n        onSuccess: (param: string) => void;\n    }) => {\n        setTimeout(() => {\n            onSuccess('ok');\n        }, 0);\n    };\n\n    const onChangeUploadFile = async ({ fileList }: { fileList: UploadFile<any>[] }) => {\n        if (fileList.length > 8) {\n            return;\n        }\n\n        let fileListUrl: any[] = [];\n        let fileUpload: any[] = [];\n\n        fileList.forEach((e) => {\n            const thumbUrl = e.thumbUrl\n                ? e.thumbUrl\n                : e.originFileObj\n                ? window.URL.createObjectURL(e.originFileObj)\n                : undefined;\n\n            const item = {\n                ...e,\n                thumbUrl,\n                status: 'done',\n            };\n\n            fileListUrl.push(item);\n            fileUpload.push(item);\n        });\n\n        setFilesImage(fileUpload);\n        setFilesList([...images, ...fileListUrl]);\n    };\n\n    const isActive = filesList.length < limitedCurriculumDisplay;\n    const isShowButtonUpload = isActive && filesList.length > 0;\n    const filesUpload = filesList.filter((file) => typeof file !== 'string');\n    const imagesUrl = filesList.filter((file) => typeof file === 'string');\n\n    const renderUpload = () => {\n        if (filesList.length === 0) {\n            return (\n                <Upload.Dragger\n                    listType=\"picture-card\"\n                    showUploadList={false}\n                    style={{ minHeight: 188 }}\n                    accept=\".png, .jpeg, .jpg\"\n                    multiple\n                    customRequest={() => customRequest}\n                    disabled={!isActive}\n                    onChange={({ fileList }) => onChangeUploadFile({ fileList })}\n                    fileList={[]}\n                >\n                    <div\n                        style={{\n                            paddingTop: 44,\n                        }}\n                    >\n                        <img src={imgPlaceholder} alt=\"img-insa\" />\n                        <Typography.Link style={{ display: 'block', textAlign: 'center' }}>\n                            Click or Drag to Upload\n                        </Typography.Link>\n                    </div>\n                </Upload.Dragger>\n            );\n        }\n\n        return (\n            <div\n                style={{\n                    background: '#fafafa',\n                    border: '1px dashed #d9d9d9',\n                    borderRadius: 2,\n                    padding: '16px 0',\n                    minHeight: 188,\n                }}\n            >\n                <Space\n                    size={15}\n                    style={{\n                        width: '100%',\n                        flexWrap: 'wrap',\n                        paddingLeft: theme.spacing.xs,\n                        paddingRight: theme.spacing.xs,\n                    }}\n                >\n                    {imagesUrl.map((image, index) => {\n                        const selectImage = () => {\n                            if (updateImageProduct) {\n                                let images = filesList.filter((i) => typeof i === 'string');\n                                images.splice(0, 0, images.splice(index, 1)[0]);\n\n                                updateImageProduct(images);\n\n                                setFilesList([\n                                    ...images,\n                                    ...filesList.filter((i) => typeof i !== 'string'),\n                                ]);\n                            }\n                        };\n\n                        const removeImage = () => {\n                            const newFileList = filesList.filter((_, i: number) => i !== index);\n\n                            setFilesList(newFileList);\n\n                            if (updateImageProduct) {\n                                const images = newFileList.filter((i) => typeof i === 'string');\n\n                                updateImageProduct(images, 'remove');\n                            }\n                        };\n\n                        return (\n                            <Image\n                                file={image}\n                                selectImage={selectImage}\n                                removeImage={removeImage}\n                                key={index}\n                            />\n                        );\n                    })}\n\n                    {filesUpload.map((file, index) => {\n                        const removeImage = () => {\n                            const newFileList = filesList.filter((_, i: number) => i !== index);\n                            setFilesList(newFileList);\n                        };\n\n                        return <Image file={file} removeImage={removeImage} key={index} />;\n                    })}\n                    <Upload\n                        customRequest={() => customRequest}\n                        showUploadList={false}\n                        accept=\".png, .jpeg, .jpg\"\n                        multiple\n                        onChange={({ fileList }) => onChangeUploadFile({ fileList })}\n                        fileList={filesUpload}\n                    >\n                        {isShowButtonUpload ? (\n                            <InsaButton\n                                icon={<img src={iconPlusPrimary} alt=\"\" />}\n                                style={{ width: 70, height: 70, marginBottom: 16 }}\n                            />\n                        ) : null}\n                    </Upload>\n                </Space>\n            </div>\n        );\n    };\n\n    return (\n        <Card title=\"Ảnh sản phẩm\" size=\"small\">\n            <Form.Item\n                label={\n                    <Typography.Text>\n                        Thư viện ảnh\n                        <Typography.Link>\n                            {` ( PNG, JPG, JPEG, 500px x 500px, tối đa ${limitedCurriculumDisplay} ảnh)`}\n                        </Typography.Link>\n                    </Typography.Text>\n                }\n            >\n                {renderUpload()}\n            </Form.Item>\n            <Form.Item label=\"Video URL\">\n                <Input />\n            </Form.Item>\n            {/* <Form.Item label=\"TAG\">\n                <Select placeholder=\"TAG\"></Select>\n            </Form.Item> */}\n        </Card>\n    );\n};\n\nexport { ProductFormMedia };\n"]},"metadata":{},"sourceType":"module"}