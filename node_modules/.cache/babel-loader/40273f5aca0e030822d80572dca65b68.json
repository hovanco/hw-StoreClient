{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/create/form/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Divider, Form, message, Row, Space } from 'antd';\nimport { pick, get, every, isNil } from 'lodash';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport customerApi from '../../../../api/customer-api';\nimport { InsaButton } from '../../../../components';\nimport { DefaultLayout } from '../../../../layout';\nimport { storeAction } from '../../../../reducers/storeState/action';\nimport AdditionalInfo from './additional-info';\nimport AddressInfo from './address-info';\nimport AdvanceSetting from './advance-setting';\nimport CustomerInfo from './customer-info';\nimport './index.less';\nimport OtherInfo from './other-info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddCustomerForm = ({\n  toggle,\n  form,\n  customer,\n  callbackAfterUpdate\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(!customer);\n  const dispatch = useDispatch();\n  const storeObj = useSelector(state => state.store.data);\n\n  const submitForm = async () => {\n    const formData = await form.validateFields();\n    const customerFormData = { ...pick(formData, ['name', 'phoneNo', 'province', 'district', 'ward', 'address', 'dateOfBirth', 'gender', 'email', 'address2', 'label', 'website', 'taxCode', 'description'])\n    };\n    if (customerFormData.dateOfBirth) customerFormData.dateOfBirth = moment(customerFormData.dateOfBirth).format('DD/MM/YYYY');\n\n    if (!(customer === null || customer === void 0 ? void 0 : customer._id)) {\n      await createCustomer(customerFormData);\n    } else {\n      await updateCustomer(customerFormData);\n    }\n\n    form.resetFields();\n  };\n\n  const createCustomer = async formData => {\n    try {\n      if (!storeObj._id) return;\n      setLoading(true);\n      await customerApi.createCustomer({\n        storeId: storeObj._id,\n        formData\n      });\n      message.success('Tạo khách hàng thành công');\n      toggle();\n      dispatch(storeAction.getCustomers({\n        storeId: storeObj._id,\n        page: 1,\n        limit: 20,\n        sort: 'createdAt',\n        direction: 'desc'\n      }));\n    } catch (error) {\n      if (get(error, 'response.status') === 409) {\n        message.error('Số điện thoại đã tồn tại');\n      } else {\n        message.error('Xảy ra lỗi, vui lòng thử lại');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateCustomer = async formData => {\n    try {\n      if (!storeObj._id) return;\n      setLoading(true);\n      const responseCustomer = await customerApi.updateCustomer({\n        storeId: storeObj._id,\n        customerId: customer === null || customer === void 0 ? void 0 : customer._id,\n        formData\n      });\n      message.success('Cập nhật khách hàng thành công');\n      toggle();\n      callbackAfterUpdate && callbackAfterUpdate(responseCustomer);\n    } catch (error) {\n      if (get(error, 'response.status') === 409) {\n        message.error('Số điện thoại đã tồn tại');\n      } else {\n        message.error('Xảy ra lỗi, vui lòng thử lại');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    form.resetFields();\n    toggle();\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const requiredFields = ['name', 'phoneNo'];\n    const fields = allFields.filter(field => requiredFields.includes(field.name[0]));\n    const result = every(fields, field => {\n      var _field$errors;\n\n      return ((_field$errors = field.errors) === null || _field$errors === void 0 ? void 0 : _field$errors.length) === 0 && !isNil(field.value);\n    });\n    setDisabled(!result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DefaultLayout, {\n      title: \"C\\u1EADp nh\\u1EADt kh\\xE1ch h\\xE0ng\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFinish: submitForm,\n        form: form,\n        layout: \"vertical\",\n        className: \"customer-info-form\",\n        initialValues: customer,\n        onFieldsChange: onFieldsChange,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 22,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: \"15\",\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"vertical\",\n              size: 22,\n              children: [/*#__PURE__*/_jsxDEV(CustomerInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AddressInfo, {\n                form: form\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AdditionalInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: \"9\",\n            children: /*#__PURE__*/_jsxDEV(Space, {\n              direction: \"vertical\",\n              size: 22,\n              children: [/*#__PURE__*/_jsxDEV(OtherInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AdvanceSetting, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          className: \"customer-info-form__footer\",\n          children: /*#__PURE__*/_jsxDEV(InsaButton, {\n            onClick: handleCancel,\n            style: {\n              width: 120\n            },\n            disabled: loading,\n            children: \"H\\u1EE7y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddCustomerForm, \"o88JXW+5eu6x5NP7X5VUs3PD2SA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddCustomerForm;\nexport default AddCustomerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCustomerForm\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/create/form/index.tsx"],"names":["Col","Divider","Form","message","Row","Space","pick","get","every","isNil","moment","React","useState","useDispatch","useSelector","customerApi","InsaButton","DefaultLayout","storeAction","AdditionalInfo","AddressInfo","AdvanceSetting","CustomerInfo","OtherInfo","AddCustomerForm","toggle","form","customer","callbackAfterUpdate","loading","setLoading","disabled","setDisabled","dispatch","storeObj","state","store","data","submitForm","formData","validateFields","customerFormData","dateOfBirth","format","_id","createCustomer","updateCustomer","resetFields","storeId","success","getCustomers","page","limit","sort","direction","error","responseCustomer","customerId","handleCancel","onFieldsChange","changedFields","allFields","requiredFields","fields","filter","field","includes","name","result","errors","length","value","width"],"mappings":"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","sourcesContent":["import { Col, Divider, Form, message, Row, Space } from 'antd';\nimport { FormInstance } from 'antd/lib/form/Form';\nimport { pick, get, every, isNil } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport customerApi from '../../../../api/customer-api';\nimport { InsaButton } from '../../../../components';\nimport { DefaultLayout } from '../../../../layout';\nimport { ICreateCustomerParams, ICustomer, ICustomerEditing } from '../../../../models';\nimport { storeAction } from '../../../../reducers/storeState/action';\nimport { IState } from '../../../../store/rootReducer';\nimport AdditionalInfo from './additional-info';\nimport AddressInfo from './address-info';\nimport AdvanceSetting from './advance-setting';\nimport CustomerInfo from './customer-info';\nimport './index.less';\nimport OtherInfo from './other-info';\n\ninterface FieldData {\n    name: string | number | (string | number)[];\n    value?: any;\n    touched?: boolean;\n    validating?: boolean;\n    errors?: string[];\n}\n\ninterface Props {\n    toggle: () => void;\n    form: FormInstance;\n    customer?: ICustomerEditing;\n    callbackAfterUpdate?: (responseCustomer: ICustomer) => void;\n}\n\nconst AddCustomerForm: FC<Props> = ({ toggle, form, customer, callbackAfterUpdate }) => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [disabled, setDisabled] = useState<boolean>(!customer);\n\n    const dispatch = useDispatch();\n    const storeObj = useSelector((state: IState) => state.store.data);\n\n    const submitForm = async () => {\n        const formData = await form.validateFields();\n\n        const customerFormData: ICreateCustomerParams = {\n            ...pick(formData, [\n                'name',\n                'phoneNo',\n                'province',\n                'district',\n                'ward',\n                'address',\n                'dateOfBirth',\n                'gender',\n                'email',\n                'address2',\n                'label',\n                'website',\n                'taxCode',\n                'description',\n            ]),\n        };\n\n        if (customerFormData.dateOfBirth)\n            customerFormData.dateOfBirth = moment(customerFormData.dateOfBirth).format(\n                'DD/MM/YYYY'\n            );\n\n        if (!customer?._id) {\n            await createCustomer(customerFormData);\n        } else {\n            await updateCustomer(customerFormData);\n        }\n\n        form.resetFields();\n    };\n\n    const createCustomer = async (formData: ICreateCustomerParams) => {\n        try {\n            if (!storeObj._id) return;\n\n            setLoading(true);\n\n            await customerApi.createCustomer({ storeId: storeObj._id as string, formData });\n\n            message.success('Tạo khách hàng thành công');\n\n            toggle();\n\n            dispatch(\n                storeAction.getCustomers({\n                    storeId: storeObj._id as string,\n                    page: 1,\n                    limit: 20,\n                    sort: 'createdAt',\n                    direction: 'desc',\n                })\n            );\n        } catch (error) {\n            if (get(error, 'response.status') === 409) {\n                message.error('Số điện thoại đã tồn tại');\n            } else {\n                message.error('Xảy ra lỗi, vui lòng thử lại');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const updateCustomer = async (formData: ICreateCustomerParams) => {\n        try {\n            if (!storeObj._id) return;\n\n            setLoading(true);\n\n            const responseCustomer = await customerApi.updateCustomer({\n                storeId: storeObj._id as string,\n                customerId: customer?._id as string,\n                formData,\n            });\n\n            message.success('Cập nhật khách hàng thành công');\n\n            toggle();\n\n            callbackAfterUpdate && callbackAfterUpdate(responseCustomer);\n        } catch (error) {\n            if (get(error, 'response.status') === 409) {\n                message.error('Số điện thoại đã tồn tại');\n            } else {\n                message.error('Xảy ra lỗi, vui lòng thử lại');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleCancel = () => {\n        form.resetFields();\n        toggle();\n    };\n\n    const onFieldsChange = (changedFields: FieldData[], allFields: FieldData[]) => {\n        const requiredFields = ['name', 'phoneNo'];\n\n        const fields = allFields.filter((field: FieldData) =>\n            requiredFields.includes((field.name as string[])[0]));\n\n        const result = every(fields, (field: FieldData) =>\n            field.errors?.length === 0 && !isNil(field.value));\n\n        setDisabled(!result);\n    }\n\n    return (\n        <>\n            <DefaultLayout title=\"Cập nhật khách hàng\">\n                <Form\n                    onFinish={submitForm}\n                    form={form}\n                    layout=\"vertical\"\n                    className=\"customer-info-form\"\n                    initialValues={customer}\n                    onFieldsChange={onFieldsChange}\n                >\n                    <Row gutter={22}>\n                        <Col span=\"15\">\n                            <Space direction=\"vertical\" size={22}>\n                                <CustomerInfo />\n                                <AddressInfo form={form} />\n                                <AdditionalInfo />\n                            </Space>\n                        </Col>\n                        <Col span=\"9\">\n                            <Space direction=\"vertical\" size={22}>\n                                <OtherInfo />\n                                <AdvanceSetting />\n                            </Space>\n                        </Col>\n                    </Row>\n\n                    <Divider />\n\n                    <Space className=\"customer-info-form__footer\">\n                        <InsaButton\n                            onClick={handleCancel}\n                            style={{ width: 120 }}\n                            disabled={loading}\n                        >\n                            Hủy\n                        </InsaButton>\n                        {/* <InsaButton\n                            htmlType=\"submit\"\n                            type=\"primary\"\n                            style={{ width: 120 }}\n                            loading={loading}\n                            disabled={disabled}\n                        >\n                            Lưu\n                        </InsaButton> */}\n                    </Space>\n                </Form>\n            </DefaultLayout>\n        </>\n    );\n};\nexport default AddCustomerForm;\n"]},"metadata":{},"sourceType":"module"}