{"ast":null,"code":"import { getStartTime, getEndTime } from '../../../../helper/get-time';\nimport { EFilter } from './interface';\nimport types from './types';\nconst initalState = {\n  loading: false,\n  filter: EFilter.Period,\n  startTime: getStartTime({\n    type: 'month',\n    date: Date.now()\n  }),\n  endTime: getEndTime({\n    type: 'month',\n    date: Date.now()\n  }),\n  data: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case types.LOADING:\n      return { ...state,\n        loading: true,\n        data: []\n      };\n\n    case types.SELECT_TYPE:\n      return { ...state,\n        filter: action.payload\n      };\n\n    case types.LOAD_DATA_REPORT_CUSTOMER:\n      return { ...state,\n        data: action.payload,\n        loading: false\n      };\n\n    case types.CHANGE_TIME:\n      return { ...state,\n        startTime: action.payload.startTime,\n        endTime: action.payload.endTime\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { initalState, reducer };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/report/report-customer/state/reducer.ts"],"names":["getStartTime","getEndTime","EFilter","types","initalState","loading","filter","Period","startTime","type","date","Date","now","endTime","data","reducer","state","action","LOADING","SELECT_TYPE","payload","LOAD_DATA_REPORT_CUSTOMER","CHANGE_TIME"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,6BAAzC;AACA,SAA0BC,OAA1B,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,KADO;AAEhBC,EAAAA,MAAM,EAAEJ,OAAO,CAACK,MAFA;AAGhBC,EAAAA,SAAS,EAAER,YAAY,CAAC;AACpBS,IAAAA,IAAI,EAAE,OADc;AAEpBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAFc,GAAD,CAHP;AAOhBC,EAAAA,OAAO,EAAEZ,UAAU,CAAC;AAChBQ,IAAAA,IAAI,EAAE,OADU;AAEhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAFU,GAAD,CAPH;AAWhBE,EAAAA,IAAI,EAAE;AAXU,CAApB;;AAcA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAA4C;AACxD,UAAQA,MAAM,CAACR,IAAf;AACI,SAAKN,KAAK,CAACe,OAAX;AACI,aAAO,EACH,GAAGF,KADA;AAEHX,QAAAA,OAAO,EAAE,IAFN;AAGHS,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAMJ,SAAKX,KAAK,CAACgB,WAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHV,QAAAA,MAAM,EAAEW,MAAM,CAACG;AAFZ,OAAP;;AAKJ,SAAKjB,KAAK,CAACkB,yBAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACG,OAFV;AAGHf,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKF,KAAK,CAACmB,WAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHR,QAAAA,SAAS,EAAES,MAAM,CAACG,OAAP,CAAeZ,SAFvB;AAGHK,QAAAA,OAAO,EAAEI,MAAM,CAACG,OAAP,CAAeP;AAHrB,OAAP;;AAMJ;AACI,aAAOG,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,SAASZ,WAAT,EAAsBW,OAAtB","sourcesContent":["import { getStartTime, getEndTime } from '../../../../helper/get-time';\nimport { IAction, IState, EFilter } from './interface';\nimport types from './types';\n\nconst initalState = {\n    loading: false,\n    filter: EFilter.Period,\n    startTime: getStartTime({\n        type: 'month',\n        date: Date.now(),\n    }),\n    endTime: getEndTime({\n        type: 'month',\n        date: Date.now(),\n    }),\n    data: [],\n};\n\nconst reducer = (state: IState, action: IAction): IState => {\n    switch (action.type) {\n        case types.LOADING:\n            return {\n                ...state,\n                loading: true,\n                data: [],\n            };\n\n        case types.SELECT_TYPE:\n            return {\n                ...state,\n                filter: action.payload,\n            };\n\n        case types.LOAD_DATA_REPORT_CUSTOMER:\n            return {\n                ...state,\n                data: action.payload,\n                loading: false,\n            };\n\n        case types.CHANGE_TIME:\n            return {\n                ...state,\n                startTime: action.payload.startTime,\n                endTime: action.payload.endTime,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport { initalState, reducer };\n"]},"metadata":{},"sourceType":"module"}