{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/create-billing/components/packages-billing/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, Col, Row } from 'antd';\nimport React from 'react';\nimport { useBilling } from '../../state/context';\nimport './packages-billing.less';\nimport { EBillingPackageType } from '../../../../../api/billing-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PackagesBilling = ({\n  reorder\n}) => {\n  _s();\n\n  const {\n    packages,\n    packagesSelect,\n    updatePackages,\n    packagesNeedExtend\n  } = useBilling();\n  const codesOfPackagesNeedExtend = packagesNeedExtend.map(item => item.code);\n\n  function onChange(checkedValues) {\n    let list = getList(checkedValues);\n    if (list.length === 0) return;\n    updatePackages(list);\n  }\n\n  function getList(checkedValues) {\n    const lastPackage = packages.find(item => item.code === checkedValues[checkedValues.length - 1]);\n\n    if (checkedValues.includes(EBillingPackageType.Omni) && (lastPackage === null || lastPackage === void 0 ? void 0 : lastPackage.code) === EBillingPackageType.Omni || checkedValues.includes(EBillingPackageType.Facebook) && checkedValues.includes(EBillingPackageType.Shopee) && checkedValues.includes(EBillingPackageType.Pos)) {\n      return packages.filter(item => item.code === EBillingPackageType.Omni);\n    } else {\n      if (reorder) {\n        return [...packages.filter(item => checkedValues.includes(item.code) && item.code !== EBillingPackageType.Omni), ...packagesNeedExtend];\n      }\n\n      return packages.filter(item => checkedValues.includes(item.code) && item.code !== EBillingPackageType.Omni);\n    }\n  }\n\n  React.useEffect(() => {\n    const codesOfPackages = packagesSelect.map(item => item.code);\n\n    if (codesOfPackages.includes(EBillingPackageType.Facebook) && codesOfPackages.includes(EBillingPackageType.Pos) && codesOfPackages.includes(EBillingPackageType.Shopee)) {\n      const list = packages.filter(item => item.code === EBillingPackageType.Omni);\n      updatePackages(list);\n    }\n  }, [packagesSelect]);\n  return /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n    onChange: onChange,\n    className: \"packages-billing\",\n    value: packagesSelect.map(item => item.code),\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [31, 12],\n      children: packages.map(item => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          className: reorder && codesOfPackagesNeedExtend.includes(item === null || item === void 0 ? void 0 : item.code) ? 'need-hidden' : '',\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: false,\n            indeterminate: packagesSelect === null || packagesSelect === void 0 ? void 0 : packagesSelect.some(itemSelect => (itemSelect === null || itemSelect === void 0 ? void 0 : itemSelect.code) === (item === null || item === void 0 ? void 0 : item.code)),\n            value: item === null || item === void 0 ? void 0 : item.code,\n            children: item === null || item === void 0 ? void 0 : item.package\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, item === null || item === void 0 ? void 0 : item.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PackagesBilling, \"ssQOPf3zbtHeiMQP3sxpvICUMFM=\", false, function () {\n  return [useBilling];\n});\n\n_c = PackagesBilling;\nexport default PackagesBilling;\n\nvar _c;\n\n$RefreshReg$(_c, \"PackagesBilling\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/create-billing/components/packages-billing/index.tsx"],"names":["Checkbox","Col","Row","React","useBilling","EBillingPackageType","PackagesBilling","reorder","packages","packagesSelect","updatePackages","packagesNeedExtend","codesOfPackagesNeedExtend","map","item","code","onChange","checkedValues","list","getList","length","lastPackage","find","includes","Omni","Facebook","Shopee","Pos","filter","useEffect","codesOfPackages","some","itemSelect","package"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAmC,MAAnC;AACA,OAAOC,KAAP,MAA0B,OAA1B;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,yBAAP;AACA,SAASC,mBAAT,QAAoC,gCAApC;;;AAMA,MAAMC,eAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,cAAZ;AAA4BC,IAAAA,cAA5B;AAA4CC,IAAAA;AAA5C,MAAmEP,UAAU,EAAnF;AAEA,QAAMQ,yBAAyB,GAAGD,kBAAkB,CAACE,GAAnB,CAAwBC,IAAD,IAA0BA,IAAI,CAACC,IAAtD,CAAlC;;AAEA,WAASC,QAAT,CAAkBC,aAAlB,EAAsC;AAClC,QAAIC,IAAsB,GAAGC,OAAO,CAACF,aAAD,CAApC;AACA,QAAIC,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACvBV,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACH;;AAED,WAASC,OAAT,CAAiBF,aAAjB,EAAqC;AACjC,UAAMI,WAAW,GAAGb,QAAQ,CAACc,IAAT,CACfR,IAAD,IAA0BA,IAAI,CAACC,IAAL,KAAcE,aAAa,CAACA,aAAa,CAACG,MAAd,GAAuB,CAAxB,CADrC,CAApB;;AAGA,QACKH,aAAa,CAACM,QAAd,CAAuBlB,mBAAmB,CAACmB,IAA3C,KACG,CAAAH,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEN,IAAb,MAAsBV,mBAAmB,CAACmB,IAD9C,IAECP,aAAa,CAACM,QAAd,CAAuBlB,mBAAmB,CAACoB,QAA3C,KACGR,aAAa,CAACM,QAAd,CAAuBlB,mBAAmB,CAACqB,MAA3C,CADH,IAEGT,aAAa,CAACM,QAAd,CAAuBlB,mBAAmB,CAACsB,GAA3C,CALR,EAME;AACE,aAAOnB,QAAQ,CAACoB,MAAT,CACFd,IAAD,IAA0BA,IAAI,CAACC,IAAL,KAAcV,mBAAmB,CAACmB,IADzD,CAAP;AAGH,KAVD,MAUO;AACH,UAAIjB,OAAJ,EAAa;AACT,eAAO,CACH,GAAGC,QAAQ,CAACoB,MAAT,CACEd,IAAD,IACIG,aAAa,CAACM,QAAd,CAAuBT,IAAI,CAACC,IAA5B,KACAD,IAAI,CAACC,IAAL,KAAcV,mBAAmB,CAACmB,IAHvC,CADA,EAMH,GAAGb,kBANA,CAAP;AAQH;;AACD,aAAOH,QAAQ,CAACoB,MAAT,CACFd,IAAD,IACIG,aAAa,CAACM,QAAd,CAAuBT,IAAI,CAACC,IAA5B,KAAqCD,IAAI,CAACC,IAAL,KAAcV,mBAAmB,CAACmB,IAFxE,CAAP;AAIH;AACJ;;AAEDrB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AAClB,UAAMC,eAAe,GAAGrB,cAAc,CAACI,GAAf,CAAoBC,IAAD,IAA0BA,IAAI,CAACC,IAAlD,CAAxB;;AACA,QACIe,eAAe,CAACP,QAAhB,CAAyBlB,mBAAmB,CAACoB,QAA7C,KACAK,eAAe,CAACP,QAAhB,CAAyBlB,mBAAmB,CAACsB,GAA7C,CADA,IAEAG,eAAe,CAACP,QAAhB,CAAyBlB,mBAAmB,CAACqB,MAA7C,CAHJ,EAIE;AACE,YAAMR,IAAI,GAAGV,QAAQ,CAACoB,MAAT,CACRd,IAAD,IAA0BA,IAAI,CAACC,IAAL,KAAcV,mBAAmB,CAACmB,IADnD,CAAb;AAGAd,MAAAA,cAAc,CAACQ,IAAD,CAAd;AACH;AACJ,GAZD,EAYG,CAACT,cAAD,CAZH;AAcA,sBACI,QAAC,QAAD,CAAU,KAAV;AACI,IAAA,QAAQ,EAAEO,QADd;AAEI,IAAA,SAAS,EAAC,kBAFd;AAGI,IAAA,KAAK,EAAEP,cAAc,CAACI,GAAf,CAAoBC,IAAD,IAA0BA,IAAI,CAACC,IAAlD,CAHX;AAAA,2BAKI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,gBACKP,QAAQ,CAACK,GAAT,CAAcC,IAAD,IAA0B;AACpC,4BACI,QAAC,GAAD;AACI,UAAA,IAAI,EAAE,EADV;AAGI,UAAA,SAAS,EACLP,OAAO,IAAIK,yBAAyB,CAACW,QAA1B,CAAmCT,IAAnC,aAAmCA,IAAnC,uBAAmCA,IAAI,CAAEC,IAAzC,CAAX,GACM,aADN,GAEM,EANd;AAAA,iCASI,QAAC,QAAD;AACI,YAAA,OAAO,EAAE,KADb;AAEI,YAAA,aAAa,EAAEN,cAAF,aAAEA,cAAF,uBAAEA,cAAc,CAAEsB,IAAhB,CACVC,UAAD,IAAgC,CAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEjB,IAAZ,OAAqBD,IAArB,aAAqBA,IAArB,uBAAqBA,IAAI,CAAEC,IAA3B,CADrB,CAFnB;AAKI,YAAA,KAAK,EAAED,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEC,IALjB;AAAA,sBAOKD,IAPL,aAOKA,IAPL,uBAOKA,IAAI,CAAEmB;AAPX;AAAA;AAAA;AAAA;AAAA;AATJ,WAESnB,IAFT,aAESA,IAFT,uBAESA,IAAI,CAAEC,IAFf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAqBH,OAtBA;AADL;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA1FD;;GAAMT,e;UACuEF,U;;;KADvEE,e;AA4FN,eAAeA,eAAf","sourcesContent":["import { Checkbox, Col, Row } from 'antd';\nimport React, { FC } from 'react';\nimport { IPackageBiling } from '../../../list-billings/package-biling';\nimport { useBilling } from '../../state/context';\nimport './packages-billing.less';\nimport { EBillingPackageType } from '../../../../../api/billing-api';\n\ninterface Props {\n    reorder: boolean;\n}\n\nconst PackagesBilling: FC<Props> = ({ reorder }) => {\n    const { packages, packagesSelect, updatePackages, packagesNeedExtend } = useBilling();\n\n    const codesOfPackagesNeedExtend = packagesNeedExtend.map((item: IPackageBiling) => item.code);\n\n    function onChange(checkedValues: any) {\n        let list: IPackageBiling[] = getList(checkedValues);\n        if (list.length === 0) return;\n        updatePackages(list);\n    }\n\n    function getList(checkedValues: any) {\n        const lastPackage = packages.find(\n            (item: IPackageBiling) => item.code === checkedValues[checkedValues.length - 1]\n        );\n        if (\n            (checkedValues.includes(EBillingPackageType.Omni) &&\n                lastPackage?.code === EBillingPackageType.Omni) ||\n            (checkedValues.includes(EBillingPackageType.Facebook) &&\n                checkedValues.includes(EBillingPackageType.Shopee) &&\n                checkedValues.includes(EBillingPackageType.Pos))\n        ) {\n            return packages.filter(\n                (item: IPackageBiling) => item.code === EBillingPackageType.Omni\n            );\n        } else {\n            if (reorder) {\n                return [\n                    ...packages.filter(\n                        (item: IPackageBiling) =>\n                            checkedValues.includes(item.code) &&\n                            item.code !== EBillingPackageType.Omni\n                    ),\n                    ...packagesNeedExtend,\n                ];\n            }\n            return packages.filter(\n                (item: IPackageBiling) =>\n                    checkedValues.includes(item.code) && item.code !== EBillingPackageType.Omni\n            );\n        }\n    }\n\n    React.useEffect(() => {\n        const codesOfPackages = packagesSelect.map((item: IPackageBiling) => item.code);\n        if (\n            codesOfPackages.includes(EBillingPackageType.Facebook) &&\n            codesOfPackages.includes(EBillingPackageType.Pos) &&\n            codesOfPackages.includes(EBillingPackageType.Shopee)\n        ) {\n            const list = packages.filter(\n                (item: IPackageBiling) => item.code === EBillingPackageType.Omni\n            );\n            updatePackages(list);\n        }\n    }, [packagesSelect]);\n\n    return (\n        <Checkbox.Group\n            onChange={onChange}\n            className=\"packages-billing\"\n            value={packagesSelect.map((item: IPackageBiling) => item.code)}\n        >\n            <Row gutter={[31, 12]}>\n                {packages.map((item: IPackageBiling) => {\n                    return (\n                        <Col\n                            span={12}\n                            key={item?.code}\n                            className={\n                                reorder && codesOfPackagesNeedExtend.includes(item?.code)\n                                    ? 'need-hidden'\n                                    : ''\n                            }\n                        >\n                            <Checkbox\n                                checked={false}\n                                indeterminate={packagesSelect?.some(\n                                    (itemSelect: IPackageBiling) => itemSelect?.code === item?.code\n                                )}\n                                value={item?.code}\n                            >\n                                {item?.package}\n                            </Checkbox>\n                        </Col>\n                    );\n                })}\n            </Row>\n        </Checkbox.Group>\n    );\n};\n\nexport default PackagesBilling;\n"]},"metadata":{},"sourceType":"module"}