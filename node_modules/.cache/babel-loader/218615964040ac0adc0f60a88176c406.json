{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/list/search-order.tsx\",\n    _s = $RefreshSig$();\n\nimport { Input } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { useOrdersContext } from './state/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchOrder = () => {\n  _s();\n\n  const [text, setText] = useState();\n  const {\n    changeTextSearch,\n    search\n  } = useOrdersContext();\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  const handleSearch = value => {\n    changeTextSearch(value);\n  };\n\n  useEffect(() => {\n    if (search && (search === null || search === void 0 ? void 0 : search.length) > 0) {\n      setText(search);\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Input.Search, {\n    placeholder: \"T\\xECm ki\\u1EBFm \\u0111\\u01A1n h\\xE0ng\",\n    onChange: onChangeText,\n    onSearch: handleSearch,\n    style: {\n      width: 330\n    },\n    allowClear: true,\n    value: text\n  }, \"search\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchOrder, \"1P8mFMku+2N8TjW+rwvWORexxdI=\", false, function () {\n  return [useOrdersContext];\n});\n\n_c = SearchOrder;\nexport default SearchOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchOrder\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/list/search-order.tsx"],"names":["Input","React","useState","useEffect","useOrdersContext","SearchOrder","text","setText","changeTextSearch","search","onChangeText","e","target","value","handleSearch","length","width"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;;AAIA,MAAMC,WAAsB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM;AAAEM,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA+BL,gBAAgB,EAArD;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAA4C;AAC7DJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAID,KAAD,IAAmB;AACpCL,IAAAA,gBAAgB,CAACK,KAAD,CAAhB;AACH,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,MAAM,IAAI,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEM,MAAR,IAAiB,CAA/B,EAAkC;AAC9BR,MAAAA,OAAO,CAACE,MAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAMA,sBACI,QAAC,KAAD,CAAO,MAAP;AAEI,IAAA,WAAW,EAAC,wCAFhB;AAGI,IAAA,QAAQ,EAAEC,YAHd;AAII,IAAA,QAAQ,EAAEI,YAJd;AAKI,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KALX;AAMI,IAAA,UAAU,MANd;AAOI,IAAA,KAAK,EAAEV;AAPX,KACQ,QADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;GAAMD,W;UAEmCD,gB;;;KAFnCC,W;AA+BN,eAAeA,WAAf","sourcesContent":["import { Input } from 'antd';\nimport React, { useState, FC, useEffect } from 'react';\nimport { useOrdersContext } from './state/context';\n\ninterface Props {}\n\nconst SearchOrder: FC<Props> = () => {\n    const [text, setText] = useState<string>();\n    const { changeTextSearch, search } = useOrdersContext();\n\n    const onChangeText = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setText(e.target.value);\n    };\n\n    const handleSearch = (value: string) => {\n        changeTextSearch(value);\n    };\n\n    useEffect(() => {\n        if (search && search?.length > 0) {\n            setText(search);\n        }\n    }, [search]);\n\n    return (\n        <Input.Search\n            key=\"search\"\n            placeholder=\"Tìm kiếm đơn hàng\"\n            onChange={onChangeText}\n            onSearch={handleSearch}\n            style={{ width: 330 }}\n            allowClear\n            value={text}\n        />\n    );\n};\n\nexport default SearchOrder;\n"]},"metadata":{},"sourceType":"module"}