{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/note-for-delivery/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Select } from 'antd';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { useOrderNew } from '../../state/context';\nimport { EStatusPage } from '../../state/interface';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ENoteValueForDelivery;\n\n(function (ENoteValueForDelivery) {\n  ENoteValueForDelivery[\"CHOTHUHANG\"] = \"CHOTHUHANG\";\n  ENoteValueForDelivery[\"CHOXEMHANGKHONGTHU\"] = \"CHOXEMHANGKHONGTHU\";\n  ENoteValueForDelivery[\"KHONGCHOXEMHANG\"] = \"KHONGCHOXEMHANG\";\n})(ENoteValueForDelivery || (ENoteValueForDelivery = {}));\n\nexport const notes = [{\n  value: ENoteValueForDelivery.CHOTHUHANG,\n  title: 'Cho thử hàng'\n}, {\n  value: ENoteValueForDelivery.CHOXEMHANGKHONGTHU,\n  title: 'Cho xem hàng, không cho thử'\n}, {\n  value: ENoteValueForDelivery.KHONGCHOXEMHANG,\n  title: 'Không cho xem hàng'\n}];\nexport const getTextNote = value => {\n  const note = notes.find(n => n.value === value);\n  if (!note) return '---';\n  return note.title;\n};\n\nconst NoteForDelivery = props => {\n  _s();\n\n  const {\n    noteForDelivery,\n    changeValueField,\n    statusPage,\n    order\n  } = useOrderNew();\n\n  if (statusPage === EStatusPage.DETAIL) {\n    const text = getTextNote(get(order, 'deliveryOptions.noteForDelivery'));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: text\n    }, void 0, false);\n  }\n\n  const changeNoteForDelivery = value => {\n    changeValueField({\n      field: 'noteForDelivery',\n      value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    placeholder: \"Ch\\u1ECDn ghi ch\\xFA v\\u1EADn chuy\\u1EC3n\",\n    value: noteForDelivery,\n    onChange: changeNoteForDelivery,\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(Select.Option, {\n      value: note.value,\n      children: note.title\n    }, note.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteForDelivery, \"3P5zET5r1nTbouPm0nlFt9stp0Q=\", false, function () {\n  return [useOrderNew];\n});\n\n_c = NoteForDelivery;\nexport default NoteForDelivery;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteForDelivery\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/note-for-delivery/index.tsx"],"names":["Select","get","React","useOrderNew","EStatusPage","ENoteValueForDelivery","notes","value","CHOTHUHANG","title","CHOXEMHANGKHONGTHU","KHONGCHOXEMHANG","getTextNote","note","find","n","NoteForDelivery","props","noteForDelivery","changeValueField","statusPage","order","DETAIL","text","changeNoteForDelivery","field","map"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAIA,WAAYC,qBAAZ;;WAAYA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAUZ,OAAO,MAAMC,KAAa,GAAG,CACzB;AACIC,EAAAA,KAAK,EAAEF,qBAAqB,CAACG,UADjC;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADyB,EAKzB;AACIF,EAAAA,KAAK,EAAEF,qBAAqB,CAACK,kBADjC;AAEID,EAAAA,KAAK,EAAE;AAFX,CALyB,EASzB;AACIF,EAAAA,KAAK,EAAEF,qBAAqB,CAACM,eADjC;AAEIF,EAAAA,KAAK,EAAE;AAFX,CATyB,CAAtB;AAeP,OAAO,MAAMG,WAAW,GAAIL,KAAD,IAAmC;AAC1D,QAAMM,IAAI,GAAGP,KAAK,CAACQ,IAAN,CAAYC,CAAD,IAAaA,CAAC,CAACR,KAAF,KAAYA,KAApC,CAAb;AACA,MAAI,CAACM,IAAL,EAAW,OAAO,KAAP;AACX,SAAOA,IAAI,CAACJ,KAAZ;AACH,CAJM;;AAMP,MAAMO,eAAe,GAAIC,KAAD,IAAkB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,gBAAnB;AAAqCC,IAAAA,UAArC;AAAiDC,IAAAA;AAAjD,MAA2DlB,WAAW,EAA5E;;AAEA,MAAIiB,UAAU,KAAKhB,WAAW,CAACkB,MAA/B,EAAuC;AACnC,UAAMC,IAAI,GAAGX,WAAW,CAACX,GAAG,CAACoB,KAAD,EAAQ,iCAAR,CAAJ,CAAxB;AAEA,wBAAO;AAAA,gBAAGE;AAAH,qBAAP;AACH;;AAED,QAAMC,qBAAqB,GAAIjB,KAAD,IAAoB;AAC9CY,IAAAA,gBAAgB,CAAC;AACbM,MAAAA,KAAK,EAAE,iBADM;AAEblB,MAAAA;AAFa,KAAD,CAAhB;AAIH,GALD;;AAOA,sBACI,QAAC,MAAD;AACI,IAAA,WAAW,EAAC,2CADhB;AAEI,IAAA,KAAK,EAAEW,eAFX;AAGI,IAAA,QAAQ,EAAEM,qBAHd;AAAA,cAKKlB,KAAK,CAACoB,GAAN,CAAWb,IAAD,iBACP,QAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAEA,IAAI,CAACN,KAA3B;AAAA,gBACKM,IAAI,CAACJ;AADV,OAAuCI,IAAI,CAACN,KAA5C;AAAA;AAAA;AAAA;AAAA,YADH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7BD;;GAAMS,e;UAC+Db,W;;;KAD/Da,e;AA+BN,eAAeA,eAAf","sourcesContent":["import { Select } from 'antd';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { useOrderNew } from '../../state/context';\nimport { EStatusPage } from '../../state/interface';\n\ninterface Props {}\n\nexport enum ENoteValueForDelivery {\n    CHOTHUHANG = 'CHOTHUHANG',\n    CHOXEMHANGKHONGTHU = 'CHOXEMHANGKHONGTHU',\n    KHONGCHOXEMHANG = 'KHONGCHOXEMHANG',\n}\nexport interface Note {\n    value: ENoteValueForDelivery;\n    title: string;\n}\n\nexport const notes: Note[] = [\n    {\n        value: ENoteValueForDelivery.CHOTHUHANG,\n        title: 'Cho thử hàng',\n    },\n    {\n        value: ENoteValueForDelivery.CHOXEMHANGKHONGTHU,\n        title: 'Cho xem hàng, không cho thử',\n    },\n    {\n        value: ENoteValueForDelivery.KHONGCHOXEMHANG,\n        title: 'Không cho xem hàng',\n    },\n];\n\nexport const getTextNote = (value?: ENoteValueForDelivery) => {\n    const note = notes.find((n: Note) => n.value === value);\n    if (!note) return '---';\n    return note.title;\n};\n\nconst NoteForDelivery = (props: Props) => {\n    const { noteForDelivery, changeValueField, statusPage, order } = useOrderNew();\n\n    if (statusPage === EStatusPage.DETAIL) {\n        const text = getTextNote(get(order, 'deliveryOptions.noteForDelivery'));\n\n        return <>{text}</>;\n    }\n\n    const changeNoteForDelivery = (value?: string) => {\n        changeValueField({\n            field: 'noteForDelivery',\n            value,\n        });\n    };\n\n    return (\n        <Select\n            placeholder=\"Chọn ghi chú vận chuyển\"\n            value={noteForDelivery}\n            onChange={changeNoteForDelivery}\n        >\n            {notes.map((note: Note) => (\n                <Select.Option value={note.value} key={note.value}>\n                    {note.title}\n                </Select.Option>\n            ))}\n        </Select>\n    );\n};\n\nexport default NoteForDelivery;\n"]},"metadata":{},"sourceType":"module"}