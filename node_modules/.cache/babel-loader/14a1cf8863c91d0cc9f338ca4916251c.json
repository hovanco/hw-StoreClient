{"ast":null,"code":"export let EDeliveryServiceIds;\n\n(function (EDeliveryServiceIds) {\n  EDeliveryServiceIds[EDeliveryServiceIds[\"GHTK\"] = 1] = \"GHTK\";\n  EDeliveryServiceIds[EDeliveryServiceIds[\"GHN\"] = 2] = \"GHN\";\n})(EDeliveryServiceIds || (EDeliveryServiceIds = {}));\n\nexport let ETransportType;\n\n(function (ETransportType) {\n  ETransportType[ETransportType[\"Fast\"] = 1] = \"Fast\";\n  ETransportType[ETransportType[\"Medium\"] = 2] = \"Medium\";\n})(ETransportType || (ETransportType = {}));\n\nexport let ETransportStatus;\n\n(function (ETransportStatus) {\n  ETransportStatus[ETransportStatus[\"Picking\"] = 0] = \"Picking\";\n  ETransportStatus[ETransportStatus[\"Picked\"] = 1] = \"Picked\";\n  ETransportStatus[ETransportStatus[\"Storing\"] = 2] = \"Storing\";\n  ETransportStatus[ETransportStatus[\"Delivering\"] = 3] = \"Delivering\";\n  ETransportStatus[ETransportStatus[\"Delivered\"] = 4] = \"Delivered\";\n  ETransportStatus[ETransportStatus[\"Return\"] = 5] = \"Return\";\n  ETransportStatus[ETransportStatus[\"Returned\"] = 6] = \"Returned\";\n})(ETransportStatus || (ETransportStatus = {}));\n\nexport let EDeliveryDiscountBy;\n\n(function (EDeliveryDiscountBy) {\n  EDeliveryDiscountBy[EDeliveryDiscountBy[\"Money\"] = 0] = \"Money\";\n  EDeliveryDiscountBy[EDeliveryDiscountBy[\"Percent\"] = 1] = \"Percent\";\n})(EDeliveryDiscountBy || (EDeliveryDiscountBy = {}));\n\nexport let ORDER_STATUS;\n\n(function (ORDER_STATUS) {\n  ORDER_STATUS[ORDER_STATUS[\"NEW\"] = 0] = \"NEW\";\n  ORDER_STATUS[ORDER_STATUS[\"CONFIRMED\"] = 1] = \"CONFIRMED\";\n  ORDER_STATUS[ORDER_STATUS[\"WAIT_FOR_DELIVERY\"] = 2] = \"WAIT_FOR_DELIVERY\";\n  ORDER_STATUS[ORDER_STATUS[\"DELIVERING\"] = 3] = \"DELIVERING\";\n  ORDER_STATUS[ORDER_STATUS[\"CANCELED\"] = 4] = \"CANCELED\";\n  ORDER_STATUS[ORDER_STATUS[\"DELIVERED\"] = 5] = \"DELIVERED\";\n  ORDER_STATUS[ORDER_STATUS[\"RETURNED\"] = 6] = \"RETURNED\";\n})(ORDER_STATUS || (ORDER_STATUS = {}));\n\nexport let EPaymentType;\n\n(function (EPaymentType) {\n  EPaymentType[EPaymentType[\"PayFirst\"] = 0] = \"PayFirst\";\n  EPaymentType[EPaymentType[\"PayLater\"] = 1] = \"PayLater\";\n  EPaymentType[EPaymentType[\"PayCOD\"] = 2] = \"PayCOD\";\n})(EPaymentType || (EPaymentType = {}));\n\nexport const EPaymentTypeName = {\n  [EPaymentType.PayFirst]: 'Thanh toán trước',\n  [EPaymentType.PayLater]: 'Thanh toán sau',\n  [EPaymentType.PayCOD]: 'Thanh toán COD'\n};\nexport let EPaymentMethod;\n\n(function (EPaymentMethod) {\n  EPaymentMethod[EPaymentMethod[\"Transfer\"] = 0] = \"Transfer\";\n  EPaymentMethod[EPaymentMethod[\"Cash\"] = 1] = \"Cash\";\n})(EPaymentMethod || (EPaymentMethod = {}));","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/models/order.ts"],"names":["EDeliveryServiceIds","ETransportType","ETransportStatus","EDeliveryDiscountBy","ORDER_STATUS","EPaymentType","EPaymentTypeName","PayFirst","PayLater","PayCOD","EPaymentMethod"],"mappings":"AAGA,WAAYA,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB;;AAKZ,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c;;AAKZ,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;GAAAA,gB,KAAAA,gB;;AAUZ,WAAYC,mBAAZ;;WAAYA,mB;AAAAA,EAAAA,mB,CAAAA,mB;AAAAA,EAAAA,mB,CAAAA,mB;GAAAA,mB,KAAAA,mB;;AA4BZ,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAUZ,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;AAAAA,EAAAA,Y,CAAAA,Y;GAAAA,Y,KAAAA,Y;;AAMZ,OAAO,MAAMC,gBAAgB,GAAG;AAC5B,GAACD,YAAY,CAACE,QAAd,GAAyB,kBADG;AAE5B,GAACF,YAAY,CAACG,QAAd,GAAyB,gBAFG;AAG5B,GAACH,YAAY,CAACI,MAAd,GAAuB;AAHK,CAAzB;AAMP,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["import { IProduct, IStore, IWarehouse } from './store';\nimport { ICustomer } from './customer';\n\nexport enum EDeliveryServiceIds {\n    GHTK = 1,\n    GHN = 2,\n}\n\nexport enum ETransportType {\n    Fast = 1,\n    Medium,\n}\n\nexport enum ETransportStatus {\n    Picking,\n    Picked,\n    Storing,\n    Delivering,\n    Delivered,\n    Return,\n    Returned,\n}\n\nexport enum EDeliveryDiscountBy {\n    Money,\n    Percent,\n}\n\nexport interface TransportLog {\n    status: ETransportStatus;\n    updatedAt: Date;\n}\n\nexport interface IDeliveryOptions {\n    serviceId: EDeliveryServiceIds; // id of delivery service\n    transportType: ETransportType; // transport type, it should be convert to valid value before sending to delivery service\n    shipmentOrderId: string; // id of transport service: ghn: order_code, ghtk: label_id\n    shipmentFee: number; // Real shipment fee\n    shipmentFeeForCustomer: number; // Shipment fee that will be informed to customer\n    shipmentFeeByTotal: boolean; // Shipment fee should be included in total fee\n    discount: number; // Discount for customer, will be set by user\n    discountBy: EDeliveryDiscountBy; // Discount by money or percent\n    feeForReceiver: number; // Total amount that receiver need to pay (Total product amount + shipment fee - discount)\n    moneyForSender: number; // Total amount that sender will receive (Total product amount + shipment fee for customer - discount - real shipment fee)\n    customerNote: string;\n    noteForCustomerCare: string;\n    transportStatus: ETransportStatus;\n    transportLogs: TransportLog[]; // Log all changes of transport status\n    noteForDelivery: string;\n}\n\nexport enum ORDER_STATUS {\n    NEW = 0,\n    CONFIRMED = 1,\n    WAIT_FOR_DELIVERY = 2, // WRAPPED\n    DELIVERING = 3,\n    CANCELED = 4,\n    DELIVERED = 5,\n    RETURNED = 6,\n}\n\nexport enum EPaymentType {\n    PayFirst,\n    PayLater,\n    PayCOD,\n}\n\nexport const EPaymentTypeName = {\n    [EPaymentType.PayFirst]: 'Thanh toán trước',\n    [EPaymentType.PayLater]: 'Thanh toán sau',\n    [EPaymentType.PayCOD]: 'Thanh toán COD',\n}\n\nexport enum EPaymentMethod {\n    Transfer,\n    Cash,\n}\n\nexport interface IOrderProduct {\n    productId: string | IProduct;\n    count: Number;\n    price: Number;\n}\n\nexport interface IOrderCustomer {\n    _id: string;\n    fbUserId: string;\n    name: string;\n    phoneNo: string;\n    address: string;\n    province: string;\n    provinceName?: string;\n    district: string;\n    districtName?: string;\n    ward: string;\n    wardName?: string;\n    email: string;\n}\n\nexport interface IOrder {\n    _id: string;\n    createdBy: string | any;\n    storeId: string | IStore;\n    warehouseId: string | IWarehouse;\n    fbPageId: string;\n    isDraft: boolean;\n    products: IOrderProduct[];\n    discountId: { type: string };\n    totalPrice: Number;\n    customer: IOrderCustomer;\n    note: string;\n    status: ORDER_STATUS;\n    createdAt: string;\n    source: string;\n    code: string;\n    deliveryOptions: IDeliveryOptions;\n    paidAt?: string;\n    paymentType?: EPaymentType;\n    paymentMethod?: EPaymentMethod;\n}\n\nexport interface IGetOrderParams {\n    id: string; // storeId\n    page: number;\n    limit: number;\n    source?: string;\n    serviceId?: number;\n    status?: number;\n    search?: string;\n    soft?: string;\n    direction?: string;\n    transportStatus?: string;\n    customerId?: string;\n    deliveryDate?: number;\n    startTime?: number;\n    endTime?: number;\n}\n\nexport interface ICreateOrderData {\n    products: IProduct[];\n    customer: ICustomer;\n    deliveryOptions: any;\n    warehouseId?: string;\n    source?: string;\n    paymentType?: EPaymentType;\n    paymentMethod?: EPaymentMethod;\n}\n"]},"metadata":{},"sourceType":"module"}