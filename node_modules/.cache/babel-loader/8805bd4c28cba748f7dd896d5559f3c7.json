{"ast":null,"code":"import axios from './axios-client';\nexport async function getStocks({\n  storeId,\n  warehouseId,\n  productId,\n  categoryId,\n  brandId,\n  search,\n  page,\n  limit,\n  parentId\n}) {\n  const response = await axios({\n    method: 'GET',\n    url: `/store/v1/stores/${storeId}/stocks`,\n    params: {\n      page,\n      limit,\n      warehouseId,\n      productId,\n      categoryId,\n      brandId,\n      search,\n      parentId\n    }\n  });\n  return response.data;\n}\nexport async function updateStock({\n  storeId,\n  stockId,\n  quantity\n}) {\n  const response = await axios({\n    method: 'PUT',\n    url: `/store/v1/stores/${storeId}/stocks/${stockId}`,\n    data: {\n      quantity\n    }\n  });\n  return response.data;\n}\nexport async function createStock({\n  storeId,\n  productId,\n  quantity,\n  warehouseId\n}) {\n  const response = await axios({\n    method: 'POST',\n    url: `/store/v1/stores/${storeId}/stocks`,\n    data: {\n      quantity,\n      productId,\n      warehouseId\n    }\n  });\n  return response.data;\n}\nexport async function delStock({\n  storeId,\n  stockId\n}) {\n  const response = await axios({\n    method: 'DELETE',\n    url: `/store/v1/stores/${storeId}/stocks/${stockId}`\n  });\n  return response.data;\n}","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/api/stock-api.ts"],"names":["axios","getStocks","storeId","warehouseId","productId","categoryId","brandId","search","page","limit","parentId","response","method","url","params","data","updateStock","stockId","quantity","createStock","delStock"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,OAAO,eAAeC,SAAf,CAAyB;AAC5BC,EAAAA,OAD4B;AAE5BC,EAAAA,WAF4B;AAG5BC,EAAAA,SAH4B;AAI5BC,EAAAA,UAJ4B;AAK5BC,EAAAA,OAL4B;AAM5BC,EAAAA,MAN4B;AAO5BC,EAAAA,IAP4B;AAQ5BC,EAAAA,KAR4B;AAS5BC,EAAAA;AAT4B,CAAzB,EAoBU;AACb,QAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,oBAAmBX,OAAQ,SAFR;AAGzBY,IAAAA,MAAM,EAAE;AACJN,MAAAA,IADI;AAEJC,MAAAA,KAFI;AAGJN,MAAAA,WAHI;AAIJC,MAAAA,SAJI;AAKJC,MAAAA,UALI;AAMJC,MAAAA,OANI;AAOJC,MAAAA,MAPI;AAQJG,MAAAA;AARI;AAHiB,GAAD,CAA5B;AAeA,SAAOC,QAAQ,CAACI,IAAhB;AACH;AAED,OAAO,eAAeC,WAAf,CAA2B;AAC9Bd,EAAAA,OAD8B;AAE9Be,EAAAA,OAF8B;AAG9BC,EAAAA;AAH8B,CAA3B,EAQU;AACb,QAAMP,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAG,oBAAmBX,OAAQ,WAAUe,OAAQ,EAF1B;AAGzBF,IAAAA,IAAI,EAAE;AAAEG,MAAAA;AAAF;AAHmB,GAAD,CAA5B;AAMA,SAAOP,QAAQ,CAACI,IAAhB;AACH;AAED,OAAO,eAAeI,WAAf,CAA2B;AAC9BjB,EAAAA,OAD8B;AAE9BE,EAAAA,SAF8B;AAG9Bc,EAAAA,QAH8B;AAI9Bf,EAAAA;AAJ8B,CAA3B,EAUU;AACb,QAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,GAAG,EAAG,oBAAmBX,OAAQ,SAFR;AAGzBa,IAAAA,IAAI,EAAE;AAAEG,MAAAA,QAAF;AAAYd,MAAAA,SAAZ;AAAuBD,MAAAA;AAAvB;AAHmB,GAAD,CAA5B;AAMA,SAAOQ,QAAQ,CAACI,IAAhB;AACH;AAED,OAAO,eAAeK,QAAf,CAAwB;AAC3BlB,EAAAA,OAD2B;AAE3Be,EAAAA;AAF2B,CAAxB,EAMU;AACb,QAAMN,QAAQ,GAAG,MAAMX,KAAK,CAAC;AACzBY,IAAAA,MAAM,EAAE,QADiB;AAEzBC,IAAAA,GAAG,EAAG,oBAAmBX,OAAQ,WAAUe,OAAQ;AAF1B,GAAD,CAA5B;AAKA,SAAON,QAAQ,CAACI,IAAhB;AACH","sourcesContent":["import axios from './axios-client';\n\nexport async function getStocks({\n    storeId,\n    warehouseId,\n    productId,\n    categoryId,\n    brandId,\n    search,\n    page,\n    limit,\n    parentId,\n}: {\n    storeId: string;\n    warehouseId?: string;\n    productId?: string;\n    categoryId?: string;\n    brandId?: string;\n    search?: string;\n    page?: number;\n    limit?: number;\n    parentId?: string;\n}): Promise<any> {\n    const response = await axios({\n        method: 'GET',\n        url: `/store/v1/stores/${storeId}/stocks`,\n        params: {\n            page,\n            limit,\n            warehouseId,\n            productId,\n            categoryId,\n            brandId,\n            search,\n            parentId,\n        },\n    });\n\n    return response.data;\n}\n\nexport async function updateStock({\n    storeId,\n    stockId,\n    quantity,\n}: {\n    storeId: string;\n    stockId: string;\n    quantity: number;\n}): Promise<any> {\n    const response = await axios({\n        method: 'PUT',\n        url: `/store/v1/stores/${storeId}/stocks/${stockId}`,\n        data: { quantity },\n    });\n\n    return response.data;\n}\n\nexport async function createStock({\n    storeId,\n    productId,\n    quantity,\n    warehouseId,\n}: {\n    storeId: string;\n    productId: string;\n    warehouseId: string;\n    quantity: number;\n}): Promise<any> {\n    const response = await axios({\n        method: 'POST',\n        url: `/store/v1/stores/${storeId}/stocks`,\n        data: { quantity, productId, warehouseId },\n    });\n\n    return response.data;\n}\n\nexport async function delStock({\n    storeId,\n    stockId,\n}: {\n    storeId: string;\n    stockId: string;\n}): Promise<any> {\n    const response = await axios({\n        method: 'DELETE',\n        url: `/store/v1/stores/${storeId}/stocks/${stockId}`,\n    });\n\n    return response.data;\n}\n"]},"metadata":{},"sourceType":"module"}