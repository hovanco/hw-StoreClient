{"ast":null,"code":"import * as types from './types';\nconst initialState = {\n  loading: true,\n  staffs: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case types.LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case types.LOAD_DONE:\n      return { ...state,\n        staffs: action.payload,\n        loading: false\n      };\n\n    case types.REMOVE_STAFF:\n      {\n        const newStaffs = state.staffs.filter(staff => staff._id !== action.payload._id);\n        return { ...state,\n          staffs: newStaffs\n        };\n      }\n\n    case types.ADD_STAFF:\n      {\n        const newStaffs = [action.payload, ...state.staffs];\n        return { ...state,\n          staffs: newStaffs\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer, initialState };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account/state/reducer.ts"],"names":["types","initialState","loading","staffs","reducer","state","action","type","LOADING","LOAD_DONE","payload","REMOVE_STAFF","newStaffs","filter","staff","_id","ADD_STAFF"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAoB,GAAG;AACzBC,EAAAA,OAAO,EAAE,IADgB;AAEzBC,EAAAA,MAAM,EAAE;AAFiB,CAA7B;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAA4C;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,OAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKF,KAAK,CAACS,SAAX;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACI,OAFZ;AAGHR,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKF,KAAK,CAACW,YAAX;AAAyB;AACrB,cAAMC,SAAS,GAAGP,KAAK,CAACF,MAAN,CAAaU,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcT,MAAM,CAACI,OAAP,CAAeK,GAA5D,CAAlB;AAEA,eAAO,EACH,GAAGV,KADA;AAEHF,UAAAA,MAAM,EAAES;AAFL,SAAP;AAIH;;AAED,SAAKZ,KAAK,CAACgB,SAAX;AAAsB;AAClB,cAAMJ,SAAS,GAAG,CAACN,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACF,MAA1B,CAAlB;AACA,eAAO,EACH,GAAGE,KADA;AAEHF,UAAAA,MAAM,EAAES;AAFL,SAAP;AAIH;;AAED;AACI,aAAOP,KAAP;AA/BR;AAiCH,CAlCD;;AAoCA,SAASD,OAAT,EAAkBH,YAAlB","sourcesContent":["import { IState, IAction } from './interface';\nimport * as types from './types';\n\nconst initialState: IState = {\n    loading: true,\n    staffs: [],\n};\n\nconst reducer = (state: IState, action: IAction): IState => {\n    switch (action.type) {\n        case types.LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case types.LOAD_DONE:\n            return {\n                ...state,\n                staffs: action.payload,\n                loading: false,\n            };\n\n        case types.REMOVE_STAFF: {\n            const newStaffs = state.staffs.filter((staff) => staff._id !== action.payload._id);\n\n            return {\n                ...state,\n                staffs: newStaffs,\n            };\n        }\n\n        case types.ADD_STAFF: {\n            const newStaffs = [action.payload, ...state.staffs];\n            return {\n                ...state,\n                staffs: newStaffs,\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport { reducer, initialState };\n"]},"metadata":{},"sourceType":"module"}