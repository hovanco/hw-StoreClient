{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/detail/order-history.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { EPaymentTypeName } from '../../../models';\nimport formatMoney from '../../../helper/format-money';\nimport { compact } from 'lodash';\nimport { storeAction } from '../../../reducers/storeState/action';\nimport { Col, Row } from 'antd';\nimport { DefaultLayout } from '../../../layout';\nimport { InsaTable, Loading } from '../../../components';\nimport OrderLabelStatus from '../../order/components/order-label-status';\nimport { getFeeForCustomer } from '../../order/create/ultil';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIMIT = 20;\n\nconst OrderHistory = () => {\n  _s();\n\n  const orders = useSelector(state => state.store.order);\n  const storeObj = useSelector(state => state.store.data);\n  const [page, setPage] = useState(1);\n  const loading = useSelector(({\n    store\n  }) => store.order.loading);\n  const dispatch = useDispatch();\n  const params = useParams();\n  useEffect(() => {\n    if (storeObj._id) dispatch(storeAction.getOrders({\n      id: storeObj._id,\n      customerId: params.customerId,\n      page: page,\n      limit: LIMIT\n    })); // eslint-disable-next-line\n  }, [storeObj._id, page]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  const columns = [{\n    title: 'Mã đơn hàng',\n    align: 'center',\n    render: order => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/orders/order/${order._id}`,\n      target: \"_blank\",\n      children: order.code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)\n  }, {\n    title: 'Trạng thái',\n    align: 'center',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(OrderLabelStatus, {\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 47\n    }, this)\n  }, {\n    title: 'Tên khách hàng',\n    align: 'center',\n    key: 'customer_name',\n    dataIndex: ['customer', 'name']\n  }, {\n    title: 'Số điện thoại',\n    align: 'center',\n    key: 'customer_phoneNo',\n    dataIndex: ['customer', 'phoneNo']\n  }, {\n    title: 'Địa chỉ',\n    align: 'center',\n    key: 'customer_address',\n    dataIndex: ['customer', 'address'],\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getCustomerAddress(record)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 55\n    }, this)\n  }, {\n    title: 'Hình thức thanh toán',\n    align: 'center',\n    key: 'paymentType',\n    dataIndex: 'paymentType',\n    render: paymentType => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: EPaymentTypeName[paymentType]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 52\n    }, this)\n  }, {\n    title: 'Tổng tiền',\n    align: 'center',\n    render: order => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [formatMoney(getFeeForCustomer(order)), \" VND\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 40\n    }, this)\n  }];\n\n  const getCustomerAddress = order => {\n    const {\n      address,\n      districtName,\n      wardName,\n      provinceName\n    } = order.customer;\n    return compact([address, wardName, districtName, provinceName]).join(', ');\n  };\n\n  const onChangPagination = page => {\n    setPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    title: \"Customer\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(InsaTable, {\n          loading: false,\n          columns: columns,\n          dataSource: orders.data,\n          isShowTotal: true,\n          bordered: true,\n          rowKey: \"_id\",\n          pagination: {\n            pageSize: LIMIT,\n            current: page,\n            total: orders.pagination.total,\n            onChange: onChangPagination,\n            showSizeChanger: false\n          },\n          name: \"\",\n          className: \"order-tbl\",\n          hasDefaultColumn: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderHistory, \"40VoS4edNjeMw00lhSqusIQM5IE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useParams];\n});\n\n_c = OrderHistory;\nexport default OrderHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistory\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/detail/order-history.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","useParams","EPaymentTypeName","formatMoney","compact","storeAction","Col","Row","DefaultLayout","InsaTable","Loading","OrderLabelStatus","getFeeForCustomer","LIMIT","OrderHistory","orders","state","store","order","storeObj","data","page","setPage","loading","dispatch","params","_id","getOrders","id","customerId","limit","columns","title","align","render","code","dataIndex","key","status","text","record","getCustomerAddress","paymentType","address","districtName","wardName","provinceName","customer","join","onChangPagination","pageSize","current","total","pagination","onChange","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { useState, FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { IState } from '../../../store/rootReducer';\nimport { IOrder, ICustomer, EPaymentType, EPaymentTypeName, ORDER_STATUS } from '../../../models';\nimport formatMoney from '../../../helper/format-money';\nimport { compact } from 'lodash';\nimport { storeAction } from '../../../reducers/storeState/action';\nimport { ICustomerDetailParams } from './index';\n\nimport { Col, Row } from 'antd';\nimport { ColumnType } from 'antd/lib/table';\nimport { DefaultLayout } from '../../../layout';\nimport { InsaTable, Loading } from '../../../components';\nimport OrderLabelStatus from '../../order/components/order-label-status';\nimport { getFeeForCustomer } from '../../order/create/ultil';\n\nimport './style.less';\nimport { IStoreState } from '../../../reducers/storeState/reducer';\n\nconst LIMIT = 20;\n\nconst OrderHistory: FC = () => {\n    const orders = useSelector((state: IState) => state.store.order);\n    const storeObj = useSelector((state: IState) => state.store.data);\n\n    const [page, setPage] = useState<number>(1);\n    const loading = useSelector(({ store }: { store: IStoreState }) => store.order.loading);\n\n    const dispatch = useDispatch();\n    const params = useParams<ICustomerDetailParams>();\n\n    useEffect(() => {\n        if (storeObj._id)\n            dispatch(\n                storeAction.getOrders({\n                    id: storeObj._id,\n                    customerId: params.customerId,\n                    page: page,\n                    limit: LIMIT,\n                })\n            );\n        // eslint-disable-next-line\n    }, [storeObj._id, page]);\n\n    if (loading) return <Loading />;\n\n    const columns: ColumnType<any>[] = [\n        {\n            title: 'Mã đơn hàng',\n            align: 'center',\n            render: (order: IOrder) =>\n                <Link to={`/orders/order/${order._id}`} target=\"_blank\">{order.code}</Link>,\n        },\n        {\n            title: 'Trạng thái',\n            align: 'center',\n            dataIndex: 'status',\n            key: 'status',\n            render: (status: ORDER_STATUS) => <span><OrderLabelStatus status={status} /></span>,\n        },\n        {\n            title: 'Tên khách hàng',\n            align: 'center',\n            key: 'customer_name',\n            dataIndex: ['customer', 'name'],\n        },\n        {\n            title: 'Số điện thoại',\n            align: 'center',\n            key: 'customer_phoneNo',\n            dataIndex: ['customer', 'phoneNo'],\n        },\n        {\n            title: 'Địa chỉ',\n            align: 'center',\n            key: 'customer_address',\n            dataIndex: ['customer', 'address'],\n            render: (text: string, record: IOrder) => <div>{getCustomerAddress(record)}</div>,\n        },\n        {\n            title: 'Hình thức thanh toán',\n            align: 'center',\n            key: 'paymentType',\n            dataIndex: 'paymentType',\n            render: (paymentType: EPaymentType) => <span>{EPaymentTypeName[paymentType]}</span>,\n        },\n        {\n            title: 'Tổng tiền',\n            align: 'center',\n            render: (order: IOrder) => <span>{formatMoney(getFeeForCustomer(order))} VND</span>,\n        },\n    ];\n\n    const getCustomerAddress = (order: IOrder) => {\n        const { address, districtName, wardName, provinceName } = order.customer as ICustomer;\n        return compact([address, wardName, districtName, provinceName]).join(', ');\n    };\n\n    const onChangPagination = (page: number) => {\n        setPage(page);\n    };\n\n    return (\n        <DefaultLayout title=\"Customer\">\n            <Row>\n                <Col span={24}>\n                    <InsaTable\n                        loading={false}\n                        columns={columns}\n                        dataSource={orders.data}\n                        isShowTotal\n                        bordered\n                        rowKey=\"_id\"\n                        pagination={{\n                            pageSize: LIMIT,\n                            current: page,\n                            total: orders.pagination.total,\n                            onChange: onChangPagination,\n                            showSizeChanger: false,\n                        }}\n                        name=\"\"\n                        className=\"order-tbl\"\n                        hasDefaultColumn={false}\n                    />\n                </Col>\n            </Row>\n        </DefaultLayout>\n    );\n};\n\nexport default OrderHistory;\n"]},"metadata":{},"sourceType":"module"}