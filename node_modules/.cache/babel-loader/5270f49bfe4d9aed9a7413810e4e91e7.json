{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/product-variant/sort-attributes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { findIndex } from 'lodash';\nimport { Modal, Card, Space, Row, Col, message } from 'antd';\nimport DragDropTags from './drag-drop-tag';\nimport { InsaButton, DragDropList, Loading } from '../../../../components';\nimport useAttributes from '../../context/use-attribute';\nimport useVariants from '../../context/use-variant';\nimport productApi from '../../../../api/product-api';\nimport { TAG_COLOR_CLASSNAME } from './edit-attributes';\nimport IconActionMore from './icon-action-mores';\nimport './sort-attributes.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SortAttributes = ({\n  form\n}) => {\n  _s();\n\n  const {\n    attributes,\n    setAttributes\n  } = useAttributes();\n  const {\n    setVariants\n  } = useVariants();\n  const params = useParams();\n  const storeObj = useSelector(state => state.store.data);\n  const [localAttributes, setLocalAttributes] = useState(attributes);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLocalAttributes(attributes);\n  }, [attributes]);\n\n  const closeModal = () => setVisible(false);\n\n  const handleTagsChange = (tagIdx, tags) => {\n    let tempLocalAttributes = [...localAttributes];\n    tempLocalAttributes[tagIdx].tags = tags;\n    setLocalAttributes(tempLocalAttributes);\n  };\n\n  const handleUpdateChange = async () => {\n    try {\n      setLoading(true);\n\n      if (storeObj._id) {\n        await productApi.changeOrderAttributesAndTags(storeObj._id, params.productId, localAttributes).then(response => {\n          if (response.success) {\n            return productApi.getProduct({\n              storeId: storeObj._id,\n              productId: params === null || params === void 0 ? void 0 : params.productId\n            });\n          }\n        }).then(product => {\n          form.setFieldsValue(product);\n          if (product.attributes) setAttributes(product.attributes);\n          if (product.variants) setVariants(product.variants);\n          message.success('Cập nhật sản phẩm thành công');\n          setVisible(false);\n        });\n      } else {\n        message.error('Cập nhật sản phẩm thất bại');\n      }\n    } catch (error) {\n      message.error('Cập nhật sản phẩm thất bại');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setVisible(true),\n      children: \"S\\u1EAFp x\\u1EBFp thu\\u1ED9c t\\xEDnh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      title: \"\",\n      footer: null,\n      onCancel: closeModal,\n      wrapClassName: \"modal-card-content modal-sort-attribute\",\n      closable: false,\n      width: 600,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"S\\u1EAFp x\\u1EBFp thu\\u1ED9c t\\xEDnh\",\n        style: {\n          position: 'relative'\n        },\n        children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n          full: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(DragDropList, {\n          accepts: ['attribute'],\n          className: \"sort-attributes\",\n          dataSource: localAttributes,\n          renderItem: (localAttribute, idx) => /*#__PURE__*/_jsxDEV(Row, {\n            className: TAG_COLOR_CLASSNAME[findIndex(attributes, ['_id', localAttribute._id])],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: [/*#__PURE__*/_jsxDEV(IconActionMore, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: localAttribute.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 16,\n              children: /*#__PURE__*/_jsxDEV(DragDropTags, {\n                attribute: localAttribute,\n                onTagsChange: tags => handleTagsChange(idx, tags)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this),\n          onDragEnd: setLocalAttributes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ant-card-footer\",\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(InsaButton, {\n              style: {\n                width: 140\n              },\n              size: \"middle\",\n              onClick: closeModal,\n              children: \"Hu\\u1EF7\"\n            }, \"help\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InsaButton, {\n              style: {\n                width: 140\n              },\n              size: \"middle\",\n              type: \"primary\",\n              onClick: handleUpdateChange,\n              loading: loading,\n              children: \"C\\u1EADp nh\\u1EADt\"\n            }, \"help\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SortAttributes, \"v+LjNIjY8yFKt/a2dhNjiVZezUM=\", false, function () {\n  return [useAttributes, useVariants, useParams, useSelector];\n});\n\n_c = SortAttributes;\nexport default SortAttributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortAttributes\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-detail/product-variant/sort-attributes.tsx"],"names":["React","useState","useEffect","useSelector","useParams","findIndex","Modal","Card","Space","Row","Col","message","DragDropTags","InsaButton","DragDropList","Loading","useAttributes","useVariants","productApi","TAG_COLOR_CLASSNAME","IconActionMore","SortAttributes","form","attributes","setAttributes","setVariants","params","storeObj","state","store","data","localAttributes","setLocalAttributes","visible","setVisible","loading","setLoading","closeModal","handleTagsChange","tagIdx","tags","tempLocalAttributes","handleUpdateChange","_id","changeOrderAttributesAndTags","productId","then","response","success","getProduct","storeId","product","setFieldsValue","variants","error","position","localAttribute","idx","name","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,OAAvC,QAAsD,MAAtD;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,OAAnC,QAAkD,wBAAlD;AAGA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAO,wBAAP;;;;AAMA,MAAMC,cAAyB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC5C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCR,aAAa,EAAnD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkBR,WAAW,EAAnC;AACA,QAAMS,MAAM,GAAGtB,SAAS,EAAxB;AACA,QAAMuB,QAAQ,GAAGxB,WAAW,CAAEyB,KAAD,IAAmBA,KAAK,CAACC,KAAN,CAAYC,IAAhC,CAA5B;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC/B,QAAQ,CAAesB,UAAf,CAAtD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAU,KAAV,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,kBAAkB,CAACT,UAAD,CAAlB;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMc,UAAU,GAAG,MAAMH,UAAU,CAAC,KAAD,CAAnC;;AAEA,QAAMI,gBAAgB,GAAG,CAACC,MAAD,EAAiBC,IAAjB,KAAoC;AACzD,QAAIC,mBAAmB,GAAG,CAAC,GAAGV,eAAJ,CAA1B;AACAU,IAAAA,mBAAmB,CAACF,MAAD,CAAnB,CAA4BC,IAA5B,GAAmCA,IAAnC;AAEAR,IAAAA,kBAAkB,CAACS,mBAAD,CAAlB;AACH,GALD;;AAOA,QAAMC,kBAAkB,GAAG,YAAY;AACnC,QAAI;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIT,QAAQ,CAACgB,GAAb,EAAkB;AACd,cAAMzB,UAAU,CACX0B,4BADC,CAEEjB,QAAQ,CAACgB,GAFX,EAGEjB,MAAM,CAACmB,SAHT,EAIEd,eAJF,EAMDe,IANC,CAMKC,QAAD,IAAmB;AACrB,cAAIA,QAAQ,CAACC,OAAb,EAAsB;AAClB,mBAAO9B,UAAU,CAAC+B,UAAX,CAAsB;AACzBC,cAAAA,OAAO,EAAEvB,QAAQ,CAACgB,GADO;AAEzBE,cAAAA,SAAS,EAAEnB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEmB;AAFM,aAAtB,CAAP;AAIH;AACJ,SAbC,EAcDC,IAdC,CAcKK,OAAD,IAAkB;AACpB7B,UAAAA,IAAI,CAAC8B,cAAL,CAAoBD,OAApB;AAEA,cAAIA,OAAO,CAAC5B,UAAZ,EAAwBC,aAAa,CAAC2B,OAAO,CAAC5B,UAAT,CAAb;AACxB,cAAI4B,OAAO,CAACE,QAAZ,EAAsB5B,WAAW,CAAC0B,OAAO,CAACE,QAAT,CAAX;AAEtB1C,UAAAA,OAAO,CAACqC,OAAR,CAAgB,8BAAhB;AACAd,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAtBC,CAAN;AAuBH,OAxBD,MAwBO;AACHvB,QAAAA,OAAO,CAAC2C,KAAR,CAAc,4BAAd;AACH;AACJ,KA7BD,CA6BE,OAAOA,KAAP,EAAc;AACZ3C,MAAAA,OAAO,CAAC2C,KAAR,CAAc,4BAAd;AACH,KA/BD,SA+BU;AACNlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAnCD;;AAqCA,sBACI;AAAA,4BACI;AAAK,MAAA,OAAO,EAAE,MAAMF,UAAU,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AACI,MAAA,OAAO,EAAED,OADb;AAEI,MAAA,KAAK,EAAC,EAFV;AAGI,MAAA,MAAM,EAAE,IAHZ;AAII,MAAA,QAAQ,EAAEI,UAJd;AAKI,MAAA,aAAa,EAAC,yCALlB;AAMI,MAAA,QAAQ,EAAE,KANd;AAOI,MAAA,KAAK,EAAE,GAPX;AAAA,6BASI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,sCAAZ;AAAiC,QAAA,KAAK,EAAE;AAAEkB,UAAAA,QAAQ,EAAE;AAAZ,SAAxC;AAAA,mBACKpB,OAAO,iBAAI,QAAC,OAAD;AAAS,UAAA,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,gBADhB,eAEI,QAAC,YAAD;AACI,UAAA,OAAO,EAAE,CAAC,WAAD,CADb;AAEI,UAAA,SAAS,EAAC,iBAFd;AAGI,UAAA,UAAU,EAAEJ,eAHhB;AAII,UAAA,UAAU,EAAE,CAACyB,cAAD,EAAsBC,GAAtB,kBACR,QAAC,GAAD;AACI,YAAA,SAAS,EACLtC,mBAAmB,CACfd,SAAS,CAACkB,UAAD,EAAa,CAAC,KAAD,EAAQiC,cAAc,CAACb,GAAvB,CAAb,CADM,CAF3B;AAAA,oCAOI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,sCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,sBADJ,oBACuB;AAAA,0BAAOa,cAAc,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,sBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,EAAX;AAAA,qCACI,QAAC,YAAD;AACI,gBAAA,SAAS,EAAEF,cADf;AAEI,gBAAA,YAAY,EAAGhB,IAAD,IACVF,gBAAgB,CAACmB,GAAD,EAAMjB,IAAN;AAHxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR;AAyBI,UAAA,SAAS,EAAER;AAzBf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eA8BI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI,QAAC,KAAD;AAAA,oCACI,QAAC,UAAD;AACI,cAAA,KAAK,EAAE;AAAE2B,gBAAAA,KAAK,EAAE;AAAT,eADX;AAEI,cAAA,IAAI,EAAC,QAFT;AAII,cAAA,OAAO,EAAEtB,UAJb;AAAA;AAAA,eAGQ,MAHR;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,UAAD;AACI,cAAA,KAAK,EAAE;AAAEsB,gBAAAA,KAAK,EAAE;AAAT,eADX;AAEI,cAAA,IAAI,EAAC,QAFT;AAII,cAAA,IAAI,EAAC,SAJT;AAKI,cAAA,OAAO,EAAEjB,kBALb;AAMI,cAAA,OAAO,EAAEP,OANb;AAAA;AAAA,eAGQ,MAHR;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAqEH,CAjID;;GAAMd,c;UACoCL,a,EACdC,W,EACTb,S,EACED,W;;;KAJfkB,c;AAmIN,eAAeA,cAAf","sourcesContent":["import React, { FC, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { findIndex } from 'lodash';\n\nimport { Modal, Card, Space, Row, Col, message } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport DragDropTags from './drag-drop-tag';\nimport { InsaButton, DragDropList, Loading } from '../../../../components';\nimport { IProductDetailParams } from '../../interface';\nimport { IAttribute } from '../../../../models';\nimport useAttributes from '../../context/use-attribute';\nimport useVariants from '../../context/use-variant';\n\nimport productApi from '../../../../api/product-api';\nimport { IState } from '../../../../store/rootReducer';\nimport { TAG_COLOR_CLASSNAME } from './edit-attributes';\nimport IconActionMore from './icon-action-mores';\nimport './sort-attributes.less';\n\ntype Props = {\n    form: FormInstance;\n};\n\nconst SortAttributes: FC<Props> = ({ form }) => {\n    const { attributes, setAttributes } = useAttributes();\n    const { setVariants } = useVariants();\n    const params = useParams<IProductDetailParams>();\n    const storeObj = useSelector((state: IState) => state.store.data);\n\n    const [localAttributes, setLocalAttributes] = useState<IAttribute[]>(attributes);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        setLocalAttributes(attributes);\n    }, [attributes]);\n\n    const closeModal = () => setVisible(false);\n\n    const handleTagsChange = (tagIdx: number, tags: string[]) => {\n        let tempLocalAttributes = [...localAttributes];\n        tempLocalAttributes[tagIdx].tags = tags;\n\n        setLocalAttributes(tempLocalAttributes);\n    };\n\n    const handleUpdateChange = async () => {\n        try {\n            setLoading(true);\n            if (storeObj._id) {\n                await productApi\n                    .changeOrderAttributesAndTags(\n                        storeObj._id,\n                        params.productId as string,\n                        localAttributes\n                    )\n                    .then((response: any) => {\n                        if (response.success) {\n                            return productApi.getProduct({\n                                storeId: storeObj._id as string,\n                                productId: params?.productId as string,\n                            });\n                        }\n                    })\n                    .then((product: any) => {\n                        form.setFieldsValue(product);\n\n                        if (product.attributes) setAttributes(product.attributes);\n                        if (product.variants) setVariants(product.variants);\n\n                        message.success('Cập nhật sản phẩm thành công');\n                        setVisible(false);\n                    });\n            } else {\n                message.error('Cập nhật sản phẩm thất bại');\n            }\n        } catch (error) {\n            message.error('Cập nhật sản phẩm thất bại');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <>\n            <div onClick={() => setVisible(true)}>Sắp xếp thuộc tính</div>\n\n            <Modal\n                visible={visible}\n                title=\"\"\n                footer={null}\n                onCancel={closeModal}\n                wrapClassName=\"modal-card-content modal-sort-attribute\"\n                closable={false}\n                width={600}\n            >\n                <Card title=\"Sắp xếp thuộc tính\" style={{ position: 'relative' }}>\n                    {loading && <Loading full />}\n                    <DragDropList\n                        accepts={['attribute']}\n                        className=\"sort-attributes\"\n                        dataSource={localAttributes}\n                        renderItem={(localAttribute: any, idx: number) => (\n                            <Row\n                                className={\n                                    TAG_COLOR_CLASSNAME[\n                                        findIndex(attributes, ['_id', localAttribute._id])\n                                    ]\n                                }\n                            >\n                                <Col span={8}>\n                                    <IconActionMore /> <span>{localAttribute.name}</span>\n                                </Col>\n                                <Col span={16}>\n                                    <DragDropTags\n                                        attribute={localAttribute}\n                                        onTagsChange={(tags: string[]) =>\n                                            handleTagsChange(idx, tags)\n                                        }\n                                    />\n                                </Col>\n                            </Row>\n                        )}\n                        onDragEnd={setLocalAttributes}\n                    />\n\n                    <div className=\"ant-card-footer\">\n                        <Space>\n                            <InsaButton\n                                style={{ width: 140 }}\n                                size=\"middle\"\n                                key=\"help\"\n                                onClick={closeModal}\n                            >\n                                Huỷ\n                            </InsaButton>\n                            <InsaButton\n                                style={{ width: 140 }}\n                                size=\"middle\"\n                                key=\"help\"\n                                type=\"primary\"\n                                onClick={handleUpdateChange}\n                                loading={loading}\n                            >\n                                Cập nhật\n                            </InsaButton>\n                        </Space>\n                    </div>\n                </Card>\n            </Modal>\n        </>\n    );\n};\n\nexport default SortAttributes;\n"]},"metadata":{},"sourceType":"module"}