{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/detail/components/btn-confirm-payment/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, message, Modal } from 'antd';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../../api/order-api';\nimport { EPaymentType, ORDER_STATUS, SaleChannelId } from '../../../../../models';\nimport { useOrderNew } from '../../../create/state/context';\nimport { useOrderDetail } from '../../state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  confirmPaymentOrder\n} = orderApi;\n\nconst BtnConfirmPayment = () => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const {\n    order\n  } = useOrderNew();\n  const {\n    loadOrder\n  } = useOrderDetail();\n  if ((order === null || order === void 0 ? void 0 : order.paidAt) && order.paymentType === EPaymentType.PayCOD) return null;\n\n  const confirmPayment = () => {\n    Modal.confirm({\n      title: 'Xác nhận thanh toán',\n      content: 'Xác nhận đơn hàng đã thanh toán',\n      okText: 'Xác nhận',\n      cancelText: 'Hủy',\n      onOk: () => new Promise((resolve, reject) => {\n        confirmPaymentOrder({\n          storeId: store._id,\n          orderId: order._id\n        }).then(() => {\n          loadOrder(order._id);\n          message.success('Đơn hàng đã thanh toán');\n          return resolve('success');\n        }).catch(() => {\n          message.error('Đã có lỗi xảy ra, vui lòng thử lại');\n          return reject();\n        });\n      }),\n      onCancel: () => {}\n    });\n  };\n\n  const disabled = (order === null || order === void 0 ? void 0 : order.source) !== SaleChannelId.POS && (!!(order === null || order === void 0 ? void 0 : order.paidAt) || (order === null || order === void 0 ? void 0 : order.paymentType) === EPaymentType.PayCOD || (order === null || order === void 0 ? void 0 : order.status) === ORDER_STATUS.CANCELED);\n  return (order === null || order === void 0 ? void 0 : order.paymentType) !== EPaymentType.PayCOD ? /*#__PURE__*/_jsxDEV(Button, {\n    onClick: confirmPayment,\n    disabled: disabled,\n    children: \"X\\xE1c nh\\u1EADn thanh to\\xE1n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(BtnConfirmPayment, \"0CbMbZXZuvtzWKewJDsWLGr+ZE4=\", false, function () {\n  return [useSelector, useOrderNew, useOrderDetail];\n});\n\n_c = BtnConfirmPayment;\nexport default BtnConfirmPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"BtnConfirmPayment\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/detail/components/btn-confirm-payment/index.tsx"],"names":["Button","message","Modal","React","useSelector","orderApi","EPaymentType","ORDER_STATUS","SaleChannelId","useOrderNew","useOrderDetail","confirmPaymentOrder","BtnConfirmPayment","store","state","data","order","loadOrder","paidAt","paymentType","PayCOD","confirmPayment","confirm","title","content","okText","cancelText","onOk","Promise","resolve","reject","storeId","_id","orderId","then","success","catch","error","onCancel","disabled","source","POS","status","CANCELED"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,QAAuC,MAAvC;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,YAAT,EAA+BC,YAA/B,EAA6CC,aAA7C,QAAkE,uBAAlE;AAEA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,cAAT,QAA+B,aAA/B;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BN,QAAhC;;AAIA,MAAMO,iBAA4B,GAAG,MAAM;AAAA;;AACvC,QAAMC,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAmBA,KAAK,CAACD,KAAN,CAAYE,IAAhC,CAAzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYP,WAAW,EAA7B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBP,cAAc,EAApC;AAEA,MAAI,CAAAM,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,MAAP,KAAiBF,KAAK,CAACG,WAAN,KAAsBb,YAAY,CAACc,MAAxD,EAAgE,OAAO,IAAP;;AAEhE,QAAMC,cAAc,GAAG,MAAM;AACzBnB,IAAAA,KAAK,CAACoB,OAAN,CAAc;AACVC,MAAAA,KAAK,EAAE,qBADG;AAEVC,MAAAA,OAAO,EAAE,iCAFC;AAGVC,MAAAA,MAAM,EAAE,UAHE;AAIVC,MAAAA,UAAU,EAAE,KAJF;AAKVC,MAAAA,IAAI,EAAE,MACF,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BnB,QAAAA,mBAAmB,CAAC;AAChBoB,UAAAA,OAAO,EAAElB,KAAK,CAACmB,GADC;AAEhBC,UAAAA,OAAO,EAAGjB,KAAD,CAAkBgB;AAFX,SAAD,CAAnB,CAIKE,IAJL,CAIU,MAAM;AACRjB,UAAAA,SAAS,CAAED,KAAD,CAAkBgB,GAAnB,CAAT;AACA/B,UAAAA,OAAO,CAACkC,OAAR,CAAgB,wBAAhB;AACA,iBAAON,OAAO,CAAC,SAAD,CAAd;AACH,SARL,EASKO,KATL,CASW,MAAM;AACTnC,UAAAA,OAAO,CAACoC,KAAR,CAAc,oCAAd;AACA,iBAAOP,MAAM,EAAb;AACH,SAZL;AAaH,OAdD,CANM;AAqBVQ,MAAAA,QAAQ,EAAE,MAAM,CAAE;AArBR,KAAd;AAuBH,GAxBD;;AA0BA,QAAMC,QAAQ,GACV,CAAAvB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEwB,MAAP,MAAkBhC,aAAa,CAACiC,GAAhC,KACC,CAAC,EAACzB,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEE,MAAR,CAAD,IACG,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,WAAP,MAAuBb,YAAY,CAACc,MADvC,IAEG,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE0B,MAAP,MAAkBnC,YAAY,CAACoC,QAHnC,CADJ;AAMA,SACI,CAAA3B,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,WAAP,MAAuBb,YAAY,CAACc,MAApC,gBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAiC,IAAA,QAAQ,EAAEkB,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,gBAII,qCALR;AAOH,CA9CD;;GAAM3B,iB;UACYR,W,EACIK,W,EACIC,c;;;KAHpBE,iB;AAgDN,eAAeA,iBAAf","sourcesContent":["import { Button, message, Modal } from 'antd';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../../api/order-api';\nimport { EPaymentType, IOrder, ORDER_STATUS, SaleChannelId } from '../../../../../models';\nimport { IState } from '../../../../../store/rootReducer';\nimport { useOrderNew } from '../../../create/state/context';\nimport { useOrderDetail } from '../../state';\n\nconst { confirmPaymentOrder } = orderApi;\n\ninterface Props {}\n\nconst BtnConfirmPayment: FC<Props> = () => {\n    const store = useSelector((state: IState) => state.store.data);\n    const { order } = useOrderNew();\n    const { loadOrder } = useOrderDetail();\n\n    if (order?.paidAt && order.paymentType === EPaymentType.PayCOD) return null;\n\n    const confirmPayment = () => {\n        Modal.confirm({\n            title: 'Xác nhận thanh toán',\n            content: 'Xác nhận đơn hàng đã thanh toán',\n            okText: 'Xác nhận',\n            cancelText: 'Hủy',\n            onOk: () =>\n                new Promise((resolve, reject) => {\n                    confirmPaymentOrder({\n                        storeId: store._id as string,\n                        orderId: (order as IOrder)._id,\n                    })\n                        .then(() => {\n                            loadOrder((order as IOrder)._id);\n                            message.success('Đơn hàng đã thanh toán');\n                            return resolve('success');\n                        })\n                        .catch(() => {\n                            message.error('Đã có lỗi xảy ra, vui lòng thử lại');\n                            return reject();\n                        });\n                }),\n            onCancel: () => {},\n        });\n    };\n\n    const disabled =\n        order?.source !== SaleChannelId.POS &&\n        (!!order?.paidAt ||\n            order?.paymentType === EPaymentType.PayCOD ||\n            order?.status === ORDER_STATUS.CANCELED);\n\n    return (\n        order?.paymentType !== EPaymentType.PayCOD ?\n            <Button onClick={confirmPayment} disabled={disabled}>\n                Xác nhận thanh toán\n            </Button> :\n            <></>\n    );\n};\n\nexport default BtnConfirmPayment;\n"]},"metadata":{},"sourceType":"module"}