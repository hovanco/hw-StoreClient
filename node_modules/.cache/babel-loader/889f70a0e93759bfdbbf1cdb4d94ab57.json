{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/create-store/form-create-store.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { get, map } from 'lodash';\nimport * as queryString from 'querystring';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport storeApi from '../../api/store-api';\nimport { updateUserStorePreference } from '../../api/user-store-preference-api';\nimport { Loading } from '../../components';\nimport { disabledAutosuggestion, validChannel } from '../../helper';\nimport rules from '../../helper/rules';\nimport { useDistricts, useProvices, useWards } from '../../hook/useLocation';\nimport { SaleChannelId } from '../../models';\nimport types from '../../reducers/storeState/type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  createStore,\n  updateStore\n} = storeApi;\nexport let ETypeForm;\n\n(function (ETypeForm) {\n  ETypeForm[\"NEW\"] = \"1\";\n  ETypeForm[\"EDIT\"] = \"2\";\n})(ETypeForm || (ETypeForm = {}));\n\nconst size = 'large';\nconst style = {\n  width: '100%'\n};\n\nconst FormCreateStore = ({\n  type = ETypeForm.NEW\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.store.data);\n  const [form] = useForm();\n  const location = useLocation();\n  const [, forceUpdate] = useState({});\n  const [initialValues, setInitialValues] = useState('');\n  const [progress, setProgress] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [province, setProvince] = useState(() => {\n    if (store) {\n      return store.province;\n    }\n\n    return undefined;\n  });\n  const [district, setDistrict] = useState(() => {\n    if (store) {\n      return store.district;\n    }\n\n    return undefined;\n  });\n  const [ward, setWard] = useState(() => {\n    if (store) {\n      return store.ward;\n    }\n\n    return undefined;\n  });\n  const {\n    loadingProvince,\n    provinces\n  } = useProvices();\n  const {\n    loadingDistrict,\n    districts\n  } = useDistricts(province, true);\n  const {\n    loadingWard,\n    wards\n  } = useWards({\n    province,\n    district,\n    loading: true\n  });\n\n  const onChangeProvince = value => {\n    setProvince(value);\n    setDistrict(undefined);\n    setWard(undefined);\n    removeField('district');\n    removeField('ward');\n  };\n\n  const onChangeDistrict = value => {\n    setDistrict(value);\n    setWard(undefined);\n    removeField('ward');\n  };\n\n  const onChangeWard = value => {\n    setWard(value);\n  };\n\n  const removeField = field => {\n    form.setFieldsValue({\n      [field]: undefined\n    });\n  };\n\n  const createNewStore = async values => {\n    try {\n      if (localStorage.getItem('shortLiveToken') !== null) values.saleChannels = [SaleChannelId.FACEBOOK];\n      const querySearch = queryString.parse(location.search.replace('?', ''));\n      let data = values;\n\n      if (querySearch.saleChannel && validChannel(querySearch.saleChannel)) {\n        data = { ...values,\n          saleChannels: [querySearch.saleChannel]\n        };\n      }\n\n      const result = await createStore(data);\n      await updateUserStorePreference({\n        storeId: result._id,\n        hideNewUserGuide: false\n      });\n      dispatch({\n        type: types.SET_STORE,\n        payload: result\n      });\n    } catch (error) {\n      if (get(error, 'response.status') === 409) {\n        return message.error('Tên cửa hàng đã tồn tại. Vui lòng nhập tên khác');\n      }\n\n      return message.error('Lỗi tạo cửa hàng');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const editStore = async values => {\n    try {\n      const result = await updateStore(store._id, { ...values\n      });\n      dispatch({\n        type: types.SET_STORE,\n        payload: result\n      });\n    } catch (error) {\n      message.error('Lỗi chỉnh sửa cửa hàng');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFinish = values => {\n    setLoading(true);\n\n    if (type === ETypeForm.NEW) {\n      createNewStore(values);\n    } else {\n      editStore(values);\n    }\n\n    form.resetFields();\n  }; // const onFinish = (values: IDataCreateStore) => {\n  //     console.log('Success:', values);\n  //     console.log('Ok roi ban nha');\n  //     form.resetFields();\n  // };\n\n\n  useEffect(() => {\n    if (!loadingDistrict && !loadingWard && type === ETypeForm.EDIT || type === ETypeForm.NEW) {\n      setProgress(false);\n    }\n  }, [loadingDistrict, loadingWard, type]);\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  if (progress) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 320\n      },\n      children: /*#__PURE__*/_jsxDEV(Loading, {\n        full: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\" // initialValues={{\n    //     ...pick(store, ['name', 'phoneNo', 'address', 'province', 'district', 'ward']),\n    // }}\n    ,\n    form: form,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn c\\u1EEDa h\\xE0ng\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập Tên cửa hàng'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        size: size,\n        placeholder: \"T\\xEAn c\\u1EEDa h\\xE0ng\",\n        autoFocus: true,\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phoneNo\",\n      label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập Số điện thoại'\n      }, {\n        validator: rules.validatePhone\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        style: style,\n        size: size,\n        placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i c\\u1EEDa h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 15,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"province\",\n          label: \"T\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n          rules: [{\n            required: true,\n            message: 'Chọn tỉnh/thành phố'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            style: {\n              width: '100%'\n            },\n            optionFilterProp: \"children\",\n            onChange: onChangeProvince,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            loading: loadingProvince,\n            onFocus: disabledAutosuggestion,\n            placeholder: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\",\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), map(provinces, province => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: province.code,\n              children: province.name\n            }, province.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"district\",\n          label: \"Qu\\u1EADn/huy\\u1EC7n\",\n          rules: [{\n            required: true,\n            message: 'Chọn quận/huyện'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\",\n            onChange: onChangeDistrict,\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !province,\n            loading: loadingDistrict,\n            onFocus: disabledAutosuggestion,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), map(districts, district => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: district.code,\n              children: district.name\n            }, district.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"ward\",\n          label: \"X\\xE3/ph\\u01B0\\u1EDDng\",\n          rules: [{\n            required: true,\n            message: 'Chọn xã/phường'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            size: size,\n            placeholder: \"Ch\\u1ECDn x\\xE3/ph\\u01B0\\u1EDDng\",\n            showSearch: true,\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            disabled: !district,\n            loading: loadingWard,\n            onFocus: disabledAutosuggestion,\n            onChange: onChangeWard,\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: '-1',\n              disabled: true,\n              children: \"Ch\\u1ECDn x\\xE3/ph\\u01B0\\u1EDDng\"\n            }, '-1', false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), map(wards, ward => {\n              return /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: ward.code,\n                children: ward.name\n              }, ward.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"address\",\n      rules: [{\n        required: true,\n        message: 'Vui lòng nhập Địa chỉ'\n      }],\n      label: \"\\u0110\\u1ECBa ch\\u1EC9\",\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        autoComplete: \"off\",\n        placeholder: \"\\u0110i\\u1EC1n \\u0111\\u1ECBa ch\\u1EC9 c\\u1EEDa h\\xE0ng\",\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      shouldUpdate: true,\n      children: () => {\n        const notValidProvice = !province;\n        const notValiddistrict = !district;\n        const notValidWard = !ward;\n        const isValidFied = type === ETypeForm.EDIT ? !!form.getFieldsError().filter(({\n          errors\n        }) => errors.length).length : !form.isFieldsTouched(true) || !!form.getFieldsError().filter(({\n          errors\n        }) => errors.length).length;\n        const disabled = isValidFied || notValidProvice || notValiddistrict || notValidWard;\n        return /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          size: size,\n          htmlType: \"submit\",\n          block: true,\n          disabled: disabled,\n          children: ETypeForm.EDIT ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            size: size,\n            htmlType: \"submit\",\n            block: true // disabled={disabled}\n            ,\n            children: \"Ch\\u1EC9nh s\\u1EEDa c\\u1EEDa h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            size: size,\n            htmlType: \"submit\",\n            block: true,\n            disabled: disabled,\n            children: \"T\\u1EA1o c\\u1EEDa h\\xE0ng'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormCreateStore, \"dNecnMBSCZKWLZrPZvx7CwLTut4=\", false, function () {\n  return [useDispatch, useSelector, useForm, useLocation, useProvices, useDistricts, useWards];\n});\n\n_c = FormCreateStore;\nexport default FormCreateStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCreateStore\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/create-store/form-create-store.tsx"],"names":["Button","Col","Form","Input","message","Row","Select","useForm","get","map","queryString","React","useEffect","useState","useDispatch","useSelector","useLocation","storeApi","updateUserStorePreference","Loading","disabledAutosuggestion","validChannel","rules","useDistricts","useProvices","useWards","SaleChannelId","types","createStore","updateStore","ETypeForm","size","style","width","FormCreateStore","type","NEW","dispatch","store","state","data","form","location","forceUpdate","initialValues","setInitialValues","progress","setProgress","loading","setLoading","province","setProvince","undefined","district","setDistrict","ward","setWard","loadingProvince","provinces","loadingDistrict","districts","loadingWard","wards","onChangeProvince","value","removeField","onChangeDistrict","onChangeWard","field","setFieldsValue","createNewStore","values","localStorage","getItem","saleChannels","FACEBOOK","querySearch","parse","search","replace","saleChannel","result","storeId","_id","hideNewUserGuide","SET_STORE","payload","error","editStore","onFinish","resetFields","EDIT","height","required","validator","validatePhone","input","option","children","toLowerCase","indexOf","code","name","notValidProvice","notValiddistrict","notValidWard","isValidFied","getFieldsError","filter","errors","length","isFieldsTouched","disabled"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { useForm } from 'antd/lib/form/Form';\nimport { get, map, pick } from 'lodash';\nimport * as queryString from 'querystring';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport storeApi, { IDataCreateStore } from '../../api/store-api';\nimport { updateUserStorePreference } from '../../api/user-store-preference-api';\nimport { Loading } from '../../components';\nimport { disabledAutosuggestion, validChannel } from '../../helper';\nimport rules from '../../helper/rules';\nimport { useDistricts, useProvices, useWards } from '../../hook/useLocation';\nimport { SaleChannelId } from '../../models';\nimport types from '../../reducers/storeState/type';\nimport { IState } from '../../store/rootReducer';\nimport { District, Province, Ward } from './interface';\nconst { createStore, updateStore } = storeApi;\n\nexport enum ETypeForm {\n    NEW = '1',\n    EDIT = '2',\n}\ninterface Props {\n    type?: ETypeForm;\n}\n\nconst size = 'large';\nconst style = { width: '100%' };\n\nconst FormCreateStore: FC<Props> = ({ type = ETypeForm.NEW }) => {\n    const dispatch = useDispatch();\n    const store = useSelector((state: IState) => state.store.data);\n    const [form] = useForm();\n    const location = useLocation();\n    const [, forceUpdate] = useState({});\n\n    const [initialValues, setInitialValues] = useState('');\n\n    const [progress, setProgress] = useState<boolean>(true);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [province, setProvince] = useState<string | undefined>(() => {\n        if (store) {\n            return store.province as string;\n        }\n        return undefined;\n    });\n\n    const [district, setDistrict] = useState<string | undefined>(() => {\n        if (store) {\n            return store.district as string;\n        }\n        return undefined;\n    });\n\n    const [ward, setWard] = useState<string | undefined>(() => {\n        if (store) {\n            return store.ward as string;\n        }\n        return undefined;\n    });\n\n    const { loadingProvince, provinces } = useProvices();\n    const { loadingDistrict, districts } = useDistricts(province, true);\n    const { loadingWard, wards } = useWards({ province, district, loading: true });\n\n    const onChangeProvince = (value: string) => {\n        setProvince(value);\n        setDistrict(undefined);\n        setWard(undefined);\n        removeField('district');\n        removeField('ward');\n    };\n\n    const onChangeDistrict = (value: string) => {\n        setDistrict(value);\n        setWard(undefined);\n        removeField('ward');\n    };\n\n    const onChangeWard = (value: string) => {\n        setWard(value);\n    };\n\n    const removeField = (field: string) => {\n        form.setFieldsValue({\n            [field]: undefined,\n        });\n    };\n\n    const createNewStore = async (values: IDataCreateStore) => {\n        try {\n            if (localStorage.getItem('shortLiveToken') !== null)\n                values.saleChannels = [SaleChannelId.FACEBOOK];\n\n            const querySearch: {\n                saleChannel?: SaleChannelId;\n            } = queryString.parse(location.search.replace('?', ''));\n\n            let data = values;\n\n            if (querySearch.saleChannel && validChannel(querySearch.saleChannel)) {\n                data = {\n                    ...values,\n                    saleChannels: [querySearch.saleChannel],\n                };\n            }\n\n            const result = await createStore(data);\n\n            await updateUserStorePreference({\n                storeId: result._id,\n                hideNewUserGuide: false,\n            });\n\n            dispatch({\n                type: types.SET_STORE,\n                payload: result,\n            });\n        } catch (error) {\n            if (get(error, 'response.status') === 409) {\n                return message.error('Tên cửa hàng đã tồn tại. Vui lòng nhập tên khác');\n            }\n            return message.error('Lỗi tạo cửa hàng');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const editStore = async (values: IDataCreateStore) => {\n        try {\n            const result = await updateStore(store._id as string, {\n                ...values,\n            });\n\n            dispatch({\n                type: types.SET_STORE,\n                payload: result,\n            });\n        } catch (error) {\n            message.error('Lỗi chỉnh sửa cửa hàng');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const onFinish = (values: IDataCreateStore) => {\n        setLoading(true);\n        if (type === ETypeForm.NEW) {\n            createNewStore(values);\n        } else {\n            editStore(values);\n        }\n        form.resetFields();\n    };\n\n    // const onFinish = (values: IDataCreateStore) => {\n    //     console.log('Success:', values);\n    //     console.log('Ok roi ban nha');\n    //     form.resetFields();\n    // };\n\n    useEffect(() => {\n        if (\n            (!loadingDistrict && !loadingWard && type === ETypeForm.EDIT) ||\n            type === ETypeForm.NEW\n        ) {\n            setProgress(false);\n        }\n    }, [loadingDistrict, loadingWard, type]);\n\n    useEffect(() => {\n        forceUpdate({});\n    }, []);\n\n    if (progress) {\n        return (\n            <div style={{ height: 320 }}>\n                <Loading full />\n            </div>\n        );\n    }\n\n    return (\n        <Form\n            layout='vertical'\n            // initialValues={{\n            //     ...pick(store, ['name', 'phoneNo', 'address', 'province', 'district', 'ward']),\n            // }}\n            form={form}\n            onFinish={onFinish}\n        >\n            <Form.Item\n                name='name'\n                label='Tên cửa hàng'\n                rules={[{ required: true, message: 'Vui lòng nhập Tên cửa hàng' }]}\n            >\n                <Input size={size} placeholder='Tên cửa hàng' autoFocus name='name' />\n            </Form.Item>\n\n            <Form.Item\n                name='phoneNo'\n                label='Số điện thoại'\n                rules={[\n                    { required: true, message: 'Vui lòng nhập Số điện thoại' },\n                    {\n                        validator: rules.validatePhone,\n                    },\n                ]}\n            >\n                <Input style={style} size={size} placeholder='Số điện thoại cửa hàng' />\n            </Form.Item>\n\n            <Row gutter={15}>\n                <Col md={8}>\n                    <Form.Item\n                        name='province'\n                        label='Tỉnh/thành phố'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Chọn tỉnh/thành phố',\n                            },\n                        ]}\n                    >\n                        <Select\n                            showSearch\n                            style={{ width: '100%' }}\n                            optionFilterProp='children'\n                            onChange={onChangeProvince}\n                            filterOption={(input: string, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            loading={loadingProvince}\n                            onFocus={disabledAutosuggestion}\n                            placeholder='Chọn tỉnh/thành phố'\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn tỉnh/thành phố\n                            </Select.Option>\n\n                            {map(provinces, (province: Province) => (\n                                <Select.Option value={province.code} key={province.code}>\n                                    {province.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='district'\n                        label='Quận/huyện'\n                        rules={[{ required: true, message: 'Chọn quận/huyện' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn quận/huyện'\n                            onChange={onChangeDistrict}\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!province}\n                            loading={loadingDistrict}\n                            onFocus={disabledAutosuggestion}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn quận/huyện\n                            </Select.Option>\n                            {map(districts, (district: District) => (\n                                <Select.Option value={district.code} key={district.code}>\n                                    {district.name}\n                                </Select.Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col md={8}>\n                    <Form.Item\n                        name='ward'\n                        label='Xã/phường'\n                        rules={[{ required: true, message: 'Chọn xã/phường' }]}\n                    >\n                        <Select\n                            size={size}\n                            placeholder='Chọn xã/phường'\n                            showSearch\n                            filterOption={(input, option: any) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            disabled={!district}\n                            loading={loadingWard}\n                            onFocus={disabledAutosuggestion}\n                            onChange={onChangeWard}\n                        >\n                            <Select.Option value={'-1'} key={'-1'} disabled>\n                                Chọn xã/phường\n                            </Select.Option>\n                            {map(wards, (ward: Ward) => {\n                                return (\n                                    <Select.Option value={ward.code} key={ward.code}>\n                                        {ward.name}\n                                    </Select.Option>\n                                );\n                            })}\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item\n                name='address'\n                rules={[{ required: true, message: 'Vui lòng nhập Địa chỉ' }]}\n                label='Địa chỉ'\n            >\n                <Input.TextArea\n                    autoComplete='off'\n                    placeholder='Điền địa chỉ cửa hàng'\n                    rows={3}\n                ></Input.TextArea>\n            </Form.Item>\n\n            <Form.Item shouldUpdate>\n                {() => {\n                    const notValidProvice = !province;\n                    const notValiddistrict = !district;\n                    const notValidWard = !ward;\n\n                    const isValidFied =\n                        type === ETypeForm.EDIT\n                            ? !!form.getFieldsError().filter(({ errors }) => errors.length).length\n                            : !form.isFieldsTouched(true) ||\n                              !!form.getFieldsError().filter(({ errors }) => errors.length).length;\n\n                    const disabled =\n                        isValidFied || notValidProvice || notValiddistrict || notValidWard;\n\n                    return (\n                        <Button\n                            type='primary'\n                            size={size}\n                            htmlType='submit'\n                            block\n                            disabled={disabled}\n                        >\n                          \n                            {ETypeForm.EDIT ? (<Button\n                            type='primary'\n                            size={size}\n                            htmlType='submit'\n                            block\n                            // disabled={disabled}\n                        >\n                            Chỉnh sửa cửa hàng\n                          \n                        </Button>) : (<Button\n                            type='primary'\n                            size={size}\n                            htmlType='submit'\n                            block\n                            disabled={disabled}\n                        >\n                           Tạo cửa hàng'\n                          \n                        </Button>)}\n                        </Button>\n                    );\n                }}\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default FormCreateStore;\n"]},"metadata":{},"sourceType":"module"}