{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport staffApi from '../api/staff-api';\nexport const useStaffs = () => {\n  _s();\n\n  const [staffs, setStaffs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const storeObj = useSelector(state => state.store.data);\n  useEffect(() => {\n    async function getListStaff(storeId) {\n      try {\n        const response = await staffApi.getStaffs(storeId);\n        setStaffs(response);\n      } catch (error) {\n        setStaffs([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    if (storeObj._id) getListStaff(storeObj._id);\n  }, [storeObj._id]);\n\n  const getStaffById = id => {\n    return staffs.filter(staff => staff._id === id)[0];\n  };\n\n  return {\n    staffs,\n    loading,\n    getStaffById\n  };\n};\n\n_s(useStaffs, \"rUdmsywtCyDZOAQGQb0Ow9GR15o=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/hook/useStaff.tsx"],"names":["useEffect","useState","useSelector","staffApi","useStaffs","staffs","setStaffs","loading","setLoading","storeObj","state","store","data","getListStaff","storeId","response","getStaffs","error","_id","getStaffById","id","filter","staff"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAW,EAAX,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAU,IAAV,CAAtC;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACC,KAAN,CAAYC,IAAhC,CAA5B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAea,YAAf,CAA4BC,OAA5B,EAA6C;AACzC,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,SAAT,CAAmBF,OAAnB,CAAvB;AAEAR,QAAAA,SAAS,CAACS,QAAD,CAAT;AACH,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZX,QAAAA,SAAS,CAAC,EAAD,CAAT;AACH,OAND,SAMU;AACNE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;;AAED,QAAIC,QAAQ,CAACS,GAAb,EAAkBL,YAAY,CAACJ,QAAQ,CAACS,GAAV,CAAZ;AACrB,GAdQ,EAcN,CAACT,QAAQ,CAACS,GAAV,CAdM,CAAT;;AAgBA,QAAMC,YAAY,GAAIC,EAAD,IAAgB;AACjC,WAAOf,MAAM,CAACgB,MAAP,CAAeC,KAAD,IAAmBA,KAAK,CAACJ,GAAN,KAAcE,EAA/C,EAAmD,CAAnD,CAAP;AACH,GAFD;;AAIA,SAAO;AACHf,IAAAA,MADG;AAEHE,IAAAA,OAFG;AAGHY,IAAAA;AAHG,GAAP;AAKH,CA/BM;;GAAMf,S;UAIQF,W","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport staffApi from '../api/staff-api';\nimport { IStaff } from '../models';\nimport { IState } from '../store/rootReducer';\n\nexport const useStaffs = () => {\n    const [staffs, setStaffs] = useState<IStaff[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    const storeObj = useSelector((state: IState) => state.store.data);\n\n    useEffect(() => {\n        async function getListStaff(storeId: string) {\n            try {\n                const response = await staffApi.getStaffs(storeId);\n\n                setStaffs(response);\n            } catch (error) {\n                setStaffs([]);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        if (storeObj._id) getListStaff(storeObj._id);\n    }, [storeObj._id]);\n\n    const getStaffById = (id: string) => {\n        return staffs.filter((staff: IStaff) => staff._id === id)[0];\n    };\n\n    return {\n        staffs,\n        loading,\n        getStaffById,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}