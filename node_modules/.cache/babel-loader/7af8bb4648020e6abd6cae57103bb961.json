{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/components/header/header-right.tsx\",\n    _s = $RefreshSig$();\n\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar, Dropdown, Menu, Space, Typography } from 'antd';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from '../../reducers/authState/authAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HeaderRight = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isAuth = useSelector(({\n    auth\n  }) => auth.isAuth);\n  const user = useSelector(({\n    auth\n  }) => auth.user);\n  const storeName = useSelector(({\n    store\n  }) => store.data);\n\n  const menuOnClick = async value => {\n    switch (value.key) {\n      case 'login':\n        history.push('/login');\n        break;\n\n      case 'logout':\n        {\n          await dispatch(logout());\n          history.push('/login');\n          return;\n        }\n\n      default:\n        break;\n    }\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: menuOnClick,\n    className: \"user-menu\",\n    children: !isAuth ? /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"\\u0110\\u0103ng nh\\u1EADp\"\n    }, \"login\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: get(user, 'name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-info\",\n          children: get(user, 'email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, \"1\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/setting-profile\",\n          children: \"C\\xE0i \\u0111\\u1EB7t t\\xE0i kho\\u1EA3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: \"\\u0110\\u0103ng xu\\u1EA5t\"\n      }, \"logout\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    overlay: menu,\n    trigger: ['click'],\n    placement: \"bottomRight\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n          className: \"user-dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-dropdown__store\",\n            children: get(storeName, ['name'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-dropdown__user\",\n            children: get(user, ['name'])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 35\n          }, this),\n          size: 45,\n          src: user.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeaderRight, \"qmuE7QblaVnIuQUnnRbTdaQ8zt0=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = HeaderRight;\nexport default HeaderRight;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderRight\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/components/header/header-right.tsx"],"names":["UserOutlined","Avatar","Dropdown","Menu","Space","Typography","get","React","useDispatch","useSelector","Link","useHistory","logout","HeaderRight","history","dispatch","isAuth","auth","user","storeName","store","data","menuOnClick","value","key","push","menu","picture"],"mappings":"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","sourcesContent":["import { CaretDownFilled, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Dropdown, Menu, Space, Typography } from 'antd';\nimport { get } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport dataFilterInventory from '../../pages/inventory/inventory-list/advance-filter/data';\nimport { logout } from '../../reducers/authState/authAction';\nimport { IStorageState } from '../../reducers/authState/authReducer';\nimport { IStoreState } from '../../reducers/storeState/reducer';\n\nconst HeaderRight = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const isAuth = useSelector(({ auth }: { auth: IStorageState }) => auth.isAuth);\n    const user = useSelector(({ auth } : {auth: IStorageState}) => auth.user);\n    const storeName = useSelector(({ store } : {store: IStoreState}) => store.data);\n\n    const menuOnClick = async (value: any) => {\n        switch (value.key) {\n            case 'login':\n                history.push('/login');\n                break;\n\n            case 'logout': {\n                await dispatch(logout());\n\n                history.push('/login');\n                return;\n            }\n\n            default:\n                break;\n        }\n    };\n\n    const menu = (\n        <Menu onClick={menuOnClick} className=\"user-menu\">\n            {!isAuth ? (\n                <Menu.Item key=\"login\">Đăng nhập</Menu.Item>\n            ) : (\n                <>\n                    <Menu.Item key=\"1\">\n                        <strong>{get(user, 'name')}</strong>\n                        <span className=\"user-info\">{get(user, 'email')}</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <Link to=\"/setting-profile\">Cài đặt tài khoản</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"logout\">Đăng xuất</Menu.Item>\n                </>\n            )}\n        </Menu>\n        \n    );\n\n    return (\n        <Dropdown overlay={menu} trigger={['click']} placement=\"bottomRight\">\n            <div className=\"user-dropdown\">\n                <Space>\n                    <Typography.Text className=\"user-dropdown-content\">\n                        <span className=\"user-dropdown__store\">{get(storeName, ['name'])}</span>\n                        <span className=\"user-dropdown__user\" >{get(user, ['name'])}</span>\n                    </Typography.Text>\n                    <Avatar icon={<UserOutlined />} size={45} src={user.picture} />\n                </Space>\n            </div>\n        </Dropdown>\n    );\n};\n\nexport default HeaderRight;\n"]},"metadata":{},"sourceType":"module"}