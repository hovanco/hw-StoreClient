{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/inventory-quantity/select-warehouse.tsx\",\n    _s = $RefreshSig$();\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Divider, Input, Modal, Space } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { InsaButton } from '../../../../components';\nimport { useWarehouses } from './hooks/warehouses';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectWarehouse = () => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [localWarehouseIds, setLocalWarehouseIds] = useState([]);\n  const [searchText, setSearchText] = useState();\n  const {\n    warehouses,\n    selectWarehouses\n  } = useWarehouses();\n  const warehouseOptions = useSelector(state => state.store.warehouses);\n  useEffect(() => {\n    setLocalWarehouseIds(warehouses.map(item => item._id));\n  }, [warehouses]);\n\n  const toggle = () => setVisible(!visible);\n\n  const checkboxOptions = useMemo(() => {\n    return warehouseOptions.filter(item => searchText ? item.name.toLowerCase().trim().includes(searchText === null || searchText === void 0 ? void 0 : searchText.toLowerCase().trim()) : true).map(item => ({\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: item.name\n      }, void 0, false),\n      value: item._id\n    }));\n  }, [warehouseOptions, searchText]);\n\n  const onChange = checkedValue => {\n    setLocalWarehouseIds(checkedValue);\n  };\n\n  const handleCancel = () => {\n    setLocalWarehouseIds(warehouses.map(item => item._id));\n    toggle();\n  };\n\n  const handleSubmit = () => {\n    selectWarehouses(localWarehouseIds);\n    toggle();\n  };\n\n  const handleSearchTextChange = event => {\n    setSearchText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InsaButton, {\n      onClick: toggle,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"T\\xF9y ch\\u1EC9nh kho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onCancel: handleCancel,\n      title: \"T\\xF9y ch\\u1EC9nh kho h\\xE0ng\",\n      footer: null,\n      wrapClassName: \"modal-select-warehouse\",\n      closable: false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"T\\xECm kho h\\xE0ng\",\n          prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this),\n          width: '100%',\n          value: searchText,\n          onChange: handleSearchTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group-label\",\n        children: \"Ch\\u1ECDn \\u0111\\u1ECBa ch\\u1EC9 t\\u1ED3n kho cho s\\u1EA3n ph\\u1EA9m ch\\u1EC9 \\u0111\\u1ECBnh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n        options: checkboxOptions,\n        value: localWarehouseIds,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(InsaButton, {\n          onClick: handleCancel,\n          size: \"middle\",\n          style: {\n            width: 120\n          },\n          children: \"H\\u1EE7y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InsaButton, {\n          onClick: handleSubmit,\n          type: \"primary\",\n          size: \"middle\",\n          style: {\n            width: 120\n          },\n          children: \"C\\u1EADp nh\\u1EADt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SelectWarehouse, \"s8caL9qYepyiaBb0z6VZopCUJj4=\", false, function () {\n  return [useWarehouses, useSelector];\n});\n\n_c = SelectWarehouse;\nexport default SelectWarehouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectWarehouse\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/inventory-quantity/select-warehouse.tsx"],"names":["SearchOutlined","Checkbox","Divider","Input","Modal","Space","React","useEffect","useMemo","useState","useSelector","InsaButton","useWarehouses","SelectWarehouse","visible","setVisible","localWarehouseIds","setLocalWarehouseIds","searchText","setSearchText","warehouses","selectWarehouses","warehouseOptions","state","store","map","item","_id","toggle","checkboxOptions","filter","name","toLowerCase","trim","includes","label","value","onChange","checkedValue","handleCancel","handleSubmit","handleSearchTextChange","event","target","width"],"mappings":"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","sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Divider, Input, Modal, Space } from 'antd';\nimport { CheckboxOptionType, CheckboxValueType } from 'antd/lib/checkbox/Group';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { InsaButton } from '../../../../components';\nimport { IWarehouse } from '../../../../models';\nimport { IState } from '../../../../store/rootReducer';\nimport { useWarehouses } from './hooks/warehouses';\n\nconst SelectWarehouse: FC = () => {\n    const [visible, setVisible] = useState<boolean>(false);\n    const [localWarehouseIds, setLocalWarehouseIds] = useState<string[]>([]);\n    const [searchText, setSearchText] = useState<string>();\n    const { warehouses, selectWarehouses } = useWarehouses();\n\n    const warehouseOptions = useSelector((state: IState) => state.store.warehouses);\n\n    useEffect(() => {\n        setLocalWarehouseIds(warehouses.map((item: IWarehouse) => item._id as string));\n    }, [warehouses]);\n\n    const toggle = () => setVisible(!visible);\n\n    const checkboxOptions: CheckboxOptionType[] = useMemo(() => {\n        return warehouseOptions\n            .filter((item: IWarehouse) =>\n                searchText\n                    ? (item.name as string)\n                          .toLowerCase()\n                          .trim()\n                          .includes(searchText?.toLowerCase().trim())\n                    : true\n            )\n            .map((item: IWarehouse) => ({\n                label: <>{item.name}</>,\n                value: item._id as string,\n            }));\n    }, [warehouseOptions, searchText]);\n\n    const onChange = (checkedValue: CheckboxValueType[]) => {\n        setLocalWarehouseIds(checkedValue as string[]);\n    };\n\n    const handleCancel = () => {\n        setLocalWarehouseIds(warehouses.map((item: IWarehouse) => item._id as string));\n        toggle();\n    };\n\n    const handleSubmit = () => {\n        selectWarehouses(localWarehouseIds);\n        toggle();\n    };\n\n    const handleSearchTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchText(event.target.value);\n    };\n\n    return (\n        <>\n            <InsaButton onClick={toggle}>\n                <span>Tùy chỉnh kho</span>\n            </InsaButton>\n\n            <Modal\n                visible={visible}\n                onCancel={handleCancel}\n                title=\"Tùy chỉnh kho hàng\"\n                footer={null}\n                wrapClassName=\"modal-select-warehouse\"\n                closable={false}\n            >\n                <div>\n                    <Input\n                        placeholder=\"Tìm kho hàng\"\n                        prefix={<SearchOutlined />}\n                        width={'100%'}\n                        value={searchText}\n                        onChange={handleSearchTextChange}\n                    />\n                </div>\n\n                <div className=\"checkbox-group-label\">\n                    Chọn địa chỉ tồn kho cho sản phẩm chỉ định\n                </div>\n\n                <Checkbox.Group\n                    options={checkboxOptions}\n                    value={localWarehouseIds}\n                    onChange={onChange}\n                />\n\n                <Divider />\n\n                <Space className=\"footer\">\n                    <InsaButton onClick={handleCancel} size=\"middle\" style={{ width: 120 }}>\n                        Hủy\n                    </InsaButton>\n                    <InsaButton\n                        onClick={handleSubmit}\n                        type=\"primary\"\n                        size=\"middle\"\n                        style={{ width: 120 }}\n                    >\n                        Cập nhật\n                    </InsaButton>\n                </Space>\n            </Modal>\n        </>\n    );\n};\n\nexport default SelectWarehouse;\n"]},"metadata":{},"sourceType":"module"}