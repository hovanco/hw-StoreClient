{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/input-search.tsx\",\n    _s = $RefreshSig$();\n\nimport { Input } from 'antd';\nimport * as queryString from 'query-string';\nimport { debounce } from 'lodash';\nimport React, { useEffect, useState, memo } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { useCustomerTable } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputSearch = () => {\n  _s();\n\n  const {\n    changeFilterSearch,\n    filter\n  } = useCustomerTable();\n  const location = useLocation();\n  const history = useHistory();\n  const [searchString, setSearchString] = useState(filter.search);\n  const searchObj = queryString.parse(location.search);\n\n  const onChangeText = e => {\n    setSearchString(e.target.value);\n  };\n\n  const handleChangeSearchText = debounce(searchText => {\n    const searchString = queryString.stringify({ ...searchObj,\n      search: searchText.length === 0 ? undefined : searchText\n    });\n    history.push({\n      pathname: location.pathname,\n      search: searchString\n    });\n    changeFilterSearch(searchText);\n  }, 300);\n  useEffect(() => {\n    setSearchString(filter.search);\n  }, [filter.search]);\n  return /*#__PURE__*/_jsxDEV(Input.Search, {\n    placeholder: \"T\\xECm ki\\u1EBFm kh\\xE1ch h\\xE0ng\",\n    onSearch: handleChangeSearchText,\n    style: {\n      width: 330\n    },\n    allowClear: true,\n    value: searchString,\n    onChange: onChangeText\n  }, \"search\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputSearch, \"/SFicw+7sx9i3QJo2j3yA1lX3YA=\", false, function () {\n  return [useCustomerTable, useLocation, useHistory];\n});\n\n_c = InputSearch;\nexport default _c2 = /*#__PURE__*/memo(InputSearch);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputSearch\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/input-search.tsx"],"names":["Input","queryString","debounce","React","useEffect","useState","memo","useHistory","useLocation","useCustomerTable","InputSearch","changeFilterSearch","filter","location","history","searchString","setSearchString","search","searchObj","parse","onChangeText","e","target","value","handleChangeSearchText","searchText","stringify","length","undefined","push","pathname","width"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,EAAyCC,IAAzC,QAAqD,OAArD;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,MAAMC,WAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAiCH,gBAAgB,EAAvD;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAqBO,MAAM,CAACK,MAA5B,CAAhD;AAEA,QAAMC,SAAS,GAAGjB,WAAW,CAACkB,KAAZ,CAAkBN,QAAQ,CAACI,MAA3B,CAAlB;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAY;AAC7BL,IAAAA,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,QAAMC,sBAAsB,GAAGtB,QAAQ,CAAEuB,UAAD,IAAwB;AAC5D,UAAMV,YAAY,GAAGd,WAAW,CAACyB,SAAZ,CAAsB,EACvC,GAAGR,SADoC;AAEvCD,MAAAA,MAAM,EAAEQ,UAAU,CAACE,MAAX,KAAsB,CAAtB,GAA0BC,SAA1B,GAAsCH;AAFP,KAAtB,CAArB;AAKAX,IAAAA,OAAO,CAACe,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAEjB,QAAQ,CAACiB,QADV;AAETb,MAAAA,MAAM,EAAEF;AAFC,KAAb;AAKAJ,IAAAA,kBAAkB,CAACc,UAAD,CAAlB;AACH,GAZsC,EAYpC,GAZoC,CAAvC;AAcArB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,eAAe,CAACJ,MAAM,CAACK,MAAR,CAAf;AACH,GAFQ,EAEN,CAACL,MAAM,CAACK,MAAR,CAFM,CAAT;AAIA,sBACI,QAAC,KAAD,CAAO,MAAP;AAEI,IAAA,WAAW,EAAC,mCAFhB;AAGI,IAAA,QAAQ,EAAEO,sBAHd;AAII,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAJX;AAKI,IAAA,UAAU,MALd;AAMI,IAAA,KAAK,EAAEhB,YANX;AAOI,IAAA,QAAQ,EAAEK;AAPd,KACQ,QADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzCD;;GAAMV,W;UACqCD,gB,EACtBD,W,EACDD,U;;;KAHdG,W;AA2CN,kCAAeJ,IAAI,CAACI,WAAD,CAAnB","sourcesContent":["import { Input } from 'antd';\nimport * as queryString from 'query-string';\nimport { debounce } from 'lodash';\nimport React, { FC, useEffect, useState, memo } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { useCustomerTable } from './context';\n\nconst InputSearch: FC = () => {\n    const { changeFilterSearch, filter } = useCustomerTable();\n    const location = useLocation();\n    const history = useHistory();\n    const [searchString, setSearchString] = useState<string | undefined>(filter.search);\n\n    const searchObj = queryString.parse(location.search);\n\n    const onChangeText = (e: any) => {\n        setSearchString(e.target.value);\n    };\n\n    const handleChangeSearchText = debounce((searchText: string) => {\n        const searchString = queryString.stringify({\n            ...searchObj,\n            search: searchText.length === 0 ? undefined : searchText,\n        });\n\n        history.push({\n            pathname: location.pathname,\n            search: searchString,\n        });\n\n        changeFilterSearch(searchText);\n    }, 300);\n\n    useEffect(() => {\n        setSearchString(filter.search);\n    }, [filter.search]);\n\n    return (\n        <Input.Search\n            key=\"search\"\n            placeholder=\"Tìm kiếm khách hàng\"\n            onSearch={handleChangeSearchText}\n            style={{ width: 330 }}\n            allowClear\n            value={searchString}\n            onChange={onChangeText}\n        />\n    );\n};\n\nexport default memo(InputSearch);\n"]},"metadata":{},"sourceType":"module"}