{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account/components/add-staff/form-staff.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { pick, every, isNil } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport staffsApi from '../../../../../api/staff-api';\nimport { EUserRole } from '../../../../../models';\nimport { useStaffs } from '../../state';\nimport { listStaffs } from '../staff-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let EFormStaff;\n\n(function (EFormStaff) {\n  EFormStaff[EFormStaff[\"edit\"] = 1] = \"edit\";\n  EFormStaff[EFormStaff[\"new\"] = 2] = \"new\";\n})(EFormStaff || (EFormStaff = {}));\n\nconst requiredFields = ['name', 'email', 'password', 'role'];\n\nconst FormStaff = ({\n  toggle,\n  staff,\n  type = EFormStaff.new\n}) => {\n  _s();\n\n  const {\n    loadStaffs\n  } = useStaffs();\n  const [form] = useForm();\n  const store = useSelector(state => state.store.data);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(!staff);\n  const isEdit = type === EFormStaff.edit;\n\n  const createStaff = async values => {\n    try {\n      setLoading(true);\n      await staffsApi.createStaff(store._id, values);\n      loadStaffs(store._id);\n\n      if (toggle) {\n        toggle();\n      }\n\n      message.success('Tạo nhân viên mới thành công');\n    } catch (error) {\n      message.error('Lỗi tạo nhân viên mới');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const editStaff = async values => {\n    try {\n      setLoading(true);\n      await staffsApi.updateStaff(store._id, staff === null || staff === void 0 ? void 0 : staff._id, values);\n\n      if (toggle) {\n        toggle();\n      }\n\n      loadStaffs(store._id);\n      message.success('Chỉnh sửa nhân viên thành công');\n    } catch (error) {\n      message.error('Lỗi chỉnh sửa nhân viên');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFinish = async values => {\n    if (isEdit) {\n      editStaff(values);\n    } else {\n      createStaff(values);\n    }\n  };\n\n  const resetForm = () => {\n    form.resetFields();\n  };\n\n  const onFieldsChange = (changedFields, allFields) => {\n    const fields = allFields.filter(field => requiredFields.includes(field.name[0]));\n    const result = every(fields, field => {\n      var _field$errors;\n\n      return ((_field$errors = field.errors) === null || _field$errors === void 0 ? void 0 : _field$errors.length) === 0 && !isNil(field.value);\n    });\n    setDisabled(!result);\n  };\n\n  const initialValues = isEdit ? { ...pick(staff, ['name', 'role'])\n  } : {\n    role: 2\n  };\n  const listStaffRoleSelect = listStaffs.filter(item => item.role !== EUserRole.owner);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onFinish,\n    initialValues: initialValues,\n    layout: \"vertical\",\n    form: form,\n    onFieldsChange: onFieldsChange,\n    children: [!isEdit && /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      label: \"Email\",\n      validateTrigger: ['onBlur', 'onChange'],\n      rules: [{\n        required: true,\n        message: 'Điền địa chỉ email'\n      }, {\n        type: 'email',\n        message: 'Email không đúng'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u0110i\\u1EC1n \\u0111\\u1ECBa ch\\u1EC9 email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this), !isEdit && /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      validateTrigger: ['onBlur', 'onChange'],\n      label: \"M\\u1EADt kh\\u1EA9u\",\n      rules: [{\n        required: true,\n        message: 'Điền mật khẩu'\n      }, {\n        min: 6,\n        message: 'Mật khẩu phải lớn hơn 5 kí tự'\n      }, {\n        max: 15,\n        message: 'Mật khẩu phải nhỏ hơn 15 kí tự'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"\\u0110i\\u1EC1n m\\u1EADt kh\\u1EA9u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), isEdit ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"T\\xEAn nh\\xE2n vi\\xEAn\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"\\u0110i\\u1EC1n t\\xEAn nh\\xE2n vi\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // <Form.Item\n    //     name=\"name\"\n    //     label=\"Tên nhân viên\"\n    //     validateTrigger={['onBlur', 'onChange']}\n    //     rules={[\n    //         {\n    //             required: true,\n    //             message: 'Điền tên nhân viên',\n    //         },\n    //     ]}\n    // >\n    //     <Input placeholder=\"Điền tên nhân viên\" />\n    // </Form.Item>\n    _jsxDEV(_Fragment, {}, void 0, false), isEdit ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"role\",\n      label: \"Ch\\u1EE9c v\\u1EE5\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        children: listStaffRoleSelect.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: item.role,\n          disabled: item.role === EUserRole.owner,\n          children: item.title\n        }, item.role, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"role\",\n      label: \"Ch\\u1EE9c v\\u1EE5\",\n      validateTrigger: ['onBlur', 'onChange'],\n      rules: [{\n        required: true,\n        message: 'Chọn chức vụ'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        children: listStaffRoleSelect.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: item.role,\n          disabled: item.role === EUserRole.owner,\n          children: item.title\n        }, item.role, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"end\",\n        gutter: 15,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: resetForm,\n            children: \"H\\u1EE7y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: loading,\n            disabled: disabled,\n            children: \"L\\u01B0u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormStaff, \"T0ULWn3KhTidW21su1o6s36syms=\", false, function () {\n  return [useStaffs, useForm, useSelector];\n});\n\n_c = FormStaff;\nexport default FormStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormStaff\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account/components/add-staff/form-staff.tsx"],"names":["Button","Col","Form","Input","message","Row","Select","useForm","pick","every","isNil","React","useState","useSelector","staffsApi","EUserRole","useStaffs","listStaffs","EFormStaff","requiredFields","FormStaff","toggle","staff","type","new","loadStaffs","form","store","state","data","loading","setLoading","disabled","setDisabled","isEdit","edit","createStaff","values","_id","success","error","editStaff","updateStaff","onFinish","resetForm","resetFields","onFieldsChange","changedFields","allFields","fields","filter","field","includes","name","result","errors","length","value","initialValues","role","listStaffRoleSelect","item","owner","required","min","max","map","title"],"mappings":"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","sourcesContent":["import { Button, Col, Form, Input, message, Row, Select } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport { pick, every, isNil } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport staffsApi from '../../../../../api/staff-api';\nimport { EUserRole, IStaff } from '../../../../../models';\nimport { IState } from '../../../../../store/rootReducer';\nimport { useStaffs } from '../../state';\nimport { listStaffs } from '../staff-table';\n\nexport enum EFormStaff {\n    edit = 1,\n    new,\n}\n\ninterface Props {\n    toggle?: Function;\n    type?: EFormStaff;\n    staff?: IStaff;\n}\n\ninterface FormData {\n    name: string;\n    email: string;\n    password: string;\n    role: EUserRole;\n}\n\ninterface FieldData {\n    name: string | number | (string | number)[];\n    value?: any;\n    touched?: boolean;\n    validating?: boolean;\n    errors?: string[];\n}\n\nconst requiredFields = ['name', 'email', 'password', 'role'];\n\nconst FormStaff: FC<Props> = ({ toggle, staff, type = EFormStaff.new }) => {\n    const { loadStaffs } = useStaffs();\n    const [form] = useForm();\n    const store = useSelector((state: IState) => state.store.data);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [disabled, setDisabled] = useState<boolean>(!staff);\n\n    const isEdit = type === EFormStaff.edit;\n\n    const createStaff = async (values: FormData) => {\n        try {\n            setLoading(true);\n\n            await staffsApi.createStaff(store._id as string, values);\n            loadStaffs(store._id);\n\n            if (toggle) {\n                toggle();\n            }\n\n            message.success('Tạo nhân viên mới thành công');\n        } catch (error) {\n            message.error('Lỗi tạo nhân viên mới');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const editStaff = async (values: FormData) => {\n        try {\n            setLoading(true);\n\n            await staffsApi.updateStaff(store._id as string, staff?._id as string, values);\n\n            if (toggle) {\n                toggle();\n            }\n\n            loadStaffs(store._id);\n\n            message.success('Chỉnh sửa nhân viên thành công');\n        } catch (error) {\n            message.error('Lỗi chỉnh sửa nhân viên');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const onFinish = async (values: FormData) => {\n        if (isEdit) {\n            editStaff(values);\n        } else {\n            createStaff(values);\n        }\n    };\n\n    const resetForm = () => {\n        form.resetFields();\n    };\n\n    const onFieldsChange = (changedFields: FieldData[], allFields: FieldData[]) => {\n        const fields = allFields.filter((field: FieldData) =>\n            requiredFields.includes((field.name as string[])[0])\n        );\n\n        const result = every(\n            fields,\n            (field: FieldData) => field.errors?.length === 0 && !isNil(field.value)\n        );\n\n        setDisabled(!result);\n    };\n\n    const initialValues = isEdit\n        ? {\n              ...pick(staff, ['name', 'role']),\n          }\n        : { role: 2 };\n\n    const listStaffRoleSelect = listStaffs.filter((item) => item.role !== EUserRole.owner);\n\n    return (\n        <Form\n            onFinish={onFinish}\n            initialValues={initialValues}\n            layout=\"vertical\"\n            form={form}\n            onFieldsChange={onFieldsChange}\n        >\n            {!isEdit && (\n                <Form.Item\n                    name=\"email\"\n                    label=\"Email\"\n                    validateTrigger={['onBlur', 'onChange']}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Điền địa chỉ email',\n                        },\n                        {\n                            type: 'email',\n                            message: 'Email không đúng',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Điền địa chỉ email\" />\n                </Form.Item>\n            )}\n\n            {!isEdit && (\n                <Form.Item\n                    name=\"password\"\n                    validateTrigger={['onBlur', 'onChange']}\n                    label=\"Mật khẩu\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Điền mật khẩu',\n                        },\n                        {\n                            min: 6,\n                            message: 'Mật khẩu phải lớn hơn 5 kí tự',\n                        },\n                        {\n                            max: 15,\n                            message: 'Mật khẩu phải nhỏ hơn 15 kí tự',\n                        },\n                    ]}\n                >\n                    <Input.Password placeholder=\"Điền mật khẩu\" />\n                </Form.Item>\n            )}\n\n            {isEdit ? (\n                <Form.Item name=\"name\" label=\"Tên nhân viên\">\n                    <Input placeholder=\"Điền tên nhân viên\" />\n                </Form.Item>\n            ) : (\n                // <Form.Item\n                //     name=\"name\"\n                //     label=\"Tên nhân viên\"\n                //     validateTrigger={['onBlur', 'onChange']}\n                //     rules={[\n                //         {\n                //             required: true,\n                //             message: 'Điền tên nhân viên',\n                //         },\n                //     ]}\n                // >\n                //     <Input placeholder=\"Điền tên nhân viên\" />\n                // </Form.Item>\n                <></>\n            )}\n\n            {isEdit ? (\n                <Form.Item name=\"role\" label=\"Chức vụ\">\n                    <Select>\n                        {listStaffRoleSelect.map((item) => (\n                            <Select.Option\n                                key={item.role}\n                                value={item.role}\n                                disabled={item.role === EUserRole.owner}\n                            >\n                                {item.title}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n            ) : (\n                <Form.Item\n                    name=\"role\"\n                    label=\"Chức vụ\"\n                    validateTrigger={['onBlur', 'onChange']}\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Chọn chức vụ',\n                        },\n                    ]}\n                >\n                    <Select>\n                        {listStaffRoleSelect.map((item) => (\n                            <Select.Option\n                                key={item.role}\n                                value={item.role}\n                                disabled={item.role === EUserRole.owner}\n                            >\n                                {item.title}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n            )}\n\n            <Form.Item>\n                <Row justify=\"end\" gutter={15}>\n                    <Col>\n                        <Button onClick={resetForm}>Hủy</Button>\n                    </Col>\n                    <Col>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            loading={loading}\n                            disabled={disabled}\n                        >\n                            Lưu\n                        </Button>\n                    </Col>\n                </Row>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default FormStaff;\n"]},"metadata":{},"sourceType":"module"}