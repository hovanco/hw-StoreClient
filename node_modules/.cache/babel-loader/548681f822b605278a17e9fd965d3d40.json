{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/detail/state/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport orderApi from '../../../../api/order-api';\nimport { Loading } from '../../../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext({\n  loading: true,\n  order: undefined,\n  setOrder: () => {}\n});\n\nconst ProviderDeliveryDetail = ({\n  children\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const [loading, setLoading] = useState(true);\n  const [order, setOrder] = useState();\n  const params = useParams();\n  const loadOrder = useCallback(async orderId => {\n    try {\n      setLoading(true);\n      const response = await orderApi.getOrderDetail({\n        storeId: store._id,\n        orderId\n      });\n      setOrder(response);\n    } catch (error) {} finally {\n      setLoading(false);\n    }\n  }, [store._id]);\n  useEffect(() => {\n    if (params.id) {\n      loadOrder(params.id);\n    }\n  }, []);\n  const value = useMemo(() => ({\n    order,\n    loading,\n    setOrder\n  }), [order, loading, setOrder]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProviderDeliveryDetail, \"hdbAUlQcmNMKwHaOGiQ81wITHZQ=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = ProviderDeliveryDetail;\n\nconst useDeliveryDetail = () => {\n  _s2();\n\n  const value = useContext(Context);\n  return { ...value\n  };\n};\n\n_s2(useDeliveryDetail, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\n\nexport { ProviderDeliveryDetail, useDeliveryDetail };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderDeliveryDetail\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/detail/state/context.tsx"],"names":["React","createContext","useCallback","useContext","useEffect","useMemo","useState","useSelector","useParams","orderApi","Loading","Context","loading","order","undefined","setOrder","ProviderDeliveryDetail","children","store","state","data","setLoading","params","loadOrder","orderId","response","getOrderDetail","storeId","_id","error","id","value","useDeliveryDetail"],"mappings":";;;;AAAA,OAAOA,KAAP,IACIC,aADJ,EAIIC,WAJJ,EAKIC,UALJ,EAMIC,SANJ,EAOIC,OAPJ,EAQIC,QARJ,QASO,OATP;AAUA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAUA,MAAMC,OAAO,gBAAGV,aAAa,CAAW;AACpCW,EAAAA,OAAO,EAAE,IAD2B;AAEpCC,EAAAA,KAAK,EAAEC,SAF6B;AAGpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHkB,CAAX,CAA7B;;AAaA,MAAMC,sBAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxD,QAAMC,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAmBA,KAAK,CAACD,KAAN,CAAYE,IAAhC,CAAzB;AACA,QAAM,CAACR,OAAD,EAAUS,UAAV,IAAwBf,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQE,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAMgB,MAAM,GAAGd,SAAS,EAAxB;AAEA,QAAMe,SAAS,GAAGrB,WAAW,CACzB,MAAOsB,OAAP,IAA2B;AACvB,QAAI;AACAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,QAAQ,GAAG,MAAMhB,QAAQ,CAACiB,cAAT,CAAwB;AAC3CC,QAAAA,OAAO,EAAET,KAAK,CAACU,GAD4B;AAE3CJ,QAAAA;AAF2C,OAAxB,CAAvB;AAKAT,MAAAA,QAAQ,CAACU,QAAD,CAAR;AACH,KARD,CAQE,OAAOI,KAAP,EAAc,CACf,CATD,SASU;AACNR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAdwB,EAezB,CAACH,KAAK,CAACU,GAAP,CAfyB,CAA7B;AAkBAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,MAAM,CAACQ,EAAX,EAAe;AACXP,MAAAA,SAAS,CAACD,MAAM,CAACQ,EAAR,CAAT;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,KAAK,GAAG1B,OAAO,CAAC,OAAO;AAAEQ,IAAAA,KAAF;AAASD,IAAAA,OAAT;AAAkBG,IAAAA;AAAlB,GAAP,CAAD,EAAuC,CAACF,KAAD,EAAQD,OAAR,EAAiBG,QAAjB,CAAvC,CAArB;;AAEA,MAAIH,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAS,MAAA,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEmB,KAAzB;AAAA,cAAiCd;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArCD;;GAAMD,sB;UACYT,W,EAGCC,S;;;KAJbQ,sB;;AAuCN,MAAMgB,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAMD,KAAK,GAAG5B,UAAU,CAACQ,OAAD,CAAxB;AACA,SAAO,EACH,GAAGoB;AADA,GAAP;AAGH,CALD;;IAAMC,iB;;AAON,SAAShB,sBAAT,EAAiCgB,iBAAjC","sourcesContent":["import React, {\n    createContext,\n    FC,\n    ReactNode,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport orderApi from '../../../../api/order-api';\nimport { Loading } from '../../../../components';\nimport { IOrder } from '../../../../models';\nimport { IState } from '../../../../store/rootReducer';\n\ninterface IContext {\n    loading: boolean;\n    order?: IOrder;\n    setOrder: React.Dispatch<any>;\n}\n\nconst Context = createContext<IContext>({\n    loading: true,\n    order: undefined,\n    setOrder: () => {},\n});\n\ninterface Props {\n    children: ReactNode;\n}\ninterface IParams {\n    id?: string;\n}\n\nconst ProviderDeliveryDetail: FC<Props> = ({ children }) => {\n    const store = useSelector((state: IState) => state.store.data);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [order, setOrder] = useState<IOrder>();\n    const params = useParams<IParams>();\n\n    const loadOrder = useCallback(\n        async (orderId: string) => {\n            try {\n                setLoading(true);\n                const response = await orderApi.getOrderDetail({\n                    storeId: store._id as string,\n                    orderId,\n                });\n\n                setOrder(response);\n            } catch (error) {\n            } finally {\n                setLoading(false);\n            }\n        },\n        [store._id]\n    );\n\n    useEffect(() => {\n        if (params.id) {\n            loadOrder(params.id);\n        }\n    }, []);\n\n    const value = useMemo(() => ({ order, loading, setOrder }), [order, loading, setOrder]);\n\n    if (loading) {\n        return <Loading full />;\n    }\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n};\n\nconst useDeliveryDetail = () => {\n    const value = useContext(Context);\n    return {\n        ...value,\n    };\n};\n\nexport { ProviderDeliveryDetail, useDeliveryDetail };\n"]},"metadata":{},"sourceType":"module"}