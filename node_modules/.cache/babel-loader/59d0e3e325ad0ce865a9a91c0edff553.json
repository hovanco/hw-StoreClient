{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/product-form-properties/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Checkbox, Form } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { ProductContextProvider } from '../../context/context';\nimport SelectAttributes from './select-attributes';\nimport TableProductVariant from './table-product-variant';\nimport TableQuantityProduct from './table-quantity-product';\nimport UpdateQuantityProduct from './update-quantity-product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductFormProperties = ({\n  form,\n  quantity,\n  setQuantity,\n  isEdit = true\n}) => {\n  _s();\n\n  const [quantityLocal, setQuantityLocal] = useState([]);\n  const [checked, setChecked] = useState(false);\n  useEffect(() => {\n    if (quantity) {\n      setQuantityLocal(quantity);\n    }\n  }, [quantity]);\n  useEffect(() => {\n    var _form$getFieldValue, _form$getFieldValue2;\n\n    if (((_form$getFieldValue = form.getFieldValue('attributes')) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.length) || ((_form$getFieldValue2 = form.getFieldValue('variants')) === null || _form$getFieldValue2 === void 0 ? void 0 : _form$getFieldValue2.length)) {\n      setChecked(true);\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const onCheckboxChange = e => {\n    setChecked(e.target.checked);\n  };\n\n  const changeStockUpdate = value => {\n    const newValue = quantityLocal.map(i => {\n      if (i.warehouseId === value.warehouseId) {\n        return { ...i,\n          quantity: value.quantity\n        };\n      }\n\n      return i;\n    });\n    setQuantityLocal(newValue); // setQuantity(newValue);\n\n    form.setFieldsValue({\n      stocks: newValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!checked && /*#__PURE__*/_jsxDEV(Card, {\n      title: \"S\\u1ED1 l\\u01B0\\u1EE3ng\",\n      size: \"small\",\n      bodyStyle: {\n        padding: 0\n      },\n      extra: !isEdit ? /*#__PURE__*/_jsxDEV(UpdateQuantityProduct, {\n        quantity: quantity || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this) : null,\n      children: /*#__PURE__*/_jsxDEV(TableQuantityProduct, {\n        quantity: quantity || [],\n        isEdit: isEdit,\n        changeStockUpdate: changeStockUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Thu\\u1ED9c t\\xEDnh\",\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        noStyle: true,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: onCheckboxChange,\n          indeterminate: checked,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"S\\u1EA3n ph\\u1EA9m c\\xF3 nhi\\u1EC1u phi\\xEAn b\\u1EA3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), checked && /*#__PURE__*/_jsxDEV(ProductContextProvider, {\n        isCreateMode: true,\n        form: form,\n        children: [/*#__PURE__*/_jsxDEV(SelectAttributes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableProductVariant, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductFormProperties, \"37OKC4v/GM3CFAyhXGuHWcTFzhI=\");\n\n_c = ProductFormProperties;\nexport default ProductFormProperties;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductFormProperties\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/product-form-properties/index.tsx"],"names":["Card","Checkbox","Form","React","useEffect","useState","ProductContextProvider","SelectAttributes","TableProductVariant","TableQuantityProduct","UpdateQuantityProduct","ProductFormProperties","form","quantity","setQuantity","isEdit","quantityLocal","setQuantityLocal","checked","setChecked","getFieldValue","length","onCheckboxChange","e","target","changeStockUpdate","value","newValue","map","i","warehouseId","setFieldsValue","stocks","padding"],"mappings":"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","sourcesContent":["import { Card, Checkbox, Form } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport React, { FC, useEffect, useState } from 'react';\nimport { IStock } from '../../../../models';\nimport { ProductContextProvider } from '../../context/context';\nimport SelectAttributes from './select-attributes';\nimport TableProductVariant from './table-product-variant';\nimport TableQuantityProduct from './table-quantity-product';\nimport UpdateQuantityProduct from './update-quantity-product';\n\ninterface Props {\n    form: FormInstance;\n    quantity?: any[];\n    setQuantity: (value: any[]) => void;\n    isEdit?: boolean;\n}\n\nconst ProductFormProperties: FC<Props> = ({ form, quantity, setQuantity, isEdit = true }) => {\n    const [quantityLocal, setQuantityLocal] = useState<any[]>([]);\n    const [checked, setChecked] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (quantity) {\n            setQuantityLocal(quantity);\n        }\n    }, [quantity]);\n\n    useEffect(() => {\n        if (form.getFieldValue('attributes')?.length || form.getFieldValue('variants')?.length) {\n            setChecked(true);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    const onCheckboxChange = (e: any) => {\n        setChecked(e.target.checked);\n    };\n\n    const changeStockUpdate = (value: any) => {\n        const newValue = quantityLocal.map((i: IStock) => {\n            if (i.warehouseId === value.warehouseId) {\n                return { ...i, quantity: value.quantity };\n            }\n\n            return i;\n        });\n\n        setQuantityLocal(newValue);\n        // setQuantity(newValue);\n\n        form.setFieldsValue({\n            stocks: newValue,\n        });\n    };\n\n    return (\n        <>\n            {!checked && (\n                <Card\n                    title=\"Số lượng\"\n                    size=\"small\"\n                    bodyStyle={{ padding: 0 }}\n                    extra={!isEdit ? <UpdateQuantityProduct quantity={quantity || []} /> : null}\n                >\n                    <TableQuantityProduct\n                        quantity={quantity || []}\n                        isEdit={isEdit}\n                        changeStockUpdate={changeStockUpdate}\n                    />\n                </Card>\n            )}\n\n            <Card title=\"Thuộc tính\" size=\"small\">\n                <Form.Item noStyle>\n                    <Checkbox onChange={onCheckboxChange} indeterminate={checked}>\n                        <b>Sản phẩm có nhiều phiên bản</b>\n                    </Checkbox>\n                </Form.Item>\n\n                {checked && (\n                    <ProductContextProvider isCreateMode form={form}>\n                        <SelectAttributes />\n                        <TableProductVariant />\n                    </ProductContextProvider>\n                )}\n            </Card>\n        </>\n    );\n};\n\nexport default ProductFormProperties;\n"]},"metadata":{},"sourceType":"module"}