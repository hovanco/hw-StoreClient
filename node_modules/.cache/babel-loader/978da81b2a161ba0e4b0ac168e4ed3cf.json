{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/components/select-time/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { DatePicker, Select, Space } from 'antd';\nimport moment from 'moment';\nimport React from 'react';\nimport useVisible from '../../hook/useVisible';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ETypeTime;\n\n(function (ETypeTime) {\n  ETypeTime[ETypeTime[\"today\"] = 0] = \"today\";\n  ETypeTime[ETypeTime[\"yesterday\"] = 1] = \"yesterday\";\n  ETypeTime[ETypeTime[\"seven_days_ago\"] = 2] = \"seven_days_ago\";\n  ETypeTime[ETypeTime[\"month\"] = 3] = \"month\";\n  ETypeTime[ETypeTime[\"custom\"] = 4] = \"custom\";\n})(ETypeTime || (ETypeTime = {}));\n\nconst times = [{\n  type: ETypeTime.today,\n  title: 'Hôm nay'\n}, {\n  type: ETypeTime.yesterday,\n  title: 'Hôm qua'\n}, {\n  type: ETypeTime.seven_days_ago,\n  title: '7 ngày trước'\n}, {\n  type: ETypeTime.month,\n  title: 'Tháng này'\n}, {\n  type: ETypeTime.custom,\n  title: 'Tùy chọn'\n}];\n\nconst SelectTime = ({\n  value = ETypeTime.month,\n  onChange\n}) => {\n  _s();\n\n  const {\n    visible,\n    setVisible\n  } = useVisible();\n\n  const selectTypeTime = typeTime => {\n    if (typeTime === ETypeTime.custom) {\n      setVisible(true);\n    } else {\n      onChange({\n        typeTime\n      });\n      setVisible(false);\n    }\n  };\n\n  const selectDates = dates => {\n    if (!dates) {\n      return;\n    }\n\n    const formatDates = dates.map(date => moment(date).valueOf());\n    onChange({\n      typeTime: ETypeTime.custom,\n      times: formatDates\n    });\n  };\n\n  const style = {\n    minWidth: 120\n  };\n  return /*#__PURE__*/_jsxDEV(Space, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      style: style,\n      defaultValue: value,\n      onChange: selectTypeTime,\n      children: times.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: item.type,\n        children: item.title\n      }, item.type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(DatePicker.RangePicker, {\n      onChange: selectDates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectTime, \"hcE37Mcus/INY1exof69G/3K/Jw=\", false, function () {\n  return [useVisible];\n});\n\n_c = SelectTime;\nexport default SelectTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTime\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/components/select-time/index.tsx"],"names":["DatePicker","Select","Space","moment","React","useVisible","ETypeTime","times","type","today","title","yesterday","seven_days_ago","month","custom","SelectTime","value","onChange","visible","setVisible","selectTypeTime","typeTime","selectDates","dates","formatDates","map","date","valueOf","style","minWidth","item"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,MAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AAaZ,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,IAAI,EAAEF,SAAS,CAACG,KADpB;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADU,EAKV;AACIF,EAAAA,IAAI,EAAEF,SAAS,CAACK,SADpB;AAEID,EAAAA,KAAK,EAAE;AAFX,CALU,EASV;AACIF,EAAAA,IAAI,EAAEF,SAAS,CAACM,cADpB;AAEIF,EAAAA,KAAK,EAAE;AAFX,CATU,EAcV;AACIF,EAAAA,IAAI,EAAEF,SAAS,CAACO,KADpB;AAEIH,EAAAA,KAAK,EAAE;AAFX,CAdU,EAmBV;AACIF,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MADpB;AAEIJ,EAAAA,KAAK,EAAE;AAFX,CAnBU,CAAd;;AAyBA,MAAMK,UAAqB,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAGV,SAAS,CAACO,KAApB;AAA2BI,EAAAA;AAA3B,CAAD,KAA2C;AAAA;;AACrE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0Bd,UAAU,EAA1C;;AAEA,QAAMe,cAAc,GAAIC,QAAD,IAAyB;AAC5C,QAAIA,QAAQ,KAAKf,SAAS,CAACQ,MAA3B,EAAmC;AAC/BK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD,MAEO;AACHF,MAAAA,QAAQ,CAAC;AACLI,QAAAA;AADK,OAAD,CAAR;AAGAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GATD;;AAWA,QAAMG,WAAW,GAAIC,KAAD,IAAgB;AAChC,QAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,UAAMC,WAAW,GAAGD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAyBvB,MAAM,CAACuB,IAAD,CAAN,CAAaC,OAAb,EAAnC,CAApB;AAEAV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,QAAQ,EAAEf,SAAS,CAACQ,MADf;AAELP,MAAAA,KAAK,EAAEiB;AAFF,KAAD,CAAR;AAIH,GAVD;;AAYA,QAAMI,KAAK,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAd;AAEA,sBACI,QAAC,KAAD;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAED,KAAf;AAAsB,MAAA,YAAY,EAAEZ,KAApC;AAA2C,MAAA,QAAQ,EAAEI,cAArD;AAAA,gBACKb,KAAK,CAACkB,GAAN,CAAWK,IAAD,iBACP,QAAC,MAAD,CAAQ,MAAR;AAA+B,QAAA,KAAK,EAAEA,IAAI,CAACtB,IAA3C;AAAA,kBACKsB,IAAI,CAACpB;AADV,SAAoBoB,IAAI,CAACtB,IAAzB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EASKU,OAAO,iBAAI,QAAC,UAAD,CAAY,WAAZ;AAAwB,MAAA,QAAQ,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,YAThB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzCD;;GAAMP,U;UAC8BV,U;;;KAD9BU,U;AA2CN,eAAeA,UAAf","sourcesContent":["import { DatePicker, Select, Space } from 'antd';\nimport moment from 'moment';\nimport React, { FC } from 'react';\nimport useVisible from '../../hook/useVisible';\n\nexport enum ETypeTime {\n    today = 0,\n    yesterday,\n    seven_days_ago,\n    month,\n    custom,\n}\n\ninterface Props {\n    value?: ETypeTime;\n    onChange: ({ typeTime, times }: { typeTime: ETypeTime; times?: number[] }) => void;\n}\n\nconst times = [\n    {\n        type: ETypeTime.today,\n        title: 'Hôm nay',\n    },\n    {\n        type: ETypeTime.yesterday,\n        title: 'Hôm qua',\n    },\n    {\n        type: ETypeTime.seven_days_ago,\n        title: '7 ngày trước',\n    },\n\n    {\n        type: ETypeTime.month,\n        title: 'Tháng này',\n    },\n\n    {\n        type: ETypeTime.custom,\n        title: 'Tùy chọn',\n    },\n];\n\nconst SelectTime: FC<Props> = ({ value = ETypeTime.month, onChange }) => {\n    const { visible, setVisible } = useVisible();\n\n    const selectTypeTime = (typeTime: ETypeTime) => {\n        if (typeTime === ETypeTime.custom) {\n            setVisible(true);\n        } else {\n            onChange({\n                typeTime,\n            });\n            setVisible(false);\n        }\n    };\n\n    const selectDates = (dates: any) => {\n        if (!dates) {\n            return;\n        }\n        const formatDates = dates.map((date: moment.Moment) => moment(date).valueOf());\n\n        onChange({\n            typeTime: ETypeTime.custom,\n            times: formatDates,\n        });\n    };\n\n    const style = { minWidth: 120 };\n\n    return (\n        <Space>\n            <Select style={style} defaultValue={value} onChange={selectTypeTime}>\n                {times.map((item: any) => (\n                    <Select.Option key={item.type} value={item.type}>\n                        {item.title}\n                    </Select.Option>\n                ))}\n            </Select>\n\n            {visible && <DatePicker.RangePicker onChange={selectDates} />}\n        </Space>\n    );\n};\n\nexport default SelectTime;\n"]},"metadata":{},"sourceType":"module"}