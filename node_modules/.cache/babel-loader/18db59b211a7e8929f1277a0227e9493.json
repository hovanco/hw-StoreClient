{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/components/select-transport-status/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { message, Select } from 'antd';\nimport { get } from 'lodash';\nimport React, { memo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../api/order-api';\nimport { ORDER_STATUS } from '../../../../models';\nimport { statusSelfTransport, statusServiceTransport } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransportStatus = ({\n  order,\n  updateOrder\n}) => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const [loading, setLoading] = useState(false);\n  const serviceId = get(order, 'deliveryOptions.serviceId');\n  const transportStatus = get(order, 'deliveryOptions.transportStatus');\n\n  const changeStatusTranspost = async value => {\n    if (!serviceId) {\n      setLoading(true);\n\n      try {\n        const response = await orderApi.updateOrder({\n          storeId: store._id,\n          orderId: order._id,\n          data: {\n            status: Number(value)\n          }\n        });\n        message.success('Cập nhật trạng thái vận chuyển thành công');\n        updateOrder(response);\n      } catch (error) {\n        message.error('Đã xảy ra lỗi, vui lòng thử lại');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const options = !!serviceId ? statusServiceTransport : statusSelfTransport;\n  const value = !!serviceId ? transportStatus || 'root' : order.status || 0;\n  return /*#__PURE__*/_jsxDEV(Select, {\n    style: {\n      width: '100%'\n    },\n    value: value,\n    loading: loading,\n    disabled: !!serviceId,\n    onChange: changeStatusTranspost,\n    children: [!!serviceId && /*#__PURE__*/_jsxDEV(Select.Option, {\n      value: \"root\",\n      disabled: true,\n      children: \"Ch\\u01B0a giao h\\xE0ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), options.map(item => {\n      const disabled = !serviceId && !!order.paidAt && [ORDER_STATUS.CANCELED, ORDER_STATUS.RETURNED].includes(item.value);\n      return /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: item.value,\n        disabled: disabled,\n        children: item.label\n      }, item.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransportStatus, \"Y3QYxz0KtJ8SM2KMjY7K42bYiL0=\", false, function () {\n  return [useSelector];\n});\n\n_c = TransportStatus;\nexport default _c2 = /*#__PURE__*/memo(TransportStatus);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TransportStatus\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/delivery/components/select-transport-status/index.tsx"],"names":["message","Select","get","React","memo","useState","useSelector","orderApi","ORDER_STATUS","statusSelfTransport","statusServiceTransport","TransportStatus","order","updateOrder","store","state","data","loading","setLoading","serviceId","transportStatus","changeStatusTranspost","value","response","storeId","_id","orderId","status","Number","success","error","options","width","map","item","disabled","paidAt","CANCELED","RETURNED","includes","label"],"mappings":"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","sourcesContent":["import { message, Select } from 'antd';\nimport { get } from 'lodash';\nimport React, { FC, memo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../api/order-api';\nimport { IOrder, ORDER_STATUS } from '../../../../models';\nimport { IState } from '../../../../store/rootReducer';\nimport { statusSelfTransport, statusServiceTransport } from '../../constants';\ninterface Props {\n    order: IOrder;\n    updateOrder: Function;\n}\n\nconst TransportStatus: FC<Props> = ({ order, updateOrder }) => {\n    const store = useSelector((state: IState) => state.store.data);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const serviceId = get(order, 'deliveryOptions.serviceId');\n    const transportStatus = get(order, 'deliveryOptions.transportStatus');\n\n    const changeStatusTranspost = async (value: any) => {\n        if (!serviceId) {\n            setLoading(true);\n            try {\n                const response = await orderApi.updateOrder({\n                    storeId: store._id as string,\n                    orderId: order._id,\n                    data: {\n                        status: Number(value),\n                    },\n                });\n                message.success('Cập nhật trạng thái vận chuyển thành công');\n                updateOrder(response);\n            } catch (error) {\n                message.error('Đã xảy ra lỗi, vui lòng thử lại');\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    const options = !!serviceId ? statusServiceTransport : statusSelfTransport;\n    const value = !!serviceId ? transportStatus || 'root' : order.status || 0;\n\n    return (\n        <Select\n            style={{ width: '100%' }}\n            value={value}\n            loading={loading}\n            disabled={!!serviceId}\n            onChange={changeStatusTranspost}\n        >\n            {!!serviceId && (\n                <Select.Option value=\"root\" disabled>\n                    Chưa giao hàng\n                </Select.Option>\n            )}\n\n            {options.map((item) => {\n                const disabled =\n                    !serviceId &&\n                    !!order.paidAt &&\n                    [ORDER_STATUS.CANCELED, ORDER_STATUS.RETURNED].includes(\n                        item.value as ORDER_STATUS\n                    );\n\n                return (\n                    <Select.Option value={item.value} key={item.value} disabled={disabled}>\n                        {item.label}\n                    </Select.Option>\n                );\n            })}\n        </Select>\n    );\n};\n\nexport default memo(TransportStatus);\n"]},"metadata":{},"sourceType":"module"}