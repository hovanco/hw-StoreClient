{"ast":null,"code":"import types from './authTypes';\nconst initialState = {\n  loading: true,\n  isAuth: false,\n  isLogout: false,\n  token: {},\n  user: {}\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case types.LOGIN_SUCCESSS:\n      return { ...state,\n        token: action.payload,\n        loading: false,\n        isAuth: true,\n        isLogout: false\n      };\n\n    case types.UPDATE_TOKEN:\n      const {\n        accessToken,\n        type\n      } = action.payload;\n      return { ...state,\n        token: { ...state.token,\n          accessToken,\n          type\n        }\n      };\n\n    case types.LOAD_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        isAuth: true,\n        user: action.payload\n      };\n\n    case types.LOAD_USER_FAILED:\n      return { ...initialState,\n        loading: false\n      };\n\n    case types.LOGOUT:\n    case types.LOGIN_FAILED:\n      return { ...initialState,\n        loading: false,\n        isLogout: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/reducers/authState/authReducer.ts"],"names":["types","initialState","loading","isAuth","isLogout","token","user","authReducer","state","action","type","LOADING","LOGIN_SUCCESSS","payload","UPDATE_TOKEN","accessToken","LOAD_USER_SUCCESS","LOAD_USER_FAILED","LOGOUT","LOGIN_FAILED"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAyBA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,MAAM,EAAE,KAFS;AAGjBC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAA0D;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,OAAX;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYN,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEJ,SAAKF,KAAK,CAACY,cAAX;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAFX;AAGHX,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,MAAM,EAAE,IAJL;AAKHC,QAAAA,QAAQ,EAAE;AALP,OAAP;;AAQJ,SAAKJ,KAAK,CAACc,YAAX;AACI,YAAM;AAAEC,QAAAA,WAAF;AAAeL,QAAAA;AAAf,UAAwBD,MAAM,CAACI,OAArC;AACA,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,KAAK,EAAE,EAAE,GAAGG,KAAK,CAACH,KAAX;AAAkBU,UAAAA,WAAlB;AAA+BL,UAAAA;AAA/B;AAFJ,OAAP;;AAKJ,SAAKV,KAAK,CAACgB,iBAAX;AACI,aAAO,EACH,GAAGR,KADA;AAEHN,QAAAA,OAAO,EAAE,KAFN;AAGHC,QAAAA,MAAM,EAAE,IAHL;AAIHG,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAJV,OAAP;;AAOJ,SAAKb,KAAK,CAACiB,gBAAX;AACI,aAAO,EACH,GAAGhB,YADA;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKF,KAAK,CAACkB,MAAX;AACA,SAAKlB,KAAK,CAACmB,YAAX;AACI,aAAO,EACH,GAAGlB,YADA;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGHE,QAAAA,QAAQ,EAAE;AAHP,OAAP;;AAMJ;AACI,aAAOI,KAAP;AA3CR;AA6CH,CA9CD;;AAgDA,eAAeD,WAAf","sourcesContent":["import types from './authTypes';\n\ninterface IAction {\n    type: string;\n    payload: any;\n}\n\ninterface Token {}\n\nexport interface User {\n    _id?: string;\n    name?: string;\n    picture?: string;\n    phoneNo?: string;\n    permissions?: string[];\n}\n\nexport interface IStorageState {\n    loading: boolean;\n    isAuth: boolean;\n    isLogout: boolean;\n    token: Token;\n    user: User;\n}\n\nconst initialState = {\n    loading: true,\n    isAuth: false,\n    isLogout: false,\n    token: {},\n    user: {},\n};\n\nconst authReducer = (state = initialState, action: IAction): IStorageState => {\n    switch (action.type) {\n        case types.LOADING:\n            return { ...state, loading: true };\n\n        case types.LOGIN_SUCCESSS:\n            return {\n                ...state,\n                token: action.payload,\n                loading: false,\n                isAuth: true,\n                isLogout: false,\n            };\n\n        case types.UPDATE_TOKEN:\n            const { accessToken, type } = action.payload;\n            return {\n                ...state,\n                token: { ...state.token, accessToken, type },\n            };\n\n        case types.LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuth: true,\n                user: action.payload,\n            };\n\n        case types.LOAD_USER_FAILED:\n            return {\n                ...initialState,\n                loading: false,\n            };\n\n        case types.LOGOUT:\n        case types.LOGIN_FAILED:\n            return {\n                ...initialState,\n                loading: false,\n                isLogout: true,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}