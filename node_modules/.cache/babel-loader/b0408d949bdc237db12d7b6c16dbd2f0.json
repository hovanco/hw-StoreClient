{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/variant-form/attribute-item.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Col, Typography, Select, Space } from 'antd';\nimport iconClose from \"../../../../assets/images/ic-close.svg\";\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttributeItem = ({\n  attribute,\n  updateAttribute\n}) => {\n  _s();\n\n  const listAttribute = useSelector(state => state.store.attributes.data);\n  const suggestTags = useMemo(() => {\n    var _listAttribute$filter;\n\n    return ((_listAttribute$filter = listAttribute.filter(i => attribute._id === i._id)[0]) === null || _listAttribute$filter === void 0 ? void 0 : _listAttribute$filter.tags) || [];\n  }, [attribute, listAttribute]);\n\n  const changeAttributeTags = tags => updateAttribute({ ...attribute,\n    tags\n  });\n\n  const addTag = tag => {\n    if (attribute.tags.includes(tag)) return;\n    let newTags = [];\n    newTags.push(tag);\n    changeAttributeTags([...newTags]);\n  };\n\n  const removeTag = tag => {\n    if (!attribute.tags.includes(tag)) return;\n    let newTags = attribute.tags ? [...attribute.tags] : [];\n    newTags = newTags.filter(item => item !== tag);\n    changeAttributeTags([...newTags]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      className: \"select-attributes\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        mode: \"tags\",\n        onChange: changeAttributeTags,\n        placeholder: \"Please select\",\n        value: attribute.tags,\n        className: \"prod-form-properties__select\",\n        dropdownStyle: {\n          display: 'none'\n        },\n        tagRender: ({\n          label\n        }) => /*#__PURE__*/_jsxDEV(Space, {\n          className: \"prod-form-properties__tag\",\n          children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: iconClose,\n            alt: \"\",\n            onClick: () => removeTag(label)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), suggestTags.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggest-tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nh\\xE3n \\u0111\\xE3 c\\xF3: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag-list\",\n          children: suggestTags.map((tag, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `tag${attribute.tags.includes(tag) ? ' disabled' : ''}`,\n            onClick: () => addTag(tag),\n            children: tag\n          }, `suggest-tag-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttributeItem, \"BDmnXubrN/WBGEYSDSHbEVTf+fU=\", false, function () {\n  return [useSelector];\n});\n\n_c = AttributeItem;\nexport default AttributeItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttributeItem\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/variant-form/attribute-item.tsx"],"names":["React","useMemo","useSelector","Col","Typography","Select","Space","AttributeItem","attribute","updateAttribute","listAttribute","state","store","attributes","data","suggestTags","filter","i","_id","tags","changeAttributeTags","addTag","tag","includes","newTags","push","removeTag","item","display","label","iconClose","length","map","idx"],"mappings":"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","sourcesContent":["import React, { FC, useMemo } from 'react';\nimport { IAttribute } from '../../../../models';\nimport { useSelector } from 'react-redux';\nimport { IAttributeOption } from '../../context/interface';\nimport { Col, Typography, Select, Space } from 'antd';\nimport { IState } from '../../../../store/rootReducer';\nimport iconClose from '../../../../assets/images/ic-close.svg';\nimport './style.less';\n\ntype Props = {\n    attribute: IAttributeOption;\n    updateAttribute: (value: IAttribute) => void;\n};\n\nconst AttributeItem: FC<Props> = ({ attribute, updateAttribute }) => {\n\n    const listAttribute: IAttribute[] = useSelector((state: IState) => state.store.attributes.data);\n\n    const suggestTags = useMemo(() => {\n        return listAttribute.filter((i) => attribute._id === i._id)[0]?.tags || [];\n    }, [attribute, listAttribute]);\n\n    const changeAttributeTags = (tags: string[]) => updateAttribute({ ...attribute, tags });\n\n    const addTag = (tag: string) => {\n        if (attribute.tags.includes(tag)) return;\n\n        let newTags = [];\n        newTags.push(tag);\n\n        changeAttributeTags([...newTags]);\n    };\n\n    const removeTag = (tag: string) => {\n        if (!attribute.tags.includes(tag)) return;\n\n        let newTags = attribute.tags ? [...attribute.tags] : [];\n        newTags = newTags.filter((item: string) => item !== tag);\n\n        changeAttributeTags([...newTags]);\n    };\n\n    return (\n        <>\n            <Col span={24} className='select-attributes'>\n                <Select\n                    mode=\"tags\"\n                    onChange={changeAttributeTags}\n                    placeholder=\"Please select\"\n                    value={attribute.tags}\n                    className=\"prod-form-properties__select\"\n                    dropdownStyle={{ display: 'none' }}\n                    tagRender={({ label }) => (\n                        <Space className=\"prod-form-properties__tag\">\n                            <Typography.Text>{label}</Typography.Text>\n                            <img\n                                src={iconClose}\n                                alt=\"\"\n                                onClick={() => removeTag(label as string)}\n                            />\n                        </Space>\n                    )}\n                ></Select>\n\n                {suggestTags.length ? (\n                    <div className=\"suggest-tags\">\n                        <span>Nhãn đã có: </span>\n                        <span className=\"tag-list\">\n                            {suggestTags.map((tag: string, idx: number) => (\n                                <span\n                                    key={`suggest-tag-${idx}`}\n                                    className={`tag${\n                                        attribute.tags.includes(tag) ? ' disabled' : ''\n                                    }`}\n                                    onClick={() => addTag(tag)}\n                                >\n                                    {tag}\n                                </span>\n                            ))}\n                        </span>\n                    </div>\n                ) : (\n                    <></>\n                )}\n            </Col>\n        </>\n    );\n};\n\nexport default AttributeItem;\n"]},"metadata":{},"sourceType":"module"}