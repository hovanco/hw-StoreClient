{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/components/drag-drop-list/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Card from './card';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DragDropList = ({\n  dataSource,\n  dataKey,\n  renderItem,\n  onDragEnd,\n  renderContent,\n  className,\n  accepts\n}) => {\n  _s();\n\n  const [cards, setCards] = useState(dataSource);\n  useEffect(() => {\n    setCards(dataSource);\n  }, [dataSource]);\n\n  const moveCard = (dragIndex, hoverIndex) => {\n    const dragCard = cards[dragIndex];\n    let localCard = [...cards];\n    localCard.splice(dragIndex, 1);\n    localCard.splice(hoverIndex, 0, dragCard);\n    setCards([...localCard]);\n  };\n\n  const dragEnd = ({\n    id,\n    index\n  }) => {\n    onDragEnd && onDragEnd(cards);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drag-drop-list-wrapper ${className || ''}`,\n      children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-drop-list-item\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          accepts: accepts,\n          index: i,\n          id: dataKey ? card[dataKey] : card,\n          text: card,\n          moveCard: moveCard,\n          onDragEnd: dragEnd,\n          renderItem: renderItem\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), renderContent ? renderContent(card, i) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DragDropList, \"xb0D2n/AcMoVZRxrKlEtSLWpfwI=\");\n\n_c = DragDropList;\nexport default DragDropList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDropList\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/components/drag-drop-list/index.tsx"],"names":["React","useEffect","useState","Card","DndProvider","HTML5Backend","DragDropList","dataSource","dataKey","renderItem","onDragEnd","renderContent","className","accepts","cards","setCards","moveCard","dragIndex","hoverIndex","dragCard","localCard","splice","dragEnd","id","index","map","card","i","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;;AAYA,MAAMC,YAA6B,GAAG,CAAC;AACnCC,EAAAA,UADmC;AAEnCC,EAAAA,OAFmC;AAGnCC,EAAAA,UAHmC;AAInCC,EAAAA,SAJmC;AAKnCC,EAAAA,aALmC;AAMnCC,EAAAA,SANmC;AAOnCC,EAAAA;AAPmC,CAAD,KAQhC;AAAA;;AACF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,UAAD,CAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACR,UAAD,CAAR;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMS,QAAQ,GAAG,CAACC,SAAD,EAAoBC,UAApB,KAA2C;AACxD,UAAMC,QAAQ,GAAGL,KAAK,CAACG,SAAD,CAAtB;AAEA,QAAIG,SAAS,GAAG,CAAC,GAAGN,KAAJ,CAAhB;AACAM,IAAAA,SAAS,CAACC,MAAV,CAAiBJ,SAAjB,EAA4B,CAA5B;AACAG,IAAAA,SAAS,CAACC,MAAV,CAAiBH,UAAjB,EAA6B,CAA7B,EAAgCC,QAAhC;AAEAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGK,SAAJ,CAAD,CAAR;AACH,GARD;;AAUA,QAAME,OAAO,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAA+C;AAC3Dd,IAAAA,SAAS,IAAIA,SAAS,CAACI,KAAD,CAAtB;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD;AAAa,IAAA,OAAO,EAAET,YAAtB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,0BAAyBO,SAAS,IAAI,EAAG,EAA1D;AAAA,gBACKE,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAYC,CAAZ,kBACP;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAA5C;AAAA,gCACI,QAAC,IAAD;AACI,UAAA,OAAO,EAAEf,OADb;AAGI,UAAA,KAAK,EAAEc,CAHX;AAII,UAAA,EAAE,EAAEnB,OAAO,GAAGkB,IAAI,CAAClB,OAAD,CAAP,GAAmBkB,IAJlC;AAKI,UAAA,IAAI,EAAEA,IALV;AAMI,UAAA,QAAQ,EAAEV,QANd;AAOI,UAAA,SAAS,EAAEM,OAPf;AAQI,UAAA,UAAU,EAAEb;AARhB,WAESkB,CAFT;AAAA;AAAA;AAAA;AAAA,gBADJ,EAWKhB,aAAa,GAAGA,aAAa,CAACe,IAAD,EAAOC,CAAP,CAAhB,gBAA4B,qCAX9C;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlDD;;GAAMrB,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from './card';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\ntype Props = {\n    dataSource: any[];\n    renderItem?: Function;\n    onDragEnd?: Function;\n    dataKey?: string;\n    renderContent?: Function;\n    className?: string;\n    accepts?: string[];\n};\n\nconst DragDropList: React.FC<Props> = ({\n    dataSource,\n    dataKey,\n    renderItem,\n    onDragEnd,\n    renderContent,\n    className,\n    accepts,\n}) => {\n    const [cards, setCards] = useState(dataSource);\n\n    useEffect(() => {\n        setCards(dataSource);\n    }, [dataSource]);\n\n    const moveCard = (dragIndex: number, hoverIndex: number) => {\n        const dragCard = cards[dragIndex];\n\n        let localCard = [...cards];\n        localCard.splice(dragIndex, 1);\n        localCard.splice(hoverIndex, 0, dragCard);\n\n        setCards([...localCard]);\n    };\n\n    const dragEnd = ({ id, index }: { id: any; index: number }) => {\n        onDragEnd && onDragEnd(cards);\n    };\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div className={`drag-drop-list-wrapper ${className || ''}`}>\n                {cards.map((card: any, i: number) => (\n                    <div className=\"drag-drop-list-item\" style={{ display: 'flex' }}>\n                        <Card\n                            accepts={accepts}\n                            key={i}\n                            index={i}\n                            id={dataKey ? card[dataKey] : card}\n                            text={card}\n                            moveCard={moveCard}\n                            onDragEnd={dragEnd}\n                            renderItem={renderItem}\n                        />\n                        {renderContent ? renderContent(card, i) : <></>}\n                    </div>\n                ))}\n            </div>\n        </DndProvider>\n    );\n};\n\nexport default DragDropList;\n"]},"metadata":{},"sourceType":"module"}