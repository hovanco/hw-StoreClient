{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account/components/staffs/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { removeAccents } from '../../../../../helper';\nimport { useStaffs } from '../../../../../hook/useStaff';\nimport { checkOwner } from '../../util';\nimport StaffTable from '../staff-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Staffs = () => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const {\n    loading,\n    staffs\n  } = useStaffs();\n  const [staffsLocal, setStaffsLocal] = useState([]);\n\n  const searchStaff = text => {\n    const newStaffs = staffs.filter(staff => !checkOwner({\n      staffId: staff._id,\n      store\n    }) && removeAccents(staff.name).toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    setStaffsLocal(newStaffs);\n  };\n\n  useEffect(() => {\n    setStaffsLocal(staffs.filter(staff => !checkOwner({\n      staffId: staff._id,\n      store\n    })));\n  }, [staffs]);\n  return /*#__PURE__*/_jsxDEV(StaffTable, {\n    loading: loading,\n    staffs: staffsLocal,\n    searchStaff: searchStaff\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Staffs, \"3G0n23UazW0pDnqrhhC7sYva/e0=\", false, function () {\n  return [useSelector, useStaffs];\n});\n\n_c = Staffs;\nexport default Staffs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staffs\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/account/components/staffs/index.tsx"],"names":["React","useEffect","useState","useSelector","removeAccents","useStaffs","checkOwner","StaffTable","Staffs","store","state","data","loading","staffs","staffsLocal","setStaffsLocal","searchStaff","text","newStaffs","filter","staff","staffId","_id","name","toLowerCase","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAGA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;;AAIA,MAAMC,MAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAMC,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAmBA,KAAK,CAACD,KAAN,CAAYE,IAAhC,CAAzB;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBR,SAAS,EAArC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAW,EAAX,CAA9C;;AAEA,QAAMc,WAAW,GAAIC,IAAD,IAAkB;AAClC,UAAMC,SAAS,GAAGL,MAAM,CAACM,MAAP,CACbC,KAAD,IACI,CAACd,UAAU,CAAC;AAAEe,MAAAA,OAAO,EAAED,KAAK,CAACE,GAAjB;AAAsBb,MAAAA;AAAtB,KAAD,CAAX,IACAL,aAAa,CAACgB,KAAK,CAACG,IAAP,CAAb,CAA0BC,WAA1B,GAAwCC,OAAxC,CAAgDR,IAAI,CAACO,WAAL,EAAhD,MAAwE,CAAC,CAH/D,CAAlB;AAMAT,IAAAA,cAAc,CAACG,SAAD,CAAd;AACH,GARD;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,cAAc,CAACF,MAAM,CAACM,MAAP,CAAeC,KAAD,IAAW,CAACd,UAAU,CAAC;AAAEe,MAAAA,OAAO,EAAED,KAAK,CAACE,GAAjB;AAAsBb,MAAAA;AAAtB,KAAD,CAApC,CAAD,CAAd;AACH,GAFQ,EAEN,CAACI,MAAD,CAFM,CAAT;AAIA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAED,OAArB;AAA8B,IAAA,MAAM,EAAEE,WAAtC;AAAmD,IAAA,WAAW,EAAEE;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArBD;;GAAMR,M;UACYL,W,EAEcE,S;;;KAH1BG,M;AAuBN,eAAeA,MAAf","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { removeAccents } from '../../../../../helper';\nimport { useStaffs } from '../../../../../hook/useStaff';\nimport { IStaff } from '../../../../../models';\nimport { IState } from '../../../../../store/rootReducer';\nimport { checkOwner } from '../../util';\nimport StaffTable from '../staff-table';\n\ninterface Props {}\n\nconst Staffs: FC<Props> = () => {\n    const store = useSelector((state: IState) => state.store.data);\n\n    const { loading, staffs } = useStaffs();\n    const [staffsLocal, setStaffsLocal] = useState<IStaff[]>([]);\n\n    const searchStaff = (text: string) => {\n        const newStaffs = staffs.filter(\n            (staff) =>\n                !checkOwner({ staffId: staff._id, store }) &&\n                removeAccents(staff.name).toLowerCase().indexOf(text.toLowerCase()) !== -1\n        );\n\n        setStaffsLocal(newStaffs);\n    };\n\n    useEffect(() => {\n        setStaffsLocal(staffs.filter((staff) => !checkOwner({ staffId: staff._id, store })));\n    }, [staffs]);\n\n    return <StaffTable loading={loading} staffs={staffsLocal} searchStaff={searchStaff} />;\n};\n\nexport default Staffs;\n"]},"metadata":{},"sourceType":"module"}