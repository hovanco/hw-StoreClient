{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/shipping/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Radio, Table } from 'antd';\nimport { get } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport shippingApi from '../../../../../api/shipping-api';\nimport { API_URI } from '../../../../../configs/vars';\nimport formatMoney from '../../../../../helper/format-money';\nimport { EDeliveryServiceIds, ETransportType } from '../../../../../models/order';\nimport { useOrderNew } from '../../state/context';\nimport { EStatusPage } from '../../state/interface';\nimport './shipping.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatShips = ships => {\n  let new_ships = [];\n  ships.forEach(ship => {\n    const {\n      info,\n      shipmentFees\n    } = ship;\n    shipmentFees.forEach(s => {\n      if (s.transportType) {\n        const item = {\n          avatar: info.avatar,\n          serviceId: info.id,\n          transportType: s.transportType,\n          shipmentFee: s.total,\n          name: info.name\n        };\n        new_ships.push(item);\n      }\n    });\n  });\n  return new_ships;\n};\n\nconst useShipping = () => {\n  _s();\n\n  const store = useSelector(state => state.store.data);\n  const {\n    products,\n    infoDelivery,\n    statusPage,\n    warehouseId,\n    order,\n    shipType\n  } = useOrderNew();\n  const [loading, setLoading] = useState(false);\n  const [ships, setShips] = useState([]);\n  useEffect(() => {\n    async function loadShipping() {\n      setLoading(true);\n      const toProvinceId = order ? get(order, 'customer.province') : infoDelivery.province;\n      const toDistrictId = order ? get(order, 'customer.district') : infoDelivery.district;\n      const toWardId = order ? get(order, 'customer.ward') : infoDelivery.ward;\n      const weight = order && statusPage === EStatusPage.DETAIL ? (get(order, 'products') || []).reduce((value, product) => get(product, 'productId.weight', 0) * product.count + value, 0) : products.reduce((value, o) => (o.weight || 0) * o.count + value, 0);\n      const data = {\n        toProvinceId,\n        toDistrictId,\n        toWardId,\n        warehouseId: order ? get(order, 'warehouseId._id') : warehouseId,\n        weight,\n        length: 20,\n        width: 20,\n        height: 10\n      };\n\n      try {\n        const response = await shippingApi.servicesTransport({\n          storeId: store._id,\n          data\n        });\n        setShips(formatShips(response));\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n\n    const valid = infoDelivery && warehouseId && products.length > 0;\n\n    if (valid) {\n      loadShipping();\n    } // eslint-disable-next-line\n\n  }, [infoDelivery, products, warehouseId, shipType]);\n  const value = useMemo(() => [loading, ships], [loading, ships]);\n  return value;\n};\n\n_s(useShipping, \"Lb57u5jvrZ3s43W+MrSXxfgkmK0=\", false, function () {\n  return [useSelector, useOrderNew];\n});\n\nconst columns_base = [{\n  title: 'Hãng vận chuyển',\n  dataIndex: '',\n  key: 'avatar',\n  align: 'center',\n  render: ({\n    avatar,\n    serviceId\n  }) => {\n    const title = serviceId === EDeliveryServiceIds.GHN ? 'GHN' : 'GHTK';\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${API_URI}/store${avatar}`,\n      style: {\n        width: 80\n      },\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 20\n    }, this);\n  }\n}, {\n  title: 'Dịch vụ',\n  dataIndex: 'transportType',\n  key: 'transportType',\n  align: 'center',\n  render: transportType => {\n    if (transportType === ETransportType.Fast) return 'Nhanh';\n    return 'Tiêu chuẩn';\n  }\n}, {\n  title: 'Tổng phí',\n  dataIndex: 'shipmentFee',\n  key: 'shipmentFee',\n  align: 'center',\n  render: shipmentFee => formatMoney(shipmentFee)\n}];\n\nconst Shipping = () => {\n  _s2();\n\n  const {\n    selectShip,\n    ship,\n    statusPage,\n    order\n  } = useOrderNew();\n  const [loading, ships] = useShipping();\n  useEffect(() => {\n    if (statusPage === EStatusPage.EDIT || statusPage === EStatusPage.NEW) {\n      const ship_exist = ships.find(shipItem => {\n        var _order$deliveryOption, _order$deliveryOption2;\n\n        return (shipItem === null || shipItem === void 0 ? void 0 : shipItem.serviceId) === (order ? (_order$deliveryOption = order.deliveryOptions) === null || _order$deliveryOption === void 0 ? void 0 : _order$deliveryOption.serviceId : ship === null || ship === void 0 ? void 0 : ship.serviceId) && shipItem.transportType === (order ? (_order$deliveryOption2 = order.deliveryOptions) === null || _order$deliveryOption2 === void 0 ? void 0 : _order$deliveryOption2.transportType : ship === null || ship === void 0 ? void 0 : ship.transportType);\n      });\n\n      if (ship_exist) {\n        selectShip(ship_exist);\n      }\n    } // eslint-disable-next-line\n\n  }, [ships]);\n  const columns = order && statusPage === EStatusPage.DETAIL ? columns_base : [{\n    dataIndex: '',\n    key: 'select',\n    width: 40,\n    render: item => {\n      const checked = item.serviceId === (ship === null || ship === void 0 ? void 0 : ship.serviceId) && item.transportType === (ship === null || ship === void 0 ? void 0 : ship.transportType);\n      return /*#__PURE__*/_jsxDEV(Radio, {\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 32\n      }, this);\n    }\n  }, ...columns_base];\n  const dataSource = statusPage === EStatusPage.DETAIL && [1, 2].includes(get(order, 'deliveryOptions.serviceId')) ? ships.filter(ship => {\n    var _order$deliveryOption3, _order$deliveryOption4;\n\n    return ship.serviceId === (order === null || order === void 0 ? void 0 : (_order$deliveryOption3 = order.deliveryOptions) === null || _order$deliveryOption3 === void 0 ? void 0 : _order$deliveryOption3.serviceId) && ship.transportType === (order === null || order === void 0 ? void 0 : (_order$deliveryOption4 = order.deliveryOptions) === null || _order$deliveryOption4 === void 0 ? void 0 : _order$deliveryOption4.transportType);\n  }) : ships;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ships\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      onRow: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            selectShip(record);\n          }\n        };\n      },\n      loading: loading,\n      bordered: true,\n      columns: columns,\n      dataSource: dataSource,\n      rowKey: item => `${item.serviceId}-${item.transportType}`,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Shipping, \"kqaYKIthbOmGsX47XFE6GhaOt4M=\", false, function () {\n  return [useOrderNew, useShipping];\n});\n\n_c = Shipping;\nexport default Shipping;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shipping\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/create/components/shipping/index.tsx"],"names":["Radio","Table","get","React","useEffect","useMemo","useState","useSelector","shippingApi","API_URI","formatMoney","EDeliveryServiceIds","ETransportType","useOrderNew","EStatusPage","formatShips","ships","new_ships","forEach","ship","info","shipmentFees","s","transportType","item","avatar","serviceId","id","shipmentFee","total","name","push","useShipping","store","state","data","products","infoDelivery","statusPage","warehouseId","order","shipType","loading","setLoading","setShips","loadShipping","toProvinceId","province","toDistrictId","district","toWardId","ward","weight","DETAIL","reduce","value","product","count","o","length","width","height","response","servicesTransport","storeId","_id","error","valid","columns_base","title","dataIndex","key","align","render","GHN","Fast","Shipping","selectShip","EDIT","NEW","ship_exist","find","shipItem","deliveryOptions","columns","checked","dataSource","includes","filter","record","rowIndex","onClick","event"],"mappings":"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","sourcesContent":["import { Radio, Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { get } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport shippingApi from '../../../../../api/shipping-api';\nimport { API_URI } from '../../../../../configs/vars';\nimport formatMoney from '../../../../../helper/format-money';\nimport { IOrder } from '../../../../../models';\nimport { EDeliveryServiceIds, ETransportType } from '../../../../../models/order';\nimport { IState } from '../../../../../store/rootReducer';\nimport { useOrderNew } from '../../state/context';\nimport { EStatusPage, IInfoDelivery, IShip } from '../../state/interface';\nimport './shipping.less';\n\nconst formatShips = (ships: any[]): IShip[] => {\n    let new_ships: IShip[] = [];\n\n    ships.forEach((ship) => {\n        const { info, shipmentFees } = ship;\n\n        shipmentFees.forEach((s: any) => {\n            if (s.transportType) {\n                const item: IShip = {\n                    avatar: info.avatar,\n                    serviceId: info.id,\n                    transportType: s.transportType,\n                    shipmentFee: s.total,\n                    name: info.name,\n                };\n\n                new_ships.push(item);\n            }\n        });\n    });\n    return new_ships;\n};\n\nconst useShipping = () => {\n    const store = useSelector((state: IState) => state.store.data);\n    const { products, infoDelivery, statusPage, warehouseId, order, shipType } = useOrderNew();\n    const [loading, setLoading] = useState<boolean>(false);\n    const [ships, setShips] = useState<any>([]);\n\n    useEffect(() => {\n        async function loadShipping() {\n            setLoading(true);\n\n            const toProvinceId = order\n                ? (get(order, 'customer.province') as string)\n                : (infoDelivery as IInfoDelivery).province;\n\n            const toDistrictId = order\n                ? (get(order, 'customer.district') as string)\n                : (infoDelivery as IInfoDelivery).district;\n\n            const toWardId = order\n                ? (get(order, 'customer.ward') as string)\n                : (infoDelivery as IInfoDelivery).ward;\n\n            const weight =\n                order && statusPage === EStatusPage.DETAIL\n                    ? (get(order, 'products') || []).reduce(\n                          (value: number, product: any) =>\n                              get(product, 'productId.weight', 0) * product.count + value,\n                          0\n                      )\n                    : products.reduce(\n                          (value: number, o: any) => (o.weight || 0) * o.count + value,\n                          0\n                      );\n\n            const data = {\n                toProvinceId,\n                toDistrictId,\n                toWardId,\n                warehouseId: (order as IOrder)\n                    ? (get(order, 'warehouseId._id') as string)\n                    : warehouseId,\n                weight,\n                length: 20,\n                width: 20,\n                height: 10,\n            };\n\n            try {\n                const response = await shippingApi.servicesTransport({\n                    storeId: store._id as string,\n                    data,\n                });\n\n                setShips(formatShips(response));\n                setLoading(false);\n            } catch (error) {\n                setLoading(false);\n            }\n        }\n\n        const valid = (infoDelivery as IInfoDelivery) && warehouseId && products.length > 0;\n\n        if (valid) {\n            loadShipping();\n        }\n\n        // eslint-disable-next-line\n    }, [infoDelivery, products, warehouseId, shipType]);\n\n    const value = useMemo(() => [loading, ships], [loading, ships]);\n\n    return value;\n};\n\nconst columns_base: ColumnsType<IShip> = [\n    {\n        title: 'Hãng vận chuyển',\n        dataIndex: '',\n        key: 'avatar',\n        align: 'center',\n        render: ({ avatar, serviceId }) => {\n            const title = serviceId === EDeliveryServiceIds.GHN ? 'GHN' : 'GHTK';\n            return <img src={`${API_URI}/store${avatar}`} style={{ width: 80 }} alt={title} />;\n        },\n    },\n    {\n        title: 'Dịch vụ',\n        dataIndex: 'transportType',\n        key: 'transportType',\n        align: 'center',\n        render: (transportType) => {\n            if (transportType === ETransportType.Fast) return 'Nhanh';\n            return 'Tiêu chuẩn';\n        },\n    },\n    {\n        title: 'Tổng phí',\n        dataIndex: 'shipmentFee',\n        key: 'shipmentFee',\n        align: 'center',\n        render: (shipmentFee) => formatMoney(shipmentFee),\n    },\n];\n\nconst Shipping = () => {\n    const { selectShip, ship, statusPage, order } = useOrderNew();\n    const [loading, ships] = useShipping();\n\n    useEffect(() => {\n        if (statusPage === EStatusPage.EDIT || statusPage === EStatusPage.NEW) {\n            const ship_exist = ships.find(\n                (shipItem: any) =>\n                    shipItem?.serviceId === (order ? order.deliveryOptions?.serviceId : ship?.serviceId) &&\n                    shipItem.transportType === (order ? order.deliveryOptions?.transportType : ship?.transportType)\n            );\n\n            if (ship_exist) {\n                selectShip(ship_exist);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [ships]);\n\n    const columns: ColumnsType<IShip> =\n        order && statusPage === EStatusPage.DETAIL\n            ? columns_base\n            : [\n                {\n                    dataIndex: '',\n                    key: 'select',\n                    width: 40,\n                    render: (item) => {\n                        const checked =\n                            item.serviceId === ship?.serviceId &&\n                            item.transportType === ship?.transportType;\n\n                        return <Radio checked={checked} />;\n                    },\n                },\n                ...columns_base,\n            ];\n\n    const dataSource =\n        statusPage === EStatusPage.DETAIL &&\n        [1, 2].includes(get(order, 'deliveryOptions.serviceId'))\n            ? ships.filter(\n                (ship: IShip) =>\n                    ship.serviceId === order?.deliveryOptions?.serviceId &&\n                    ship.transportType === order?.deliveryOptions?.transportType\n            )\n            : ships;\n\n    return (\n        <div className=\"ships\">\n            <Table\n                onRow={(record, rowIndex) => {\n                    return {\n                        onClick: (event) => {\n                            selectShip(record);\n                        },\n                    };\n                }}\n                loading={loading}\n                bordered\n                columns={columns}\n                dataSource={dataSource}\n                rowKey={(item) => `${item.serviceId}-${item.transportType}`}\n                pagination={false}\n            />\n        </div>\n    );\n};\n\nexport default Shipping;\n"]},"metadata":{},"sourceType":"module"}