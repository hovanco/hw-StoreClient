{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-product/input-search.tsx\",\n    _s = $RefreshSig$();\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport useKey from '../../../../hook/useKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputSearch = ({\n  onChange,\n  setFocus\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n  const inputRef = useRef();\n\n  const focusInput = () => {\n    inputRef.current.focus();\n    if (setFocus) setFocus();\n  };\n\n  useKey({\n    key: 'F2',\n    callback: focusInput\n  });\n\n  const handleOnChange = textSearch => {\n    setText(textSearch);\n    onChange(textSearch);\n  };\n\n  const handleOnPress = () => {\n    onChange(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    ref: inputRef,\n    placeholder: \"Nh\\u1EADp t\\xEAn s\\u1EA3n ph\\u1EA9m / Qu\\xE9t Barcode (F2)\",\n    prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this),\n    onPressEnter: handleOnPress,\n    onChange: e => handleOnChange(e.target.value),\n    onFocus: () => onChange(text),\n    allowClear: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputSearch, \"s3WJGuHfaO1nE8/Jr2nwFrq5SuA=\", false, function () {\n  return [useKey];\n});\n\n_c = InputSearch;\nexport default InputSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-product/input-search.tsx"],"names":["SearchOutlined","Input","React","useRef","useState","useKey","InputSearch","onChange","setFocus","text","setText","inputRef","focusInput","current","focus","key","callback","handleOnChange","textSearch","handleOnPress","e","target","value"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,IAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAMA,MAAMC,WAAsB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAAA;;AACvD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAMO,QAAQ,GAAGR,MAAM,EAAvB;;AAEA,QAAMS,UAAU,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACA,QAAIN,QAAJ,EAAcA,QAAQ;AACzB,GAHD;;AAKAH,EAAAA,MAAM,CAAC;AACHU,IAAAA,GAAG,EAAE,IADF;AAEHC,IAAAA,QAAQ,EAAEJ;AAFP,GAAD,CAAN;;AAKA,QAAMK,cAAc,GAAIC,UAAD,IAAwB;AAC3CR,IAAAA,OAAO,CAACQ,UAAD,CAAP;AACAX,IAAAA,QAAQ,CAACW,UAAD,CAAR;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxBZ,IAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD;AACI,IAAA,GAAG,EAAEE,QADT;AAEI,IAAA,WAAW,EAAC,4DAFhB;AAGI,IAAA,MAAM,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAHZ;AAII,IAAA,YAAY,EAAEQ,aAJlB;AAKI,IAAA,QAAQ,EAAGC,CAAD,IAA4CH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CALxE;AAMI,IAAA,OAAO,EAAE,MAAMf,QAAQ,CAACE,IAAD,CAN3B;AAOI,IAAA,UAAU;AAPd;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlCD;;GAAMH,W;UASFD,M;;;KATEC,W;AAoCN,eAAeA,WAAf","sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { FC, useRef, useState } from 'react';\nimport useKey from '../../../../hook/useKey';\n\ninterface Props {\n    onChange: (text: string) => void;\n    setFocus?: () => void;\n}\nconst InputSearch: FC<Props> = ({ onChange, setFocus }) => {\n    const [text, setText] = useState<string>('');\n    const inputRef = useRef<any>();\n\n    const focusInput = () => {\n        inputRef.current.focus();\n        if (setFocus) setFocus();\n    };\n\n    useKey({\n        key: 'F2',\n        callback: focusInput,\n    });\n\n    const handleOnChange = (textSearch: string) => {\n        setText(textSearch);\n        onChange(textSearch);\n    };\n\n    const handleOnPress = () => {\n        onChange(text);\n    };\n\n    return (\n        <Input\n            ref={inputRef}\n            placeholder=\"Nhập tên sản phẩm / Quét Barcode (F2)\"\n            prefix={<SearchOutlined />}\n            onPressEnter={handleOnPress}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleOnChange(e.target.value)}\n            onFocus={() => onChange(text)}\n            allowClear\n        />\n    );\n};\n\nexport default InputSearch;\n"]},"metadata":{},"sourceType":"module"}