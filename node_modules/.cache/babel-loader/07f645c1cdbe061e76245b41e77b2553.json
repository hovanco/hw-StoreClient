{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/components/sider/add-sell-channel.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, message, Modal, Space } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport storeApi from '../../api/store-api';\nimport { SALE_CHANNEL_DATA } from '../../constants/sale-channels';\nimport { storeAction } from '../../reducers/storeState/action';\nimport types from '../../reducers/storeState/type';\nimport { InsaButton, Loading } from '../index';\nimport './add-sell-channel.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddSellChannel = ({\n  children\n}) => {\n  _s();\n\n  const storeObj = useSelector(({\n    store\n  }) => store.data);\n  const enableSaleChannels = useSelector(({\n    store\n  }) => store.enableSaleChannels);\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    dispatch(storeAction.getEnableSaleChannels()); // eslint-disable-next-line\n  }, []);\n  const getEnabledChannelData = useMemo(() => {\n    return SALE_CHANNEL_DATA.filter(item => enableSaleChannels.includes(item.id)).map(item => {\n      var _storeObj$saleChannel;\n\n      if (storeObj === null || storeObj === void 0 ? void 0 : (_storeObj$saleChannel = storeObj.saleChannels) === null || _storeObj$saleChannel === void 0 ? void 0 : _storeObj$saleChannel.includes(item.id)) return { ...item,\n        used: true\n      };\n      return item;\n    }); // eslint-disable-next-line\n  }, [enableSaleChannels, storeObj.saleChannels]);\n\n  const handleAddSaleChannel = async channel => {\n    try {\n      setLoading(true);\n      let newSaleChannels = storeObj.saleChannels ? [...storeObj.saleChannels, channel.id] : [channel.id];\n      let response = await storeApi.updateStore(storeObj._id, {\n        saleChannels: newSaleChannels\n      });\n      dispatch({\n        type: types.SET_STORE,\n        payload: response\n      });\n      message.success(`Thêm kênh bán hàng \"${channel.menuTitle}\" thành công!`);\n    } catch {\n      message.success(`Thêm kênh bán hàng \"${channel.menuTitle}\" thất bại!`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderButton = () => {\n    if (children) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        onClick: () => setVisible(true)\n      });\n    }\n\n    return (\n      /*#__PURE__*/\n      // <span\n      //     className=\"nav__icon anticon\"\n      //     style={{ backgroundImage: `url(${iconAddCircle})` }}\n      //     onClick={() => setVisible(true)}\n      // ></span>\n      _jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    );\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderButton(), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      title: \"Th\\xEAm k\\xEAnh b\\xE1n h\\xE0ng\",\n      footer: null,\n      closable: false,\n      onCancel: () => setVisible(false),\n      wrapClassName: \"modal-add-sell-channel\",\n      width: 600,\n      children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n        full: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        className: \"channel-section\",\n        direction: \"vertical\",\n        size: 23,\n        children: [getEnabledChannelData.map((channel, idx) => /*#__PURE__*/_jsxDEV(Space, {\n          align: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"channel-section__avatar\",\n            src: channel.icon,\n            shape: \"square\",\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            className: \"channel-section__content\",\n            direction: \"vertical\",\n            size: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channel-section__content-name\",\n              children: channel.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channel-section__content-description\",\n              children: channel.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: channel.used ? /*#__PURE__*/_jsxDEV(InsaButton, {\n              disabled: true,\n              style: {\n                width: 70,\n                padding: 0\n              },\n              children: \"\\u0110\\xE3 th\\xEAm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(InsaButton, {\n              type: \"primary\",\n              style: {\n                width: 70\n              },\n              onClick: () => handleAddSaleChannel(channel),\n              children: \"Th\\xEAm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, `channel_${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boundary-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          className: \"channel-section__footer\",\n          align: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"primary-text cursor-pointer\",\n            onClick: () => {\n              setVisible(false);\n              dispatch(push('/setting/sale-channel'));\n            },\n            children: \"+ Qu\\u1EA3n l\\xFD, c\\xE0i \\u0111\\u1EB7t k\\xEAnh b\\xE1n h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InsaButton, {\n            onClick: () => setVisible(false),\n            style: {\n              width: 120\n            },\n            children: \"Tho\\xE1t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddSellChannel, \"dCfANB6Ry5b/D/koIqFhQ/syn2U=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AddSellChannel;\nexport default AddSellChannel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSellChannel\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/components/sider/add-sell-channel.tsx"],"names":["Avatar","message","Modal","Space","React","useEffect","useMemo","useState","useDispatch","useSelector","push","storeApi","SALE_CHANNEL_DATA","storeAction","types","InsaButton","Loading","AddSellChannel","children","storeObj","store","data","enableSaleChannels","dispatch","visible","setVisible","loading","setLoading","getEnableSaleChannels","getEnabledChannelData","filter","item","includes","id","map","saleChannels","used","handleAddSaleChannel","channel","newSaleChannels","response","updateStore","_id","type","SET_STORE","payload","success","menuTitle","renderButton","cloneElement","onClick","idx","icon","title","description","width","padding"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,QAAxC,QAAsE,OAAtE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAGA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,UAApC;AACA,OAAO,yBAAP;;;;AAMA,MAAMC,cAAyB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;AAAEW,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACC,IAA9C,CAA5B;AAEA,QAAMC,kBAAkB,GAAGb,WAAW,CAClC,CAAC;AAAEW,IAAAA;AAAF,GAAD,KAAuCA,KAAK,CAACE,kBADX,CAAtC;AAIA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAU,KAAV,CAAtC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACV,WAAW,CAACe,qBAAZ,EAAD,CAAR,CADY,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,qBAAqB,GAAGvB,OAAO,CAAC,MAAM;AACxC,WAAOM,iBAAiB,CAACkB,MAAlB,CAA0BC,IAAD,IAC5BT,kBAAkB,CAACU,QAAnB,CAA4BD,IAAI,CAACE,EAAjC,CADG,EAELC,GAFK,CAEAH,IAAD,IAAuB;AAAA;;AACzB,UAAIZ,QAAJ,aAAIA,QAAJ,gDAAIA,QAAQ,CAAEgB,YAAd,0DAAI,sBAAwBH,QAAxB,CAAiCD,IAAI,CAACE,EAAtC,CAAJ,EAA+C,OAAO,EAAE,GAAGF,IAAL;AAAWK,QAAAA,IAAI,EAAE;AAAjB,OAAP;AAE/C,aAAOL,IAAP;AACH,KANM,CAAP,CADwC,CASxC;AACH,GAVoC,EAUlC,CAACT,kBAAD,EAAqBH,QAAQ,CAACgB,YAA9B,CAVkC,CAArC;;AAYA,QAAME,oBAAoB,GAAG,MAAOC,OAAP,IAAgC;AACzD,QAAI;AACAX,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAIY,eAAe,GAAGpB,QAAQ,CAACgB,YAAT,GAChB,CAAC,GAAGhB,QAAQ,CAACgB,YAAb,EAA2BG,OAAO,CAACL,EAAnC,CADgB,GAEhB,CAACK,OAAO,CAACL,EAAT,CAFN;AAIA,UAAIO,QAAQ,GAAG,MAAM7B,QAAQ,CAAC8B,WAAT,CAAqBtB,QAAQ,CAACuB,GAA9B,EAA6C;AAC9DP,QAAAA,YAAY,EAAEI;AADgD,OAA7C,CAArB;AAIAhB,MAAAA,QAAQ,CAAC;AACLoB,QAAAA,IAAI,EAAE7B,KAAK,CAAC8B,SADP;AAELC,QAAAA,OAAO,EAAEL;AAFJ,OAAD,CAAR;AAKAvC,MAAAA,OAAO,CAAC6C,OAAR,CAAiB,uBAAsBR,OAAO,CAACS,SAAU,eAAzD;AACH,KAjBD,CAiBE,MAAM;AACJ9C,MAAAA,OAAO,CAAC6C,OAAR,CAAiB,uBAAsBR,OAAO,CAACS,SAAU,aAAzD;AACH,KAnBD,SAmBU;AACNpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAvBD;;AAyBA,QAAMqB,YAAY,GAAG,MAAM;AACvB,QAAI9B,QAAJ,EAAc;AACV,0BAAOd,KAAK,CAAC6C,YAAN,CAAmB/B,QAAnB,EAA6B;AAAEgC,QAAAA,OAAO,EAAE,MAAMzB,UAAU,CAAC,IAAD;AAA3B,OAA7B,CAAP;AACH;;AAED;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANJ;AAQH,GAbD;;AAeA,sBACI;AAAA,eACKuB,YAAY,EADjB,eAGI,QAAC,KAAD;AACI,MAAA,OAAO,EAAExB,OADb;AAEI,MAAA,KAAK,EAAC,gCAFV;AAGI,MAAA,MAAM,EAAE,IAHZ;AAII,MAAA,QAAQ,EAAE,KAJd;AAKI,MAAA,QAAQ,EAAE,MAAMC,UAAU,CAAC,KAAD,CAL9B;AAMI,MAAA,aAAa,EAAC,wBANlB;AAOI,MAAA,KAAK,EAAE,GAPX;AAAA,iBASKC,OAAO,iBAAI,QAAC,OAAD;AAAS,QAAA,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,cAThB,eAUI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,SAAS,EAAC,UAA7C;AAAwD,QAAA,IAAI,EAAE,EAA9D;AAAA,mBACKG,qBAAqB,CAACK,GAAtB,CAA0B,CAACI,OAAD,EAAuBa,GAAvB,kBACvB,QAAC,KAAD;AAA8B,UAAA,KAAK,EAAC,OAApC;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,SAAS,EAAC,yBADd;AAEI,YAAA,GAAG,EAAEb,OAAO,CAACc,IAFjB;AAGI,YAAA,KAAK,EAAC,QAHV;AAII,YAAA,IAAI,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI,QAAC,KAAD;AACI,YAAA,SAAS,EAAC,0BADd;AAEI,YAAA,SAAS,EAAC,UAFd;AAGI,YAAA,IAAI,EAAE,CAHV;AAAA,oCAKI;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,wBAAgDd,OAAO,CAACe;AAAxD;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAK,cAAA,SAAS,EAAC,sCAAf;AAAA,wBACKf,OAAO,CAACgB;AADb;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAiBI;AAAA,sBACKhB,OAAO,CAACF,IAAR,gBACG,QAAC,UAAD;AAAY,cAAA,QAAQ,MAApB;AAAqB,cAAA,KAAK,EAAE;AAAEmB,gBAAAA,KAAK,EAAE,EAAT;AAAaC,gBAAAA,OAAO,EAAE;AAAtB,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAKG,QAAC,UAAD;AACI,cAAA,IAAI,EAAC,SADT;AAEI,cAAA,KAAK,EAAE;AAAED,gBAAAA,KAAK,EAAE;AAAT,eAFX;AAGI,cAAA,OAAO,EAAE,MAAMlB,oBAAoB,CAACC,OAAD,CAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA,WAAa,WAAUa,GAAI,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAoCI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBApCJ,eAqCI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,yBAAjB;AAA2C,UAAA,KAAK,EAAC,OAAjD;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,6BADd;AAEI,YAAA,OAAO,EAAE,MAAM;AACX1B,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,cAAAA,QAAQ,CAACb,IAAI,CAAC,uBAAD,CAAL,CAAR;AACH,aALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAMe,UAAU,CAAC,KAAD,CAArC;AAA8C,YAAA,KAAK,EAAE;AAAE8B,cAAAA,KAAK,EAAE;AAAT,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAqEH,CA3ID;;GAAMtC,c;UACeR,W,EAEUA,W,EAIVD,W;;;KAPfS,c;AA6IN,eAAeA,cAAf","sourcesContent":["import { Avatar, message, Modal, Space } from 'antd';\nimport React, { FC, useEffect, useMemo, useState, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport storeApi from '../../api/store-api';\nimport iconAddCircle from '../../assets/images/ic-actions-add.svg';\nimport { SALE_CHANNEL_DATA } from '../../constants/sale-channels';\nimport { SaleChannel } from '../../models';\nimport { IStoreState } from '../../reducers/storeState/reducer';\nimport { storeAction } from '../../reducers/storeState/action';\nimport types from '../../reducers/storeState/type';\nimport { InsaButton, Loading } from '../index';\nimport './add-sell-channel.less';\n\ninterface Props {\n    children?: ReactElement;\n}\n\nconst AddSellChannel: FC<Props> = ({ children }) => {\n    const storeObj = useSelector(({ store }: { store: IStoreState }) => store.data);\n\n    const enableSaleChannels = useSelector(\n        ({ store }: { store: IStoreState }) => store.enableSaleChannels\n    );\n\n    const dispatch = useDispatch();\n\n    const [visible, setVisible] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        dispatch(storeAction.getEnableSaleChannels());\n\n        // eslint-disable-next-line\n    }, []);\n\n    const getEnabledChannelData = useMemo(() => {\n        return SALE_CHANNEL_DATA.filter((item: SaleChannel) =>\n            enableSaleChannels.includes(item.id)\n        ).map((item: SaleChannel) => {\n            if (storeObj?.saleChannels?.includes(item.id)) return { ...item, used: true };\n\n            return item;\n        });\n\n        // eslint-disable-next-line\n    }, [enableSaleChannels, storeObj.saleChannels]);\n\n    const handleAddSaleChannel = async (channel: SaleChannel) => {\n        try {\n            setLoading(true);\n\n            let newSaleChannels = storeObj.saleChannels\n                ? [...storeObj.saleChannels, channel.id]\n                : [channel.id];\n\n            let response = await storeApi.updateStore(storeObj._id as string, {\n                saleChannels: newSaleChannels,\n            });\n\n            dispatch({\n                type: types.SET_STORE,\n                payload: response,\n            });\n\n            message.success(`Thêm kênh bán hàng \"${channel.menuTitle}\" thành công!`);\n        } catch {\n            message.success(`Thêm kênh bán hàng \"${channel.menuTitle}\" thất bại!`);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const renderButton = () => {\n        if (children) {\n            return React.cloneElement(children, { onClick: () => setVisible(true) });\n        }\n\n        return (\n            // <span\n            //     className=\"nav__icon anticon\"\n            //     style={{ backgroundImage: `url(${iconAddCircle})` }}\n            //     onClick={() => setVisible(true)}\n            // ></span>\n            <h1></h1>\n        );\n    };\n\n    return (\n        <>\n            {renderButton()}\n\n            <Modal\n                visible={visible}\n                title=\"Thêm kênh bán hàng\"\n                footer={null}\n                closable={false}\n                onCancel={() => setVisible(false)}\n                wrapClassName=\"modal-add-sell-channel\"\n                width={600}\n            >\n                {loading && <Loading full />}\n                <Space className=\"channel-section\" direction=\"vertical\" size={23}>\n                    {getEnabledChannelData.map((channel: SaleChannel, idx: number) => (\n                        <Space key={`channel_${idx}`} align=\"start\">\n                            <Avatar\n                                className=\"channel-section__avatar\"\n                                src={channel.icon}\n                                shape=\"square\"\n                                size={40}\n                            />\n                            <Space\n                                className=\"channel-section__content\"\n                                direction=\"vertical\"\n                                size={6}\n                            >\n                                <div className=\"channel-section__content-name\">{channel.title}</div>\n                                <div className=\"channel-section__content-description\">\n                                    {channel.description}\n                                </div>\n                            </Space>\n                            <span>\n                                {channel.used ? (\n                                    <InsaButton disabled style={{ width: 70, padding: 0 }}>\n                                        Đã thêm\n                                    </InsaButton>\n                                ) : (\n                                    <InsaButton\n                                        type=\"primary\"\n                                        style={{ width: 70 }}\n                                        onClick={() => handleAddSaleChannel(channel)}\n                                    >\n                                        Thêm\n                                    </InsaButton>\n                                )}\n                            </span>\n                        </Space>\n                    ))}\n                    <div className=\"boundary-line\"></div>\n                    <Space className=\"channel-section__footer\" align=\"start\">\n                        <span\n                            className=\"primary-text cursor-pointer\"\n                            onClick={() => {\n                                setVisible(false);\n                                dispatch(push('/setting/sale-channel'));\n                            }}\n                        >\n                            + Quản lý, cài đặt kênh bán hàng\n                        </span>\n                        <InsaButton onClick={() => setVisible(false)} style={{ width: 120 }}>\n                            Thoát\n                        </InsaButton>\n                    </Space>\n                </Space>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddSellChannel;\n"]},"metadata":{},"sourceType":"module"}