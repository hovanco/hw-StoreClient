{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/inventory-quantity/inventory-quantity-table.tsx\",\n    _s = $RefreshSig$();\n\nimport { find } from 'lodash';\nimport React, { useMemo } from 'react';\nimport { InsaTable } from '../../../../components';\nimport AdjustNumberInput from './adjust-number-input';\nimport { useStocks } from './hooks/stocks';\nimport { useWarehouses } from './hooks/warehouses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InventoryQuantityTable = () => {\n  _s();\n\n  const {\n    stocks,\n    quantityChange,\n    filter\n  } = useStocks();\n  const {\n    warehouses\n  } = useWarehouses();\n  const columns = [{\n    title: 'Kho hàng',\n    align: 'center',\n    dataIndex: ['warehouseId', 'name'],\n    key: 'warehouse.name',\n    render: text => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"primary-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }, this)\n  }, {\n    title: 'Địa chỉ kho hàng',\n    align: 'center',\n    dataIndex: '',\n    key: 'address',\n    render: record => {\n      let {\n        address,\n        wardName,\n        districtName,\n        provinceName\n      } = record.warehouseId;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"secondary-text\",\n        children: [address, wardName, districtName, provinceName].join(' - ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    title: 'Số lượng',\n    align: 'center',\n    dataIndex: '',\n    key: 'quantity',\n    render: record => /*#__PURE__*/_jsxDEV(AdjustNumberInput, {\n      value: record.quantity,\n      onChange: value => changeInventoryQuantity(record._id, value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const changeInventoryQuantity = (_id, quantity) => {\n    quantityChange({\n      _id,\n      quantity\n    });\n  };\n\n  const dataSource = useMemo(() => {\n    return stocks.map(item => ({ ...item,\n      warehouseId: find(warehouses, ['_id', item.warehouseId])\n    })).filter(item => item.warehouseId).filter(item => filter.search ? item.warehouseId.name.toLowerCase().trim().includes(filter.search.toLowerCase().trim()) : true);\n  }, [stocks, filter.search, warehouses]);\n  return /*#__PURE__*/_jsxDEV(InsaTable, {\n    columns: columns,\n    dataSource: dataSource,\n    rowKey: \"_id\",\n    pagination: false,\n    footer: undefined,\n    title: undefined,\n    className: \"table-inventory-quantity\",\n    bordered: true,\n    sticky: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InventoryQuantityTable, \"MiOS+sa9RqI69y0vUzwu5hoGf1c=\", false, function () {\n  return [useStocks, useWarehouses];\n});\n\n_c = InventoryQuantityTable;\nexport default InventoryQuantityTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryQuantityTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/inventory-quantity/inventory-quantity-table.tsx"],"names":["find","React","useMemo","InsaTable","AdjustNumberInput","useStocks","useWarehouses","InventoryQuantityTable","stocks","quantityChange","filter","warehouses","columns","title","align","dataIndex","key","render","text","record","address","wardName","districtName","provinceName","warehouseId","join","quantity","value","changeInventoryQuantity","_id","dataSource","map","item","search","name","toLowerCase","trim","includes","undefined"],"mappings":"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","sourcesContent":["import { ColumnType } from 'antd/lib/table';\nimport { find } from 'lodash';\nimport React, { FC, useMemo } from 'react';\nimport { InsaTable } from '../../../../components';\nimport { IProduct, IStock, IWarehouse } from '../../../../models';\nimport AdjustNumberInput from './adjust-number-input';\nimport { useStocks } from './hooks/stocks';\nimport { useWarehouses } from './hooks/warehouses';\n\ninterface IColumnItem {\n    _is: string;\n    storeId: string;\n    parentId: string;\n    quantity: number;\n    productId: IProduct;\n    warehouseId: IWarehouse;\n    createdAt: string;\n    updateAt: string;\n}\n\nconst InventoryQuantityTable: FC = () => {\n    const { stocks, quantityChange, filter } = useStocks();\n    const { warehouses } = useWarehouses();\n\n    const columns: ColumnType<IColumnItem>[] = [\n        {\n            title: 'Kho hàng',\n            align: 'center',\n            dataIndex: ['warehouseId', 'name'],\n            key: 'warehouse.name',\n            render: (text: string) => <span className=\"primary-text\">{text}</span>,\n        },\n        {\n            title: 'Địa chỉ kho hàng',\n            align: 'center',\n            dataIndex: '',\n            key: 'address',\n            render: (record: any) => {\n                let { address, wardName, districtName, provinceName } = record.warehouseId;\n\n                return (\n                    <span className=\"secondary-text\">\n                        {[address, wardName, districtName, provinceName].join(' - ')}\n                    </span>\n                );\n            },\n        },\n        {\n            title: 'Số lượng',\n            align: 'center',\n            dataIndex: '',\n            key: 'quantity',\n            render: (record: any) => (\n                <AdjustNumberInput\n                    value={record.quantity}\n                    onChange={(value: number) => changeInventoryQuantity(record._id, value)}\n                />\n            ),\n        },\n    ];\n\n    const changeInventoryQuantity = (_id: string, quantity: number) => {\n        quantityChange({ _id, quantity });\n    };\n\n    const dataSource = useMemo(() => {\n        return stocks\n            .map((item: IStock) => ({\n                ...item,\n                warehouseId: find(warehouses, ['_id', item.warehouseId]),\n            }))\n            .filter((item: any) => item.warehouseId)\n            .filter((item: any) =>\n                filter.search\n                    ? item.warehouseId.name\n                          .toLowerCase()\n                          .trim()\n                          .includes(filter.search.toLowerCase().trim())\n                    : true\n            );\n    }, [stocks, filter.search, warehouses]);\n\n    return (\n        <InsaTable\n            columns={columns}\n            dataSource={dataSource}\n            rowKey=\"_id\"\n            pagination={false}\n            footer={undefined}\n            title={undefined}\n            className=\"table-inventory-quantity\"\n            bordered\n            sticky\n        />\n    );\n};\n\nexport default InventoryQuantityTable;\n"]},"metadata":{},"sourceType":"module"}