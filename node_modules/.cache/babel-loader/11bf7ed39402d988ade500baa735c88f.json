{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-list/inventory-quantity.tsx\";\nimport React from 'react';\nimport formatMoney from '../../../helper/format-money';\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { Typography, Space } from 'antd';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InventoryQuantity = ({\n  text,\n  editingRow,\n  record\n}) => {\n  if ((editingRow === null || editingRow === void 0 ? void 0 : editingRow._id) !== record._id || (editingRow === null || editingRow === void 0 ? void 0 : editingRow.editValue) === 0) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(Space, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: formatMoney(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n      type: editingRow && editingRow.editValue > 0 ? 'success' : 'danger',\n      children: formatMoney(record.quantity + ((editingRow === null || editingRow === void 0 ? void 0 : editingRow.editValue) || 0))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InventoryQuantity;\nexport default InventoryQuantity;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryQuantity\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-list/inventory-quantity.tsx"],"names":["React","formatMoney","ArrowRightOutlined","Typography","Space","InventoryQuantity","text","editingRow","record","_id","editValue","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AAGA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,MAAlC;;;;AAQA,MAAMC,iBAA4B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AACnE,MAAI,CAAAD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEE,GAAZ,MAAoBD,MAAM,CAACC,GAA3B,IAAkC,CAAAF,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,SAAZ,MAA0B,CAAhE,EAAmE,oBAAO;AAAA,cAAGJ;AAAH,mBAAP;AAEnE,sBACI,QAAC,KAAD;AAAA,4BACI;AAAA,gBAAOL,WAAW,CAACK,IAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,IAAI,EAAEC,UAAU,IAAIA,UAAU,CAACG,SAAX,GAAuB,CAArC,GAAyC,SAAzC,GAAqD,QAA5E;AAAA,gBACKT,WAAW,CAACO,MAAM,CAACG,QAAP,IAAmB,CAAAJ,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,SAAZ,KAAyB,CAA5C,CAAD;AADhB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;KAAML,iB;AAcN,eAAeA,iBAAf","sourcesContent":["import React, { FC } from 'react';\n\nimport formatMoney from '../../../helper/format-money';\nimport { IEditRow } from './table';\n\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport { Typography, Space } from 'antd';\n\ninterface Props {\n    text: string;\n    editingRow?: IEditRow;\n    record: any;\n}\n\nconst InventoryQuantity: FC<Props> = ({ text, editingRow, record }) => {\n    if (editingRow?._id !== record._id || editingRow?.editValue === 0) return <>{text}</>;\n\n    return (\n        <Space>\n            <span>{formatMoney(text)}</span>\n            <ArrowRightOutlined />\n            <Typography.Text type={editingRow && editingRow.editValue > 0 ? 'success' : 'danger'}>\n                {formatMoney(record.quantity + (editingRow?.editValue || 0))}\n            </Typography.Text>\n        </Space>\n    );\n};\n\nexport default InventoryQuantity;\n"]},"metadata":{},"sourceType":"module"}