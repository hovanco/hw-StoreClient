{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/homepage/components/select-time-type/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { CaretDownFilled } from '@ant-design/icons';\nimport { Button, Col, Dropdown, Menu, Row } from 'antd';\nimport React from 'react';\nimport { useReport } from '../../state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listDataTime = [{\n  type: 'month',\n  title: 'Tháng'\n}, {\n  type: 'week',\n  title: 'Tuần'\n}];\n\nconst getLabel = type => {\n  const type_time = listDataTime.find(item => item.type === type);\n  if (type_time) return type_time.title;\n  return '';\n};\n\nconst SelectTimeType = props => {\n  _s();\n\n  const {\n    time,\n    selectTypeTime\n  } = useReport();\n\n  const handleSelectTypeTime = menu => {\n    selectTypeTime(menu.key);\n  };\n\n  const overlay = /*#__PURE__*/_jsxDEV(Menu, {\n    selectedKeys: [time.type],\n    onClick: handleSelectTypeTime,\n    children: listDataTime.map(item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: item.title\n    }, item.type, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    overlay: overlay,\n    className: \"warehouses-btn\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: getLabel(time.type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CaretDownFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectTimeType, \"8brgL4O4INAdDCRflIJQXw0II2A=\", false, function () {\n  return [useReport];\n});\n\n_c = SelectTimeType;\nexport default SelectTimeType;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTimeType\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/homepage/components/select-time-type/index.tsx"],"names":["CaretDownFilled","Button","Col","Dropdown","Menu","Row","React","useReport","listDataTime","type","title","getLabel","type_time","find","item","SelectTimeType","props","time","selectTypeTime","handleSelectTypeTime","menu","key","overlay","map"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,mBAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,MAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AASA,MAAMC,YAAyB,GAAG,CAC9B;AACIC,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAD8B,EAK9B;AACID,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAL8B,CAAlC;;AAWA,MAAMC,QAAQ,GAAIF,IAAD,IAAkB;AAC/B,QAAMG,SAAS,GAAGJ,YAAY,CAACK,IAAb,CAAmBC,IAAD,IAAqBA,IAAI,CAACL,IAAL,KAAcA,IAArD,CAAlB;AACA,MAAIG,SAAJ,EAAe,OAAOA,SAAS,CAACF,KAAjB;AACf,SAAO,EAAP;AACH,CAJD;;AAMA,MAAMK,cAAc,GAAIC,KAAD,IAAkB;AAAA;;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BX,SAAS,EAA1C;;AAEA,QAAMY,oBAAoB,GAAIC,IAAD,IAAe;AACxCF,IAAAA,cAAc,CAACE,IAAI,CAACC,GAAN,CAAd;AACH,GAFD;;AAIA,QAAMC,OAAO,gBACT,QAAC,IAAD;AAAM,IAAA,YAAY,EAAE,CAACL,IAAI,CAACR,IAAN,CAApB;AAAiC,IAAA,OAAO,EAAEU,oBAA1C;AAAA,cACKX,YAAY,CAACe,GAAb,CAAkBT,IAAD,iBACd,QAAC,IAAD,CAAM,IAAN;AAAA,gBAA4BA,IAAI,CAACJ;AAAjC,OAAgBI,IAAI,CAACL,IAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;;AAQA,sBACI,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEa,OAAnB;AAA4B,IAAA,SAAS,EAAC,gBAAtC;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,eAAb;AAA6B,QAAA,KAAK,EAAC,QAAnC;AAAA,gCACI,QAAC,GAAD;AAAA,oBAAMX,QAAQ,CAACM,IAAI,CAACR,IAAN;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,iCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA3BD;;GAAMM,c;UAC+BR,S;;;KAD/BQ,c;AA6BN,eAAeA,cAAf","sourcesContent":["import { CaretDownFilled } from '@ant-design/icons';\nimport { Button, Col, Dropdown, Menu, Row } from 'antd';\nimport React from 'react';\nimport { useReport } from '../../state';\n\ninterface Props {}\n\ninterface IDataTime {\n    type: string;\n    title: string;\n}\n\nconst listDataTime: IDataTime[] = [\n    {\n        type: 'month',\n        title: 'Tháng',\n    },\n    {\n        type: 'week',\n        title: 'Tuần',\n    },\n];\n\nconst getLabel = (type: string) => {\n    const type_time = listDataTime.find((item: IDataTime) => item.type === type);\n    if (type_time) return type_time.title;\n    return '';\n};\n\nconst SelectTimeType = (props: Props) => {\n    const { time, selectTypeTime } = useReport();\n\n    const handleSelectTypeTime = (menu: any) => {\n        selectTypeTime(menu.key);\n    };\n\n    const overlay = (\n        <Menu selectedKeys={[time.type]} onClick={handleSelectTypeTime}>\n            {listDataTime.map((item: IDataTime) => (\n                <Menu.Item key={item.type}>{item.title}</Menu.Item>\n            ))}\n        </Menu>\n    );\n\n    return (\n        <Dropdown overlay={overlay} className=\"warehouses-btn\">\n            <Button>\n                <Row justify=\"space-between\" align=\"middle\">\n                    <Col>{getLabel(time.type)}</Col>\n                    <Col>\n                        <CaretDownFilled />\n                    </Col>\n                </Row>\n            </Button>\n        </Dropdown>\n    );\n};\n\nexport default SelectTimeType;\n"]},"metadata":{},"sourceType":"module"}