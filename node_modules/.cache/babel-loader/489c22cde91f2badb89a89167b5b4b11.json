{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/components/product-form-media/image.tsx\",\n    _s = $RefreshSig$();\n\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\nimport { get } from 'lodash';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { removeImagesRequest } from '../../../../api/upload-api';\nimport constants from '../../../../constants';\nimport './image.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Image = ({\n  file,\n  removeImage,\n  selectImage\n}) => {\n  _s();\n\n  const token = useSelector(state => state.auth.token);\n  const [loading, setLoading] = useState(false);\n  const isImage = typeof file === 'string';\n\n  const handleSelectImage = () => {\n    if (selectImage) {\n      selectImage();\n    }\n  };\n\n  const handleRemoveImage = async () => {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    if (isImage) {\n      await removeImagesRequest({\n        token: get(token, 'accessToken'),\n        fileNames: [file]\n      });\n      removeImage();\n      setLoading(false);\n    } else {\n      removeImage();\n      setLoading(false);\n    }\n  };\n\n  const srcImage = isImage ? `${constants.URL_IMG}${file}` : file.thumbUrl;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productImage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      onClick: handleSelectImage,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: srcImage,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), isImage && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Ch\\u1ECDn \\u1EA3nh hi\\u1EC3n th\\u1ECB\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"check\",\n          children: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"remove\",\n      onClick: handleRemoveImage,\n      children: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Image, \"8GR452Ah+8w7w31/E17xz4sF7CU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Image;\nexport { Image };\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/components/product-form-media/image.tsx"],"names":["CheckOutlined","CloseOutlined","Spin","Tooltip","get","React","useState","useSelector","removeImagesRequest","constants","Image","file","removeImage","selectImage","token","state","auth","loading","setLoading","isImage","handleSelectImage","handleRemoveImage","fileNames","srcImage","URL_IMG","thumbUrl"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,mBAA7C;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,MAA9B;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAO,cAAP;;;AAQA,MAAMC,KAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAD,KAAwC;AAAA;;AAC7D,QAAMC,KAAK,GAAGP,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACC,IAAN,CAAWF,KAA/B,CAAzB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,OAAO,GAAG,OAAOR,IAAP,KAAgB,QAAhC;;AAEA,QAAMS,iBAAiB,GAAG,MAAM;AAC5B,QAAIP,WAAJ,EAAiB;AACbA,MAAAA,WAAW;AACd;AACJ,GAJD;;AAMA,QAAMQ,iBAAiB,GAAG,YAAY;AAClC,QAAIJ,OAAJ,EAAa;AACT;AACH;;AAEDC,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAIC,OAAJ,EAAa;AACT,YAAMX,mBAAmB,CAAC;AACtBM,QAAAA,KAAK,EAAEV,GAAG,CAACU,KAAD,EAAQ,aAAR,CADY;AAEtBQ,QAAAA,SAAS,EAAE,CAACX,IAAD;AAFW,OAAD,CAAzB;AAKAC,MAAAA,WAAW;AACXM,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARD,MAQO;AACHN,MAAAA,WAAW;AACXM,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAnBD;;AAqBA,QAAMK,QAAQ,GAAGJ,OAAO,GAAI,GAAEV,SAAS,CAACe,OAAQ,GAAEb,IAAK,EAA/B,GAAmCA,IAAI,CAACc,QAAhE;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,OAAO,EAAEL,iBAA9B;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEG,QAAV;AAAoB,QAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKN,OAAO,iBACJ;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJR,EAQKE,OAAO,iBACJ,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uCAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,iCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAEE,iBAAlC;AAAA,6BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA3DD;;GAAMX,K;UACYH,W;;;KADZG,K;AA6DN,SAASA,KAAT","sourcesContent":["import { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\nimport { get } from 'lodash';\nimport React, { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { removeImagesRequest } from '../../../../api/upload-api';\nimport constants from '../../../../constants';\nimport { IState } from '../../../../store/rootReducer';\nimport './image.less';\n\ninterface Props {\n    selectImage?: () => void;\n    removeImage: () => void;\n    file: string | any;\n}\n\nconst Image: FC<Props> = ({ file, removeImage, selectImage }) => {\n    const token = useSelector((state: IState) => state.auth.token);\n    const [loading, setLoading] = useState(false);\n\n    const isImage = typeof file === 'string';\n\n    const handleSelectImage = () => {\n        if (selectImage) {\n            selectImage();\n        }\n    };\n\n    const handleRemoveImage = async () => {\n        if (loading) {\n            return;\n        }\n\n        setLoading(true);\n\n        if (isImage) {\n            await removeImagesRequest({\n                token: get(token, 'accessToken'),\n                fileNames: [file],\n            });\n\n            removeImage();\n            setLoading(false);\n        } else {\n            removeImage();\n            setLoading(false);\n        }\n    };\n\n    const srcImage = isImage ? `${constants.URL_IMG}${file}` : file.thumbUrl;\n\n    return (\n        <div className=\"productImage\">\n            <div className=\"img\" onClick={handleSelectImage}>\n                <img src={srcImage} alt=\"\" />\n\n                {loading && (\n                    <span className=\"loading\">\n                        <Spin size=\"small\" />\n                    </span>\n                )}\n                {isImage && (\n                    <Tooltip title=\"Chọn ảnh hiển thị\">\n                        <span className=\"check\">\n                            <CheckOutlined />\n                        </span>\n                    </Tooltip>\n                )}\n            </div>\n\n            <span className=\"remove\" onClick={handleRemoveImage}>\n                <CloseOutlined />\n            </span>\n        </div>\n    );\n};\n\nexport { Image };\n"]},"metadata":{},"sourceType":"module"}