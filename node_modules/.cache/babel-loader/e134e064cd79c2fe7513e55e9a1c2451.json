{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/product-form-properties/select-attributes/attribute-item.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Input, Select, Space, Typography } from 'antd';\nimport React, { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport iconClose from \"../../../../../assets/images/ic-close.svg\";\nimport useAttributes from '../../../context/use-attribute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttributeItem = ({\n  attribute\n}) => {\n  _s();\n\n  const {\n    attributeOptions,\n    changeAttribute,\n    isLocalAttributeSign,\n    updateAttribute\n  } = useAttributes();\n  const [newOptionName, setNewOptionName] = useState(attribute.name);\n  const listAttribute = useSelector(state => state.store.attributes.data);\n  const suggestTags = useMemo(() => {\n    var _listAttribute$filter;\n\n    return ((_listAttribute$filter = listAttribute.filter(i => attribute._id === i._id)[0]) === null || _listAttribute$filter === void 0 ? void 0 : _listAttribute$filter.tags) || [];\n  }, [attribute, listAttribute]);\n\n  const selectNewAttribute = attributeId => changeAttribute(attribute, attributeId);\n\n  const changeAttributeTags = tags => updateAttribute({ ...attribute,\n    tags\n  });\n\n  const addTag = tag => {\n    if (attribute.tags.includes(tag)) return;\n    let newTags = attribute.tags ? [...attribute.tags] : [];\n    newTags.push(tag);\n    changeAttributeTags([...newTags]);\n  };\n\n  const removeTag = tag => {\n    if (!attribute.tags.includes(tag)) return;\n    let newTags = attribute.tags ? [...attribute.tags] : [];\n    newTags = newTags.filter(item => item !== tag);\n    changeAttributeTags([...newTags]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 6,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: attribute._id,\n        onChange: selectNewAttribute,\n        children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n          value: attribute._id,\n          children: attribute.name || 'New option'\n        }, `attribute_option_${attribute._id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), attributeOptions.map(attrOption => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: attrOption._id,\n          children: attrOption.name\n        }, `attribute_option_${attrOption._id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: 'new-option',\n          children: \"New option\"\n        }, `attribute_option_new_option`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), attribute[isLocalAttributeSign] && /*#__PURE__*/_jsxDEV(Input, {\n        className: \"new-option-name\",\n        placeholder: \"Option name\",\n        value: newOptionName,\n        onChange: e => setNewOptionName(e.target.value),\n        onBlur: () => updateAttribute({ ...attribute,\n          name: newOptionName\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      span: 14,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        mode: \"tags\",\n        onChange: changeAttributeTags,\n        placeholder: \"Please select\",\n        value: attribute.tags,\n        className: \"prod-form-properties__select\",\n        dropdownStyle: {\n          display: 'none'\n        },\n        tagRender: ({\n          label\n        }) => /*#__PURE__*/_jsxDEV(Space, {\n          className: \"prod-form-properties__tag\",\n          children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: iconClose,\n            alt: \"\",\n            onClick: () => removeTag(label)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), suggestTags.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggest-tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nh\\xE3n \\u0111\\xE3 c\\xF3: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag-list\",\n          children: suggestTags.map((tag, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `tag${attribute.tags.includes(tag) ? ' disabled' : ''}`,\n            onClick: () => addTag(tag),\n            children: tag\n          }, `suggest-tag-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AttributeItem, \"IgAjhLxKUNVeFIkV7z91VjVcyiI=\", false, function () {\n  return [useAttributes, useSelector];\n});\n\n_c = AttributeItem;\nexport default AttributeItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttributeItem\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/product-new/product-form-properties/select-attributes/attribute-item.tsx"],"names":["Col","Input","Select","Space","Typography","React","useMemo","useState","useSelector","useAttributes","AttributeItem","attribute","attributeOptions","changeAttribute","isLocalAttributeSign","updateAttribute","newOptionName","setNewOptionName","name","listAttribute","state","store","attributes","data","suggestTags","filter","i","_id","tags","selectNewAttribute","attributeId","changeAttributeTags","addTag","tag","includes","newTags","push","removeTag","item","map","attrOption","e","target","value","display","label","iconClose","length","idx"],"mappings":"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","sourcesContent":["import { Col, Input, Select, Space, Typography } from 'antd';\nimport React, { FC, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport iconClose from '../../../../../assets/images/ic-close.svg';\nimport { IAttribute } from '../../../../../models';\nimport { IState } from '../../../../../store/rootReducer';\nimport { IAttributeOption } from '../../../context/interface';\nimport useAttributes from '../../../context/use-attribute';\n\ntype Props = {\n    attribute: IAttributeOption;\n};\n\nconst AttributeItem: FC<Props> = ({ attribute }) => {\n    const { attributeOptions, changeAttribute, isLocalAttributeSign, updateAttribute } =\n        useAttributes();\n\n    const [newOptionName, setNewOptionName] = useState<string>(attribute.name);\n    const listAttribute: IAttribute[] = useSelector((state: IState) => state.store.attributes.data);\n\n    const suggestTags = useMemo(() => {\n        return listAttribute.filter((i) => attribute._id === i._id)[0]?.tags || [];\n    }, [attribute, listAttribute]);\n\n    const selectNewAttribute = (attributeId: string) => changeAttribute(attribute, attributeId);\n\n    const changeAttributeTags = (tags: string[]) => updateAttribute({ ...attribute, tags });\n\n    const addTag = (tag: string) => {\n        if (attribute.tags.includes(tag)) return;\n\n        let newTags = attribute.tags ? [...attribute.tags] : [];\n        newTags.push(tag);\n\n        changeAttributeTags([...newTags]);\n    };\n\n    const removeTag = (tag: string) => {\n        if (!attribute.tags.includes(tag)) return;\n\n        let newTags = attribute.tags ? [...attribute.tags] : [];\n        newTags = newTags.filter((item: string) => item !== tag);\n\n        changeAttributeTags([...newTags]);\n    };\n\n    return (\n        <>\n            <Col span={6}>\n                <Select defaultValue={attribute._id} onChange={selectNewAttribute}>\n                    <Select.Option value={attribute._id} key={`attribute_option_${attribute._id}`}>\n                        {attribute.name || 'New option'}\n                    </Select.Option>\n                    {attributeOptions.map((attrOption: IAttribute) => (\n                        <Select.Option\n                            value={attrOption._id}\n                            key={`attribute_option_${attrOption._id}`}\n                        >\n                            {attrOption.name}\n                        </Select.Option>\n                    ))}\n                    <Select.Option value={'new-option'} key={`attribute_option_new_option`}>\n                        New option\n                    </Select.Option>\n                </Select>\n                {attribute[isLocalAttributeSign as keyof IAttributeOption] && (\n                    <Input\n                        className='new-option-name'\n                        placeholder='Option name'\n                        value={newOptionName}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            setNewOptionName(e.target.value)\n                        }\n                        onBlur={() => updateAttribute({ ...attribute, name: newOptionName })}\n                    />\n                )}\n            </Col>\n            <Col span={14}>\n                <Select\n                    mode='tags'\n                    onChange={changeAttributeTags}\n                    placeholder='Please select'\n                    value={attribute.tags}\n                    className='prod-form-properties__select'\n                    dropdownStyle={{ display: 'none' }}\n                    tagRender={({ label }) => (\n                        <Space className='prod-form-properties__tag'>\n                            <Typography.Text>{label}</Typography.Text>\n                            <img\n                                src={iconClose}\n                                alt=''\n                                onClick={() => removeTag(label as string)}\n                            />\n                        </Space>\n                    )}\n                ></Select>\n\n                {suggestTags.length ? (\n                    <div className='suggest-tags'>\n                        <span>Nhãn đã có: </span>\n                        <span className='tag-list'>\n                            {suggestTags.map((tag: string, idx: number) => (\n                                <span\n                                    key={`suggest-tag-${idx}`}\n                                    className={`tag${\n                                        attribute.tags.includes(tag) ? ' disabled' : ''\n                                    }`}\n                                    onClick={() => addTag(tag)}\n                                >\n                                    {tag}\n                                </span>\n                            ))}\n                        </span>\n                    </div>\n                ) : (\n                    <></>\n                )}\n            </Col>\n        </>\n    );\n};\n\nexport default AttributeItem;\n"]},"metadata":{},"sourceType":"module"}