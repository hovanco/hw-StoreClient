{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-product/table-stock.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Table, Typography } from 'antd';\nimport { find } from 'lodash';\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useWarehouses } from '../../../../components/warehouses/useWarehouse';\nimport formatMoney from '../../../../helper/format-money';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableStock = () => {\n  _s();\n\n  const stocks = useSelector(state => state.store.stocks);\n  const {\n    warehouses\n  } = useWarehouses();\n  const columns = [{\n    title: 'Kho hàng',\n    dataIndex: ['warehouseId', 'name'],\n    key: 'warehouseId'\n  }, {\n    title: 'Địa chỉ kho',\n    dataIndex: '',\n    key: 'address',\n    render: record => {\n      let {\n        address,\n        wardName,\n        districtName,\n        provinceName\n      } = record.warehouseId;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"secondary-text\",\n        children: [address, wardName, districtName, provinceName].join(' - ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    title: 'Tồn kho',\n    dataIndex: 'quantity',\n    key: 'quantity',\n    align: 'center',\n    render: quantity => `${formatMoney(quantity)}`,\n    width: 120\n  }];\n  const dataSource = useMemo(() => {\n    return stocks.data.map(item => ({ ...item,\n      warehouseId: find(warehouses, ['_id', item.warehouseId])\n    })).filter(item => item.warehouseId);\n  }, [stocks, warehouses]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-table-stock\",\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      children: \"T\\xECnh tr\\u1EA1ng t\\u1ED3n kho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      sticky: true,\n      dataSource: dataSource,\n      columns: columns,\n      rowKey: \"_id\",\n      pagination: false,\n      className: \"table-dark-odd table-stock\",\n      loading: stocks.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableStock, \"gW4OSpa20X96/DWWFlLIr4djABQ=\", false, function () {\n  return [useSelector, useWarehouses];\n});\n\n_c = TableStock;\nexport default TableStock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableStock\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/order/components/search-product/table-stock.tsx"],"names":["Card","Table","Typography","find","React","useMemo","useSelector","useWarehouses","formatMoney","TableStock","stocks","state","store","warehouses","columns","title","dataIndex","key","render","record","address","wardName","districtName","provinceName","warehouseId","join","align","quantity","width","dataSource","data","map","item","filter","loading"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,MAAxC;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,aAAT,QAA8B,gDAA9B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;;;AAWA,MAAMC,UAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGJ,WAAW,CAAEK,KAAD,IAAmBA,KAAK,CAACC,KAAN,CAAYF,MAAhC,CAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAiBN,aAAa,EAApC;AAEA,QAAMO,OAAiC,GAAG,CACtC;AACIC,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,SAAS,EAAE,CAAC,aAAD,EAAgB,MAAhB,CAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GADsC,EAOtC;AACIF,IAAAA,KAAK,EAAE,aADX;AAEIC,IAAAA,SAAS,EAAE,EAFf;AAGIC,IAAAA,GAAG,EAAE,SAHT;AAIIC,IAAAA,MAAM,EAAGC,MAAD,IAAiB;AACrB,UAAI;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA,YAArB;AAAmCC,QAAAA;AAAnC,UAAoDJ,MAAM,CAACK,WAA/D;AAEA,0BACI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,kBACK,CAACJ,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDE,IAAhD,CAAqD,KAArD;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AAZL,GAPsC,EAsBtC;AACIV,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE,UAFf;AAGIC,IAAAA,GAAG,EAAE,UAHT;AAIIS,IAAAA,KAAK,EAAE,QAJX;AAKIR,IAAAA,MAAM,EAAGS,QAAD,IAAuB,GAAEnB,WAAW,CAACmB,QAAD,CAAW,EAL3D;AAMIC,IAAAA,KAAK,EAAE;AANX,GAtBsC,CAA1C;AAgCA,QAAMC,UAAU,GAAGxB,OAAO,CAAC,MAAM;AAC7B,WAAOK,MAAM,CAACoB,IAAP,CACFC,GADE,CACGC,IAAD,KAAmB,EACpB,GAAGA,IADiB;AAEpBR,MAAAA,WAAW,EAAErB,IAAI,CAACU,UAAD,EAAa,CAAC,KAAD,EAAQmB,IAAI,CAACR,WAAb,CAAb;AAFG,KAAnB,CADF,EAKFS,MALE,CAKMD,IAAD,IAAeA,IAAI,CAACR,WALzB,CAAP;AAMH,GAPyB,EAOvB,CAACd,MAAD,EAASG,UAAT,CAPuB,CAA1B;AASA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA,4BACI,QAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,UAAU,EAAEgB,UAFhB;AAGI,MAAA,OAAO,EAAEf,OAHb;AAII,MAAA,MAAM,EAAC,KAJX;AAKI,MAAA,UAAU,EAAE,KALhB;AAMI,MAAA,SAAS,EAAC,4BANd;AAOI,MAAA,OAAO,EAAEJ,MAAM,CAACwB;AAPpB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA3DD;;GAAMzB,U;UACaH,W,EACQC,a;;;KAFrBE,U;AA6DN,eAAeA,UAAf","sourcesContent":["import { Card, Table, Typography } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { find } from 'lodash';\nimport React, { FC, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useWarehouses } from '../../../../components/warehouses/useWarehouse';\nimport formatMoney from '../../../../helper/format-money';\nimport { IStock, IWarehouse } from '../../../../models';\nimport { IState } from '../../../../store/rootReducer';\n\ninterface IColumnItem {\n    _id: string;\n    storeId: string;\n    quantity: number;\n    warehouseId?: IWarehouse;\n}\n\nconst TableStock: FC = () => {\n    const stocks = useSelector((state: IState) => state.store.stocks);\n    const { warehouses } = useWarehouses();\n\n    const columns: ColumnsType<IColumnItem> = [\n        {\n            title: 'Kho hàng',\n            dataIndex: ['warehouseId', 'name'],\n            key: 'warehouseId',\n        },\n\n        {\n            title: 'Địa chỉ kho',\n            dataIndex: '',\n            key: 'address',\n            render: (record: any) => {\n                let { address, wardName, districtName, provinceName } = record.warehouseId;\n\n                return (\n                    <span className=\"secondary-text\">\n                        {[address, wardName, districtName, provinceName].join(' - ')}\n                    </span>\n                );\n            },\n        },\n\n        {\n            title: 'Tồn kho',\n            dataIndex: 'quantity',\n            key: 'quantity',\n            align: 'center',\n            render: (quantity: number) => `${formatMoney(quantity)}`,\n            width: 120,\n        },\n    ];\n\n    const dataSource = useMemo(() => {\n        return stocks.data\n            .map((item: IStock) => ({\n                ...item,\n                warehouseId: find(warehouses, ['_id', item.warehouseId]),\n            }))\n            .filter((item: any) => item.warehouseId);\n    }, [stocks, warehouses]);\n\n    return (\n        <Card className=\"card-table-stock\">\n            <Typography.Title level={3}>Tình trạng tồn kho</Typography.Title>\n            <Table\n                sticky\n                dataSource={dataSource}\n                columns={columns}\n                rowKey=\"_id\"\n                pagination={false}\n                className=\"table-dark-odd table-stock\"\n                loading={stocks.loading}\n            />\n        </Card>\n    );\n};\n\nexport default TableStock;\n"]},"metadata":{},"sourceType":"module"}