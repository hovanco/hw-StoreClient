{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/components/error-boundary/index.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    const {\n      errorInfo,\n      error\n    } = this.state;\n\n    if (errorInfo) {\n      // Error path\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: [error && error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), errorInfo.componentStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/components/error-boundary/index.tsx"],"names":["React","ErrorBoundary","Component","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","children"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;;AAMA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAAwD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,CAACF,KAAD,EAAaC,SAAb,EAA6B;AAC1C;AACA,SAAKE,QAAL,CAAc;AACVH,MAAAA,KAAK,EAAEA,KADG;AAEVC,MAAAA,SAAS,EAAEA;AAFD,KAAd,EAF0C,CAM1C;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAAuB,KAAKD,KAAlC;;AACA,QAAIE,SAAJ,EAAe;AACX;AACA,0BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAS,UAAA,KAAK,EAAE;AAAEI,YAAAA,UAAU,EAAE;AAAd,WAAhB;AAAA,qBACKL,KAAK,IAAIA,KAAK,CAACM,QAAN,EADd,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKL,SAAS,CAACM,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAdI,CAeL;;;AACA,WAAO,KAAKT,KAAL,CAAWU,QAAlB;AACH;;AAhCmD;;AAmCxD,eAAeb,aAAf","sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface Props {\n    children: ReactNode;\n}\n\nclass ErrorBoundary extends React.Component<Props, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    componentDidCatch(error: any, errorInfo: any) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        const { errorInfo, error } = this.state;\n        if (errorInfo) {\n            // Error path\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\n                        {error && error.toString()}\n                        <br />\n                        {errorInfo.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}