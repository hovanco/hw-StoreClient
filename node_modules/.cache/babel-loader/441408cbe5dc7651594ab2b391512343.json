{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/homepage/components/user-guide-post/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ArrowRightOutlined, ClockCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Row, Space, Typography } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { getPosts } from '../../../../api/blog-api';\nimport { Loading } from '../../../../components';\nimport constants from '../../../../constants';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  post\n}) => /*#__PURE__*/_jsxDEV(Row, {\n  gutter: [20, 20],\n  className: \"user-guide-post\",\n  children: [/*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `${constants.INSA_HOMEPAGE}/kham-pha${post.uri}`,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        shape: \"square\",\n        style: {\n          width: 230,\n          height: 138\n        },\n        src: post.featuredImage.node.sourceUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Col, {\n    style: {\n      flex: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      size: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 5,\n        style: {\n          margin: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${constants.INSA_HOMEPAGE}/kham-pha${post.uri}`,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(ClockCircleOutlined, {\n            style: {\n              color: '#9e9e9e'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n            style: {\n              color: '#9e9e9e'\n            },\n            children: moment(post.date).format('DD/MM/YYYY')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#787878'\n        },\n        dangerouslySetInnerHTML: {\n          __html: post.excerpt\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          borderRadius: 30\n        },\n        href: `${constants.INSA_HOMEPAGE}/kham-pha${post.uri}`,\n        target: \"_blank\",\n        children: [\"\\u0110\\u1ECDc ti\\u1EBFp \", /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)]\n}, post.id, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this);\n\n_c = Post;\n\nfunction usePosts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function loadPosts() {\n      try {\n        setLoading(true);\n        const response = await getPosts();\n        setPosts(get(response.data, 'posts.nodes') || []);\n      } catch (error) {} finally {\n        setLoading(false);\n      }\n    }\n\n    loadPosts();\n  }, []);\n  return useMemo(() => ({\n    loading,\n    posts\n  }), [loading, posts]);\n}\n\n_s(usePosts, \"J5DD74B0mljvML+gF4ZtTtQNYSo=\");\n\nconst UserGuidePost = () => {\n  _s2();\n\n  const {\n    loading,\n    posts\n  } = usePosts();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: [20, 20],\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UserGuidePost, \"9PoN7dJWKdsNnNZTAYiL68IJlzs=\", false, function () {\n  return [usePosts];\n});\n\n_c2 = UserGuidePost;\nexport default UserGuidePost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"UserGuidePost\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/homepage/components/user-guide-post/index.tsx"],"names":["ArrowRightOutlined","ClockCircleOutlined","Button","Col","Row","Space","Typography","Avatar","moment","get","React","useEffect","useMemo","useState","getPosts","Loading","constants","Post","post","INSA_HOMEPAGE","uri","width","height","featuredImage","node","sourceUrl","flex","margin","title","color","date","format","__html","excerpt","borderRadius","id","usePosts","posts","setPosts","loading","setLoading","loadPosts","response","data","error","UserGuidePost","map"],"mappings":"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","sourcesContent":["import { ArrowRightOutlined, ClockCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Row, Space, Typography } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { getPosts } from '../../../../api/blog-api';\nimport { Loading } from '../../../../components';\nimport constants from '../../../../constants';\nimport './style.less';\n\ninterface IPost {\n    id: string;\n    title: string;\n    description: string;\n    link: string;\n\n    date: Date;\n    excerpt: string;\n    featuredImage: {\n        node: {\n            id: string;\n            sourceUrl: string;\n        };\n    };\n    slug: string;\n    uri: string;\n}\n\nconst Post: FC<{ post: IPost }> = ({ post }) => (\n    <Row key={post.id} gutter={[20, 20]} className='user-guide-post'>\n        <Col>\n            <a\n                href={`${constants.INSA_HOMEPAGE}/kham-pha${post.uri}`}\n                target='_blank'\n                rel='noreferrer'\n            >\n                <Avatar\n                    shape='square'\n                    style={{ width: 230, height: 138 }}\n                    src={post.featuredImage.node.sourceUrl}\n                />\n            </a>\n        </Col>\n        <Col style={{ flex: 1 }}>\n            <Space direction='vertical' size={3}>\n                <Typography.Title level={5} style={{ margin: 0 }}>\n                    <a\n                        href={`${constants.INSA_HOMEPAGE}/kham-pha${post.uri}`}\n                        target='_blank'\n                        rel='noreferrer'\n                    >\n                        {post.title}\n                    </a>\n                </Typography.Title>\n                <div>\n                    <Space>\n                        <ClockCircleOutlined style={{ color: '#9e9e9e' }} />\n                        <Typography.Text style={{ color: '#9e9e9e' }}>\n                            {moment(post.date).format('DD/MM/YYYY')}\n                        </Typography.Text>\n                    </Space>\n                </div>\n\n                <div\n                    style={{ color: '#787878' }}\n                    dangerouslySetInnerHTML={{ __html: post.excerpt }}\n                ></div>\n\n                <Button\n                    style={{ borderRadius: 30 }}\n                    href={`${constants.INSA_HOMEPAGE}/kham-pha${post.uri}`}\n                    target='_blank'\n                >\n                    Đọc tiếp <ArrowRightOutlined />\n                </Button>\n            </Space>\n        </Col>\n    </Row>\n);\n\nfunction usePosts() {\n    const [posts, setPosts] = useState<any[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        async function loadPosts() {\n            try {\n                setLoading(true);\n                const response = await getPosts();\n\n                setPosts(get(response.data, 'posts.nodes') || []);\n            } catch (error) {\n            } finally {\n                setLoading(false);\n            }\n        }\n        loadPosts();\n    }, []);\n\n    return useMemo(\n        () => ({\n            loading,\n            posts,\n        }),\n        [loading, posts],\n    );\n}\n\nconst UserGuidePost: FC = () => {\n    const { loading, posts } = usePosts();\n\n    if (loading) {\n        return <Loading full />;\n    }\n\n    return (\n        <Row gutter={[20, 20]}>\n            {posts.map((post) => (\n                <Col span={24} key={post.id}>\n                    <Post key={post.id} post={post} />\n                </Col>\n            ))}\n        </Row>\n    );\n};\n\nexport default UserGuidePost;\n"]},"metadata":{},"sourceType":"module"}