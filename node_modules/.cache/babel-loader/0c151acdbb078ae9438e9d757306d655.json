{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/general-information/components/other-infor/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, message } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport storeApi from '../../../../../api/store-api';\nimport { getToken } from '../../../../../api/token';\nimport { uploadImagesRequest } from '../../../../../api/upload-api';\nimport imgPlaceholder from \"../../../../../assets/images/img-placeholder.svg\";\nimport { Loading } from '../../../../../components';\nimport constants from '../../../../../constants';\nimport types from '../../../../../reducers/storeState/type';\nimport './other-infor.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst label = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"labelLogo\",\n  children: [\"Logo \", /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"(PNG, JPG, JPEG)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 14\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 5\n}, this);\n\nconst OtherInfor = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const store = useSelector(state => state.store.data);\n\n  const onChange = async info => {\n    const accessToken = getToken('accessToken');\n\n    if (info.file && accessToken) {\n      setLoading(true);\n\n      try {\n        const response = await uploadImagesRequest({\n          token: accessToken,\n          storeId: store._id,\n          files: [info.file.originFileObj]\n        });\n        const data = {\n          logoUrl: response[0].key\n        };\n        const newStore = await storeApi.updateStore(store._id, data);\n        dispatch({\n          type: types.SET_STORE,\n          payload: newStore\n        });\n        message.success('Cập nhật logo cho cửa hàng thành công');\n      } catch (error) {\n        message.error('Lỗi cập nhật logo cho cửa hàng');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  if (store.logoUrl) {}\n\n  const renderLogo = () => {\n    if (store.logoUrl) {\n      const srcImage = `${constants.URL_IMG}${store.logoUrl}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoStore\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: srcImage,\n          alt: store.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logoShop\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgPlaceholder,\n        alt: \"img-insa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ch\\u1ECDn ho\\u1EB7c k\\xE9o th\\u1EA3 \\u0111\\u1EC3 t\\u1EA3i \\u1EA3nh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    label: label,\n    children: /*#__PURE__*/_jsxDEV(ImgCrop, {\n      rotate: true,\n      children: /*#__PURE__*/_jsxDEV(Dragger, {\n        showUploadList: false,\n        accept: \".png, .jpeg, .jpg\",\n        onChange: onChange,\n        customRequest: () => {},\n        children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n          full: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this), renderLogo()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OtherInfor, \"aMHTLrDyrRm/WMdZXqaA+gWBiuY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = OtherInfor;\nexport default OtherInfor;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherInfor\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/setting/general-information/components/other-infor/index.tsx"],"names":["Form","message","ImgCrop","Dragger","React","useState","useDispatch","useSelector","storeApi","getToken","uploadImagesRequest","Loading","constants","types","label","OtherInfor","dispatch","loading","setLoading","store","state","data","onChange","info","accessToken","file","response","token","storeId","_id","files","originFileObj","logoUrl","key","newStore","updateStore","type","SET_STORE","payload","success","error","renderLogo","srcImage","URL_IMG","name","imgPlaceholder"],"mappings":"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","sourcesContent":["import { Form, message } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport storeApi from '../../../../../api/store-api';\nimport { getToken } from '../../../../../api/token';\nimport { uploadImagesRequest } from '../../../../../api/upload-api';\nimport imgPlaceholder from '../../../../../assets/images/img-placeholder.svg';\nimport { Loading } from '../../../../../components';\nimport constants from '../../../../../constants';\nimport types from '../../../../../reducers/storeState/type';\nimport { IState } from '../../../../../store/rootReducer';\nimport './other-infor.less';\n\nconst label = (\n    <div className=\"labelLogo\">\n        Logo <span>(PNG, JPG, JPEG)</span>\n    </div>\n);\n\nconst OtherInfor: FC = () => {\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState<boolean>(false);\n    const store = useSelector((state: IState) => state.store.data);\n\n    const onChange = async (info: UploadChangeParam<UploadFile<any>>) => {\n        const accessToken = getToken('accessToken');\n\n        if (info.file && accessToken) {\n            setLoading(true);\n\n            try {\n                const response = await uploadImagesRequest({\n                    token: accessToken,\n                    storeId: store._id as string,\n                    files: [info.file.originFileObj],\n                });\n\n                const data = {\n                    logoUrl: response[0].key as string,\n                };\n\n                const newStore = await storeApi.updateStore(store._id as string, data);\n\n                dispatch({\n                    type: types.SET_STORE,\n                    payload: newStore,\n                });\n                message.success('Cập nhật logo cho cửa hàng thành công');\n            } catch (error) {\n                message.error('Lỗi cập nhật logo cho cửa hàng');\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    if (store.logoUrl) {\n    }\n\n    const renderLogo = () => {\n        if (store.logoUrl) {\n            const srcImage = `${constants.URL_IMG}${store.logoUrl}`;\n            return (\n                <div className=\"logoStore\">\n                    <img src={srcImage} alt={store.name} />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"logoShop\">\n                <img src={imgPlaceholder} alt=\"img-insa\" />\n                <p>Chọn hoặc kéo thả để tải ảnh</p>\n            </div>\n        );\n    };\n\n    return (\n        <Form.Item label={label}>\n            <ImgCrop rotate>\n                <Dragger\n                    showUploadList={false}\n                    accept=\".png, .jpeg, .jpg\"\n                    onChange={onChange}\n                    customRequest={() => {}}\n                >\n                    {loading && <Loading full />}\n                    {renderLogo()}\n                </Dragger>\n            </ImgCrop>\n        </Form.Item>\n    );\n};\n\nexport default OtherInfor;\n"]},"metadata":{},"sourceType":"module"}