{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/report/components/report-tabs/report-tabs.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Col, Row, Tabs, Typography } from 'antd';\nimport cls from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport theme from '../../../../theme';\nimport { ReportRouteType } from '../../interface';\nimport { ReportCustomerTabs, ReportFinancinalTabs, ReportSaleTabs, ReportWareHouseTabs, tabCustomer, tabInventory, tabRevenue, tabWareProfitLoss } from './list-tabs';\nimport './report-tabs.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\n\nconst ReportTabs = ({\n  type,\n  isSingleTab,\n  changeReportItem,\n  changeReportTab\n}) => {\n  _s();\n\n  const [activeTab, setActiveTab] = useState('revenue');\n  const [activeTabItem, setActiveTabItem] = useState(tabRevenue[0].key);\n\n  const currentTabs = () => {\n    switch (type) {\n      case ReportRouteType.Sale:\n        return ReportSaleTabs;\n\n      case ReportRouteType.WareHouse:\n        return ReportWareHouseTabs;\n\n      case ReportRouteType.Financinal:\n        return ReportFinancinalTabs;\n\n      case ReportRouteType.Customer:\n        return ReportCustomerTabs;\n\n      default:\n        return [];\n    }\n  };\n\n  const handleChangeTab = value => {\n    const nextTab = currentTabs().find(e => e.key === value);\n    setActiveTab(value);\n    setActiveTabItem(nextTab === null || nextTab === void 0 ? void 0 : nextTab.tabs[0].key);\n\n    if (changeReportTab && changeReportItem) {\n      changeReportTab(value);\n      changeReportItem(nextTab === null || nextTab === void 0 ? void 0 : nextTab.tabs[0].key);\n    }\n  };\n\n  useEffect(() => {\n    switch (type) {\n      case ReportRouteType.Sale:\n        setActiveTabItem(tabRevenue[0].key);\n        setActiveTab('revenue');\n        break;\n\n      case ReportRouteType.WareHouse:\n        setActiveTabItem(tabInventory[0].key);\n        setActiveTab('inventory');\n        break;\n\n      case ReportRouteType.Financinal:\n        setActiveTabItem(tabWareProfitLoss[0].key);\n        setActiveTab('profitLoss');\n        break;\n\n      case ReportRouteType.Customer:\n        setActiveTabItem(tabCustomer[0].key);\n        setActiveTab('customer');\n        break;\n\n      default:\n        break;\n    } // eslint-disable-next-line\n\n  }, [type]);\n\n  const renderTab = tabs => {\n    const span = tabs.length > 3 ? 6 : 8;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [theme.spacing.m, theme.spacing.m],\n      children: tabs.map(tab => {\n        const handleSetTabItem = () => {\n          if (activeTabItem !== tab.key) {\n            setActiveTabItem(tab.key);\n\n            if (changeReportItem) {\n              changeReportItem(tab.key);\n            }\n          }\n        };\n\n        const className = cls('report-tabs__group-item', 'card-shadow', {\n          is_active: tab.key === activeTabItem\n        });\n        return /*#__PURE__*/_jsxDEV(Col, {\n          span: span,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: className,\n            bordered: false,\n            onClick: handleSetTabItem,\n            children: [tab === null || tab === void 0 ? void 0 : tab.icon, /*#__PURE__*/_jsxDEV(Typography.Text, {\n              style: {\n                display: 'block',\n                fontWeight: 500\n              },\n              children: tab.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, tab.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cls('report-tabs', {\n      is_single: isSingleTab\n    }),\n    children: isSingleTab ? currentTabs().map(tabs => renderTab(tabs.tabs)) : /*#__PURE__*/_jsxDEV(Tabs, {\n      type: \"card\",\n      activeKey: activeTab,\n      onChange: handleChangeTab,\n      children: currentTabs().map(tabs => /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: tabs.label,\n        children: renderTab(tabs.tabs)\n      }, tabs.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReportTabs, \"8IAnvJa+f0W7HHHbn076iQ/rg08=\");\n\n_c = ReportTabs;\nexport { ReportTabs };\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportTabs\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/report/components/report-tabs/report-tabs.tsx"],"names":["Card","Col","Row","Tabs","Typography","cls","React","useEffect","useState","theme","ReportRouteType","ReportCustomerTabs","ReportFinancinalTabs","ReportSaleTabs","ReportWareHouseTabs","tabCustomer","tabInventory","tabRevenue","tabWareProfitLoss","TabPane","ReportTabs","type","isSingleTab","changeReportItem","changeReportTab","activeTab","setActiveTab","activeTabItem","setActiveTabItem","key","currentTabs","Sale","WareHouse","Financinal","Customer","handleChangeTab","value","nextTab","find","e","tabs","renderTab","span","length","spacing","m","map","tab","handleSetTabItem","className","is_active","icon","display","fontWeight","label","is_single"],"mappings":"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","sourcesContent":["import { Card, Col, Row, Tabs, Typography } from 'antd';\nimport cls from 'classnames';\nimport React, { FC, useEffect, useState } from 'react';\nimport theme from '../../../../theme';\nimport { ReportRouteType } from '../../interface';\nimport {\n    ReportCustomerTabs,\n    ReportFinancinalTabs,\n    ReportSaleTabs,\n    ReportWareHouseTabs,\n    tabCustomer,\n    tabInventory,\n    tabRevenue,\n    tabWareProfitLoss,\n} from './list-tabs';\nimport './report-tabs.less';\n\nconst { TabPane } = Tabs;\n\ntype Props = {\n    type: ReportRouteType;\n    isSingleTab?: boolean;\n    changeReportItem?: (type: any) => void; //TODO add type any\n    changeReportTab?: (tab: any) => void;\n};\n\nconst ReportTabs: FC<Props> = ({ type, isSingleTab, changeReportItem, changeReportTab }) => {\n    const [activeTab, setActiveTab] = useState<string>('revenue');\n    const [activeTabItem, setActiveTabItem] = useState<any>(tabRevenue[0].key);\n\n    const currentTabs = (): any[] => {\n        switch (type) {\n            case ReportRouteType.Sale:\n                return ReportSaleTabs;\n            case ReportRouteType.WareHouse:\n                return ReportWareHouseTabs;\n            case ReportRouteType.Financinal:\n                return ReportFinancinalTabs;\n            case ReportRouteType.Customer:\n                return ReportCustomerTabs;\n            default:\n                return [];\n        }\n    };\n\n    const handleChangeTab = (value: string): void => {\n        const nextTab = currentTabs().find((e) => e.key === value);\n        setActiveTab(value);\n        setActiveTabItem(nextTab?.tabs[0].key as string);\n        if (changeReportTab && changeReportItem) {\n            changeReportTab(value);\n            changeReportItem(nextTab?.tabs[0].key as string);\n        }\n    };\n\n    useEffect(() => {\n        switch (type) {\n            case ReportRouteType.Sale:\n                setActiveTabItem(tabRevenue[0].key);\n                setActiveTab('revenue');\n                break;\n            case ReportRouteType.WareHouse:\n                setActiveTabItem(tabInventory[0].key);\n                setActiveTab('inventory');\n                break;\n            case ReportRouteType.Financinal:\n                setActiveTabItem(tabWareProfitLoss[0].key);\n                setActiveTab('profitLoss');\n                break;\n\n            case ReportRouteType.Customer:\n                setActiveTabItem(tabCustomer[0].key);\n                setActiveTab('customer');\n                break;\n            default:\n                break;\n        }\n        // eslint-disable-next-line\n    }, [type]);\n\n    const renderTab = (tabs: any[]) => {\n        const span = tabs.length > 3 ? 6 : 8;\n\n        return (\n            <Row gutter={[theme.spacing.m, theme.spacing.m]}>\n                {tabs.map((tab) => {\n                    const handleSetTabItem = () => {\n                        if (activeTabItem !== tab.key) {\n                            setActiveTabItem(tab.key);\n                            if (changeReportItem) {\n                                changeReportItem(tab.key);\n                            }\n                        }\n                    };\n                    const className = cls('report-tabs__group-item', 'card-shadow', {\n                        is_active: tab.key === activeTabItem,\n                    });\n\n                    return (\n                        <Col span={span} key={tab.key}>\n                            <Card className={className} bordered={false} onClick={handleSetTabItem}>\n                                {tab?.icon}\n                                <Typography.Text\n                                    style={{\n                                        display: 'block',\n                                        fontWeight: 500,\n                                    }}\n                                >\n                                    {tab.label}\n                                </Typography.Text>\n                            </Card>\n                        </Col>\n                    );\n                })}\n            </Row>\n        );\n    };\n\n    return (\n        <div className={cls('report-tabs', { is_single: isSingleTab })}>\n            {isSingleTab ? (\n                currentTabs().map((tabs) => renderTab(tabs.tabs))\n            ) : (\n                <Tabs type=\"card\" activeKey={activeTab} onChange={handleChangeTab}>\n                    {currentTabs().map((tabs) => (\n                        <TabPane tab={tabs.label} key={tabs.key}>\n                            {renderTab(tabs.tabs)}\n                        </TabPane>\n                    ))}\n                </Tabs>\n            )}\n        </div>\n    );\n};\n\nexport { ReportTabs };\n"]},"metadata":{},"sourceType":"module"}