{"ast":null,"code":"import moment from 'moment';\nimport _ from 'lodash';\nconst format_date = 'DD/MM/YYYY';\nexport function getStartTime({\n  type,\n  date\n}) {\n  // day\n  if (type === 'day') {\n    return moment(date).startOf('day').toDate().getTime();\n  } // week\n\n\n  if (type === 'week') {\n    const weekStart = moment(date).startOf('week');\n    return moment(weekStart).add(0, 'days').startOf('day').valueOf();\n  } // custom\n\n\n  if (type === 'custom') {\n    return moment(date[0]).startOf('day').valueOf();\n  }\n\n  const month = moment(date).format('MM');\n  const year = moment(date).format('YYYY');\n  return moment(`1/${month}/${year}`, format_date).startOf('day').valueOf();\n}\nexport function getEndTime({\n  type,\n  date\n}) {\n  // day\n  if (type === 'day') {\n    return moment(date).endOf('day').toDate().getTime();\n  } // week\n\n\n  if (type === 'week') {\n    const weekStart = moment(date).startOf('week');\n    return moment(weekStart).add(6, 'days').endOf('day').valueOf();\n  } // custom\n\n\n  if (type === 'custom') {\n    return date[1] ? moment(date[1]).endOf('day').valueOf() : moment().endOf('day').valueOf();\n  }\n\n  const dateInMonth = moment().daysInMonth();\n  const month = moment(date).format('MM');\n  const year = moment(date).format('YYYY');\n  return moment(`${dateInMonth}/${month}/${year}`, format_date).endOf('day').valueOf();\n}\n\nfunction getNumOfDaysUntilExpired(timeStart, timeEnd) {\n  return timeEnd.diff(timeStart, 'days');\n}\n/**\n * check expired of package\n * @param time\n * @param rest\n */\n\n\nexport function checkExpiredPackage(time, rest) {\n  let duration = getNumOfDaysUntilExpired(moment(), moment(time));\n  return duration <= rest;\n}\n/**\n * check expired of trial\n * @param time\n * @param rest\n */\n\nexport function checkExpiredTrialForLegacyStore(storeCreatedAt) {\n  let duration = getNumOfDaysUntilExpired(moment(storeCreatedAt), moment());\n  return duration > 30;\n}\nexport function isExpiredPackage(expiredTime) {\n  const endTime = moment(expiredTime);\n  const timeCurrent = moment();\n  return endTime.diff(timeCurrent, 'days') < 0;\n}\nexport function checkRestrictAction(packagesActive) {\n  return !_.some(packagesActive, packageAct => !isExpiredPackage(packageAct.expiredAt));\n}\nexport function checkWarningTrialExpiration(expiredAt) {\n  const duration = getNumOfDaysUntilExpired(moment(), moment(expiredAt));\n  return duration >= 0 && duration <= 10;\n}","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/helper/get-time.ts"],"names":["moment","_","format_date","getStartTime","type","date","startOf","toDate","getTime","weekStart","add","valueOf","month","format","year","getEndTime","endOf","dateInMonth","daysInMonth","getNumOfDaysUntilExpired","timeStart","timeEnd","diff","checkExpiredPackage","time","rest","duration","checkExpiredTrialForLegacyStore","storeCreatedAt","isExpiredPackage","expiredTime","endTime","timeCurrent","checkRestrictAction","packagesActive","some","packageAct","expiredAt","checkWarningTrialExpiration"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash';\nimport { IPackage } from '../pages/setting/create-billing/state/interface';\n\nexport type ITypeTime = 'month' | 'day' | 'week' | 'custom';\n\ninterface IGetTime {\n    type: ITypeTime;\n    date: any;\n}\n\nconst format_date = 'DD/MM/YYYY';\n\nexport function getStartTime({ type, date }: IGetTime): number {\n    // day\n    if (type === 'day') {\n        return moment(date).startOf('day').toDate().getTime();\n    }\n\n    // week\n    if (type === 'week') {\n        const weekStart = moment(date).startOf('week');\n\n        return moment(weekStart).add(0, 'days').startOf('day').valueOf();\n    }\n\n    // custom\n    if (type === 'custom') {\n        return moment(date[0]).startOf('day').valueOf();\n    }\n\n    const month = moment(date).format('MM');\n    const year = moment(date).format('YYYY');\n\n    return moment(`1/${month}/${year}`, format_date).startOf('day').valueOf();\n}\n\nexport function getEndTime({ type, date }: IGetTime): number {\n    // day\n    if (type === 'day') {\n        return moment(date).endOf('day').toDate().getTime();\n    }\n\n    // week\n    if (type === 'week') {\n        const weekStart = moment(date).startOf('week');\n\n        return moment(weekStart).add(6, 'days').endOf('day').valueOf();\n    }\n\n    // custom\n    if (type === 'custom') {\n        return date[1] ? moment(date[1]).endOf('day').valueOf() : moment().endOf('day').valueOf();\n    }\n    const dateInMonth: number = moment().daysInMonth();\n    const month = moment(date).format('MM');\n    const year = moment(date).format('YYYY');\n\n    return moment(`${dateInMonth}/${month}/${year}`, format_date).endOf('day').valueOf();\n}\n\nfunction getNumOfDaysUntilExpired (timeStart: moment.Moment, timeEnd: moment.Moment) {\n    return timeEnd.diff(timeStart, 'days')\n}\n\n/**\n * check expired of package\n * @param time\n * @param rest\n */\nexport function checkExpiredPackage(time: string, rest: number) {\n    let duration = getNumOfDaysUntilExpired(moment(), moment(time))\n    return duration <= rest;\n}\n\n/**\n * check expired of trial\n * @param time\n * @param rest\n */\nexport function checkExpiredTrialForLegacyStore(storeCreatedAt: string): Boolean {\n    let duration = getNumOfDaysUntilExpired(moment(storeCreatedAt), moment())\n    return duration > 30;\n}\n\nexport function isExpiredPackage(expiredTime: string) {\n    const endTime = moment(expiredTime);\n    const timeCurrent = moment();\n    return endTime.diff(timeCurrent, 'days') < 0;\n}\n\nexport function checkRestrictAction(packagesActive: IPackage[]) {\n    return !_.some(packagesActive, (packageAct: IPackage) => !isExpiredPackage(packageAct.expiredAt));\n}\n\nexport function checkWarningTrialExpiration(expiredAt: string): boolean {\n    const duration = getNumOfDaysUntilExpired(moment(), moment(expiredAt));\n    return duration >= 0 && duration <= 10;\n}\n"]},"metadata":{},"sourceType":"module"}