{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/detail/customer-info-action/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport customerApi from '../../../../api/customer-api';\nimport { Menu, Dropdown, Typography, Modal, message } from 'antd';\nimport { InsaButton } from '../../../../components';\nimport { DownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport UpdateCustomerInfo from './update-customer-info';\nimport { useCustomer } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomerInfoAction = () => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n\n  const toggle = () => setVisible(!visible);\n\n  const {\n    customer\n  } = useCustomer();\n  const history = useHistory();\n  const storeObj = useSelector(state => state.store.data);\n\n  const handleMenuClick = menuItem => {\n    switch (menuItem.key) {\n      case '1':\n        toggle();\n        return;\n\n      case '2':\n        confirmDeleteCustomer();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: handleMenuClick,\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n        children: \"C\\u1EADp nh\\u1EADt th\\xF4ng tin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, \"1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: /*#__PURE__*/_jsxDEV(Typography.Text, {\n        type: \"danger\",\n        children: \"Xo\\xE1 kh\\xE1ch h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, \"2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n\n  const normalizeCustomerDataForForm = useMemo(() => {\n    if (!customer.dateOfBirth) return customer;\n    return { ...customer,\n      dateOfBirth: moment(customer.dateOfBirth, 'DD/MM/YYYY')\n    };\n  }, [customer]);\n\n  const confirmDeleteCustomer = () => {\n    Modal.confirm({\n      title: 'Bạn chắc chắn muốn xoá người dùng này?',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this),\n\n      async onOk() {\n        await deleteCustomer();\n      },\n\n      onCancel() {}\n\n    });\n  };\n\n  const deleteCustomer = async () => {\n    try {\n      await customerApi.deleteCustomer({\n        storeId: storeObj._id,\n        customerId: customer._id\n      });\n      message.success('Xoá khách hàng thành công');\n      history.replace('/customers/list');\n    } catch {\n      message.error('Xoá khách hàng thất bại');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: menu,\n      trigger: ['click'],\n      children: /*#__PURE__*/_jsxDEV(InsaButton, {\n        children: [\"Thao t\\xE1c kh\\xE1c \", /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCustomerInfo, {\n      customer: normalizeCustomerDataForForm,\n      visible: visible,\n      toggle: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomerInfoAction, \"SBw+YbGxGEZN+Qz2DHYFbdLWYq8=\", false, function () {\n  return [useCustomer, useHistory, useSelector];\n});\n\n_c = CustomerInfoAction;\nexport default CustomerInfoAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerInfoAction\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/detail/customer-info-action/index.tsx"],"names":["React","useState","useMemo","useSelector","useHistory","moment","customerApi","Menu","Dropdown","Typography","Modal","message","InsaButton","DownOutlined","ExclamationCircleOutlined","UpdateCustomerInfo","useCustomer","CustomerInfoAction","visible","setVisible","toggle","customer","history","storeObj","state","store","data","handleMenuClick","menuItem","key","confirmDeleteCustomer","menu","normalizeCustomerDataForForm","dateOfBirth","confirm","title","icon","onOk","deleteCustomer","onCancel","storeId","_id","customerId","success","replace","error"],"mappings":"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","sourcesContent":["import React, { FC, useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport moment, { Moment } from 'moment';\nimport customerApi from '../../../../api/customer-api';\nimport { IState } from '../../../../store/rootReducer';\n\nimport { Menu, Dropdown, Typography, Modal, message } from 'antd';\nimport { InsaButton } from '../../../../components';\nimport { ICustomerEditing } from '../../../../models';\nimport { DownOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport UpdateCustomerInfo from './update-customer-info';\nimport { useCustomer } from '../context';\n\ninterface Props {}\n\nconst CustomerInfoAction: FC<Props> = () => {\n    const [visible, setVisible] = useState<boolean>(false);\n    const toggle = () => setVisible(!visible);\n\n    const { customer } = useCustomer();\n    const history = useHistory();\n    const storeObj = useSelector((state: IState) => state.store.data);\n\n    const handleMenuClick = (menuItem: any) => {\n        switch (menuItem.key) {\n            case '1':\n                toggle();\n                return;\n\n            case '2':\n                confirmDeleteCustomer();\n                return;\n\n            default:\n                return;\n        }\n    };\n\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"1\">\n                <Typography.Text>Cập nhật thông tin</Typography.Text>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n                <Typography.Text type=\"danger\">Xoá khách hàng</Typography.Text>\n            </Menu.Item>\n        </Menu>\n    );\n\n    const normalizeCustomerDataForForm: ICustomerEditing = useMemo(() => {\n        if (!customer.dateOfBirth) return customer as ICustomerEditing;\n\n        return {\n            ...customer,\n            dateOfBirth: moment(customer.dateOfBirth, 'DD/MM/YYYY') as Moment,\n        } as ICustomerEditing;\n    }, [customer]);\n\n    const confirmDeleteCustomer = () => {\n        Modal.confirm({\n            title: 'Bạn chắc chắn muốn xoá người dùng này?',\n            icon: <ExclamationCircleOutlined />,\n            async onOk() {\n                await deleteCustomer();\n            },\n            onCancel() {},\n        });\n    };\n\n    const deleteCustomer = async () => {\n        try {\n            await customerApi.deleteCustomer({\n                storeId: storeObj._id as string,\n                customerId: customer._id as string,\n            });\n\n            message.success('Xoá khách hàng thành công');\n            history.replace('/customers/list');\n        } catch {\n            message.error('Xoá khách hàng thất bại');\n        }\n    };\n\n    return (\n        <>\n            <Dropdown overlay={menu} trigger={['click']}>\n                <InsaButton>\n                    Thao tác khác <DownOutlined />\n                </InsaButton>\n            </Dropdown>\n\n            <UpdateCustomerInfo\n                customer={normalizeCustomerDataForForm}\n                visible={visible}\n                toggle={toggle}\n            />\n        </>\n    );\n};\n\nexport default CustomerInfoAction;\n"]},"metadata":{},"sourceType":"module"}