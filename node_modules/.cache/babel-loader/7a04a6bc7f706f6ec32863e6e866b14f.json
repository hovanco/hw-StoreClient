{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/advance-filter/dropdown-overlay.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Row, Select, Space } from 'antd';\nimport { isUndefined, omitBy, isEqual, isNil } from 'lodash';\nimport * as queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { TrashIcon } from '../../../../assets/icon';\nimport { useCustomerTable } from '../context';\nimport { usePopover } from './context';\nimport { dataOptionsAdvanceFilter } from './data';\nimport FilterButton from './filter-btn';\nimport FilterValue from './filter-value';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownOverlay = () => {\n  _s();\n\n  let history = useHistory();\n  const location = useLocation();\n  const {\n    filter,\n    advanceFilterChange\n  } = useCustomerTable();\n  const {\n    toggle,\n    visible\n  } = usePopover();\n  const [filterData, setFilterData] = useState([]);\n  const [filterOptions, setFilterOptions] = useState(dataOptionsAdvanceFilter.filter(i => i.key.length));\n\n  const selectNewFilterItem = key => {\n    toggleMarkUsedFilterOption(key);\n    addNewFilterItem(key);\n  };\n\n  const addNewFilterItem = key => {\n    let newFilterItem = getFilterOptionByKey(key);\n    let newFilterData = [...filterData, { ...newFilterItem,\n      value: undefined\n    }];\n    setFilterData(newFilterData);\n    let newFilterOptions = filterOptions.filter(item => item.key !== key);\n    setFilterOptions(newFilterOptions);\n  };\n\n  const toggleMarkUsedFilterOption = key => {\n    if (typeof key === 'string') key = [key];\n    let newFilterOptions = filterOptions.map(filterOption => {\n      if (key.indexOf(filterOption.key) !== -1) return { ...filterOption,\n        used: !filterOption.used\n      };\n      return filterOption;\n    });\n    setFilterOptions(newFilterOptions);\n  };\n\n  const removeFilterItem = key => {\n    let newFilterData = filterData.filter(item => item.key !== key);\n    setFilterData(newFilterData);\n    toggleMarkUsedFilterOption(key);\n  };\n\n  const changeFilterItemKey = (newKey, oldKey) => {\n    const newFilterItem = getFilterOptionByKey(newKey);\n    const newFilterData = filterData.map(item => {\n      if (item.key === oldKey) return newFilterItem;\n      return item;\n    });\n    setFilterData(newFilterData);\n    toggleMarkUsedFilterOption([oldKey, newKey]);\n  };\n\n  const getFilterOptionByKey = key => {\n    return filterOptions.filter(item => item.key === key)[0];\n  };\n\n  const filterItemChangeValue = (key, value) => {\n    let newFilterData = filterData.map(item => {\n      if (item.key === key) {\n        return { ...item,\n          value\n        };\n      }\n\n      return item;\n    });\n    setFilterData(newFilterData);\n  };\n\n  const handleFilter = () => {\n    toggle();\n    let filterProperties = filterData.length === 0 ? dataOptionsAdvanceFilter.reduce((prevValue, currValue) => ({ ...prevValue,\n      [currValue.key]: undefined\n    }), {}) : filterData.filter(item => {\n      if (item.key === 'createdAt' || item.key === 'dateOfBirth') {\n        return false;\n      }\n\n      return !isUndefined(item.value);\n    }).reduce((prevValue, currValue) => ({ ...prevValue,\n      [currValue.key]: currValue.value\n    }), {});\n    const createdAt = filterData.find(item => item.key === 'createdAt' && item.value);\n\n    if (createdAt) {\n      filterProperties = { ...filterProperties,\n        fromAt: createdAt.value[0],\n        toAt: createdAt.value[1]\n      };\n    }\n\n    const dateOfBirth = filterData.find(item => item.key === 'dateOfBirth' && !isNil(item.value));\n\n    if (dateOfBirth) {\n      filterProperties = { ...filterProperties,\n        dateOfBirth: dateOfBirth.value.value,\n        filterDateBy: dateOfBirth.value.filterDateBy\n      };\n    }\n\n    let searchString = queryString.stringify(filterProperties);\n    history.push({\n      pathname: location.pathname,\n      search: searchString\n    });\n    advanceFilterChange(filterProperties);\n  };\n\n  useEffect(() => {\n    const filterKeys = Object.keys(omitBy(filter, isUndefined));\n\n    const getFilterDataExist = () => {\n      if (filterKeys.length === 0) {\n        return [];\n      }\n\n      let result = [];\n\n      if (filter.gender) {\n        result.push({\n          name: 'Giới tính',\n          key: 'gender',\n          used: true,\n          value: filter.gender\n        });\n      }\n\n      if (filter.dateOfBirth) {\n        result.push({\n          name: 'Ngày sinh',\n          key: 'dateOfBirth',\n          used: true,\n          value: filter.dateOfBirth\n        });\n      }\n\n      if (filter.createdAt) {\n        result.push({\n          name: 'Ngày tạo',\n          key: 'createdAt',\n          used: true,\n          value: filter.createdAt\n        });\n      }\n\n      return result;\n    };\n\n    const filterDataExist = getFilterDataExist(); // setFilterData(filterDataExist);\n\n    if (!isEqual(filterData, filterDataExist)) setFilterData(filterDataExist);\n    const filterOptionsNotExist = filterKeys.length === 0 ? dataOptionsAdvanceFilter : dataOptionsAdvanceFilter.map(item => {\n      if (filterKeys.includes(item.key)) {\n        return { ...item,\n          used: true\n        };\n      }\n\n      return item;\n    });\n    setFilterOptions(filterOptionsNotExist); // eslint-disable-next-line\n  }, [visible, filter]);\n  const filterOptionsNotUsed = filterOptions.filter(i => !i.used);\n  return /*#__PURE__*/_jsxDEV(Space, {\n    className: \"filer-order-dropdown\",\n    style: {\n      background: '#ffffff'\n    },\n    direction: \"vertical\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hi\\u1EC3n th\\u1ECB kh\\xE1ch h\\xE0ng theo:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), filterData.map((filterItem, idx) => /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [20, 16],\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            minWidth: 180\n          },\n          value: filterItem.key,\n          onChange: value => changeFilterItemKey(value, filterItem.key),\n          children: dataOptionsAdvanceFilter.filter(i => !(i.key !== filterItem.key && i.used)).map((option, optionIdx) => /*#__PURE__*/_jsxDEV(Select.Option, {\n            value: option.key,\n            children: option.name\n          }, `option_${optionIdx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        flex: 1,\n        children: /*#__PURE__*/_jsxDEV(FilterValue, {\n          dataKey: filterItem.key,\n          value: filterItem.value,\n          onChange: value => filterItemChangeValue(filterItem.key, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"remove-filter-item\",\n        children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n          style: {\n            color: '#848484'\n          },\n          onClick: () => removeFilterItem(filterItem.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this)]\n    }, `filter_item_${idx}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this)), filterOptionsNotUsed.length > 0 && /*#__PURE__*/_jsxDEV(Space, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          minWidth: 180\n        },\n        value: 'root',\n        onChange: selectNewFilterItem,\n        children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"root\",\n          children: \"Ch\\u1ECDn \\u0111i\\u1EC1u ki\\u1EC7n l\\u1ECDc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), filterOptionsNotUsed.map((option, optionIdx) => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: option.key,\n          children: option.name\n        }, `option_${optionIdx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n      onClick: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropdownOverlay, \"eo9aW/+6USOUFwVRfTlPzYsO0Qo=\", false, function () {\n  return [useHistory, useLocation, useCustomerTable, usePopover];\n});\n\n_c = DropdownOverlay;\nexport default DropdownOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownOverlay\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/customer/list/advance-filter/dropdown-overlay.tsx"],"names":["Col","Row","Select","Space","isUndefined","omitBy","isEqual","isNil","queryString","React","useEffect","useState","useHistory","useLocation","TrashIcon","useCustomerTable","usePopover","dataOptionsAdvanceFilter","FilterButton","FilterValue","DropdownOverlay","history","location","filter","advanceFilterChange","toggle","visible","filterData","setFilterData","filterOptions","setFilterOptions","i","key","length","selectNewFilterItem","toggleMarkUsedFilterOption","addNewFilterItem","newFilterItem","getFilterOptionByKey","newFilterData","value","undefined","newFilterOptions","item","map","filterOption","indexOf","used","removeFilterItem","changeFilterItemKey","newKey","oldKey","filterItemChangeValue","handleFilter","filterProperties","reduce","prevValue","currValue","createdAt","find","fromAt","toAt","dateOfBirth","filterDateBy","searchString","stringify","push","pathname","search","filterKeys","Object","keys","getFilterDataExist","result","gender","name","filterDataExist","filterOptionsNotExist","includes","filterOptionsNotUsed","background","filterItem","idx","minWidth","option","optionIdx","color"],"mappings":"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","sourcesContent":["import { Col, Row, Select, Space } from 'antd';\nimport { isUndefined, omitBy, isEqual, isNil } from 'lodash';\nimport * as queryString from 'query-string';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { TrashIcon } from '../../../../assets/icon';\nimport { useCustomerTable } from '../context';\nimport { usePopover } from './context';\nimport { dataOptionsAdvanceFilter, IFilterOption } from './data';\nimport FilterButton from './filter-btn';\nimport FilterValue from './filter-value';\n\ninterface IFilterData {\n    name?: string;\n    key: string;\n    used?: boolean;\n    value: any;\n}\n\ntype Props = {};\n\nconst DropdownOverlay: FC<Props> = () => {\n    let history = useHistory();\n    const location = useLocation();\n    const { filter, advanceFilterChange } = useCustomerTable();\n    const { toggle, visible } = usePopover();\n\n    const [filterData, setFilterData] = useState<IFilterData[]>([]);\n    const [filterOptions, setFilterOptions] = useState<IFilterOption[]>(\n        dataOptionsAdvanceFilter.filter((i: IFilterOption) => i.key.length)\n    );\n\n    const selectNewFilterItem = (key: string) => {\n        toggleMarkUsedFilterOption(key);\n        addNewFilterItem(key);\n    };\n\n    const addNewFilterItem = (key: string) => {\n        let newFilterItem: IFilterOption = getFilterOptionByKey(key);\n        let newFilterData = [...filterData, { ...newFilterItem, value: undefined }];\n\n        setFilterData(newFilterData);\n\n        let newFilterOptions = filterOptions.filter((item) => item.key !== key);\n        setFilterOptions(newFilterOptions);\n    };\n\n    const toggleMarkUsedFilterOption = (key: string | string[]) => {\n        if (typeof key === 'string') key = [key];\n\n        let newFilterOptions: IFilterOption[] = filterOptions.map((filterOption: IFilterOption) => {\n            if (key.indexOf(filterOption.key) !== -1)\n                return { ...filterOption, used: !filterOption.used };\n\n            return filterOption;\n        });\n\n        setFilterOptions(newFilterOptions);\n    };\n\n    const removeFilterItem = (key: string) => {\n        let newFilterData = filterData.filter((item: IFilterData) => item.key !== key);\n\n        setFilterData(newFilterData);\n        toggleMarkUsedFilterOption(key);\n    };\n\n    const changeFilterItemKey = (newKey: string, oldKey: string) => {\n        const newFilterItem = getFilterOptionByKey(newKey);\n        const newFilterData: IFilterData[] = filterData.map((item: IFilterData) => {\n            if (item.key === oldKey) return newFilterItem as IFilterData;\n\n            return item;\n        });\n\n        setFilterData(newFilterData);\n        toggleMarkUsedFilterOption([oldKey, newKey]);\n    };\n\n    const getFilterOptionByKey = (key: string) => {\n        return filterOptions.filter((item: IFilterOption) => item.key === key)[0];\n    };\n\n    const filterItemChangeValue = (key: string, value: any) => {\n        let newFilterData = filterData.map((item: IFilterData) => {\n            if (item.key === key) {\n                return { ...item, value };\n            }\n\n            return item;\n        });\n\n        setFilterData(newFilterData);\n    };\n\n    const handleFilter = () => {\n        toggle();\n\n        let filterProperties: any =\n            filterData.length === 0\n                ? dataOptionsAdvanceFilter.reduce(\n                      (prevValue, currValue) => ({\n                          ...prevValue,\n                          [currValue.key]: undefined,\n                      }),\n                      {}\n                  )\n                : filterData\n                      .filter((item) => {\n                          if (item.key === 'createdAt' || item.key === 'dateOfBirth') {\n                              return false;\n                          }\n\n                          return !isUndefined(item.value);\n                      })\n                      .reduce(\n                          (prevValue, currValue) => ({\n                              ...prevValue,\n                              [currValue.key]: currValue.value,\n                          }),\n                          {}\n                      );\n\n        const createdAt = filterData.find((item) => item.key === 'createdAt' && item.value);\n\n        if (createdAt) {\n            filterProperties = {\n                ...filterProperties,\n                fromAt: createdAt.value[0],\n                toAt: createdAt.value[1],\n            };\n        }\n\n        const dateOfBirth = filterData.find((item) => item.key === 'dateOfBirth' && !isNil(item.value));\n\n        if (dateOfBirth) {\n            filterProperties = {\n                ...filterProperties,\n                dateOfBirth: dateOfBirth.value.value,\n                filterDateBy: dateOfBirth.value.filterDateBy,\n            };\n        }\n\n        let searchString = queryString.stringify(filterProperties);\n\n        history.push({\n            pathname: location.pathname,\n            search: searchString,\n        });\n\n        advanceFilterChange(filterProperties);\n    };\n\n    useEffect(() => {\n        const filterKeys = Object.keys(omitBy(filter, isUndefined));\n\n        const getFilterDataExist = () => {\n            if (filterKeys.length === 0) {\n                return [];\n            }\n\n            let result = [];\n\n            if (filter.gender) {\n                result.push({\n                    name: 'Giới tính',\n                    key: 'gender',\n                    used: true,\n                    value: filter.gender,\n                });\n            }\n\n            if (filter.dateOfBirth) {\n                result.push({\n                    name: 'Ngày sinh',\n                    key: 'dateOfBirth',\n                    used: true,\n                    value: filter.dateOfBirth,\n                });\n            }\n\n            if (filter.createdAt) {\n                result.push({\n                    name: 'Ngày tạo',\n                    key: 'createdAt',\n                    used: true,\n                    value: filter.createdAt,\n                });\n            }\n\n            return result;\n        };\n\n        const filterDataExist = getFilterDataExist();\n\n        // setFilterData(filterDataExist);\n\n        if (!isEqual(filterData, filterDataExist)) setFilterData(filterDataExist);\n\n        const filterOptionsNotExist =\n            filterKeys.length === 0\n                ? dataOptionsAdvanceFilter\n                : dataOptionsAdvanceFilter.map((item) => {\n                      if (filterKeys.includes(item.key)) {\n                          return { ...item, used: true };\n                      }\n\n                      return item;\n                  });\n\n        setFilterOptions(filterOptionsNotExist);\n\n        // eslint-disable-next-line\n    }, [visible, filter]);\n\n    const filterOptionsNotUsed = filterOptions.filter((i: IFilterOption) => !i.used);\n\n    return (\n        <Space\n            className=\"filer-order-dropdown\"\n            style={{ background: '#ffffff' }}\n            direction=\"vertical\"\n        >\n            <div>Hiển thị khách hàng theo:</div>\n\n            {filterData.map((filterItem: IFilterData, idx: number) => (\n                <Row key={`filter_item_${idx}`} gutter={[20, 16]}>\n                    <Col>\n                        <Select\n                            style={{ minWidth: 180 }}\n                            value={filterItem.key}\n                            onChange={(value: string) => changeFilterItemKey(value, filterItem.key)}\n                        >\n                            {dataOptionsAdvanceFilter\n                                .filter((i: IFilterOption) => !(i.key !== filterItem.key && i.used))\n                                .map((option: IFilterOption, optionIdx: number) => (\n                                    <Select.Option value={option.key} key={`option_${optionIdx}`}>\n                                        {option.name}\n                                    </Select.Option>\n                                ))}\n                        </Select>\n                    </Col>\n\n                    <Col flex={1}>\n                        <FilterValue\n                            dataKey={filterItem.key}\n                            value={filterItem.value}\n                            onChange={(value: any) => filterItemChangeValue(filterItem.key, value)}\n                        />\n                    </Col>\n\n                    <Col className=\"remove-filter-item\">\n                        <TrashIcon\n                            style={{ color: '#848484' }}\n                            onClick={() => removeFilterItem(filterItem.key)}\n                        />\n                    </Col>\n                </Row>\n            ))}\n\n            {filterOptionsNotUsed.length > 0 && (\n                <Space>\n                    <Select style={{ minWidth: 180 }} value={'root'} onChange={selectNewFilterItem}>\n                        <Select.Option value=\"root\">Chọn điều kiện lọc</Select.Option>\n                        {filterOptionsNotUsed.map((option: IFilterOption, optionIdx: number) => (\n                            <Select.Option value={option.key} key={`option_${optionIdx}`}>\n                                {option.name}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                </Space>\n            )}\n\n            <FilterButton onClick={handleFilter} />\n        </Space>\n    );\n};\n\nexport default DropdownOverlay;\n"]},"metadata":{},"sourceType":"module"}