{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-column-name/index.tsx\";\nimport { Space, Typography } from 'antd';\nimport React, { memo } from 'react';\nimport { InsaButton } from '../../../components';\nimport constants from '../../../constants';\nimport ImgPlaceholder from '../../product/product-column-name/img-placeholder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InventoryColumnName = ({\n  stock\n}) => {\n  var _stock$productId$imag, _stock$productId$attr;\n\n  return /*#__PURE__*/_jsxDEV(Space, {\n    className: \"product-tbl__col-name\",\n    children: [(stock === null || stock === void 0 ? void 0 : (_stock$productId$imag = stock.productId.images) === null || _stock$productId$imag === void 0 ? void 0 : _stock$productId$imag.length) ? /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: 50,\n        height: 40,\n        objectFit: 'contain'\n      },\n      src: `${constants.URL_IMG}${stock === null || stock === void 0 ? void 0 : stock.productId.images[0]}`,\n      alt: \"product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ImgPlaceholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InsaButton, {\n        className: \"product-tbl__name\",\n        type: \"link\",\n        style: {\n          display: 'block',\n          padding: 0,\n          height: 'initial'\n        },\n        children: stock.productId.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n        children: [stock.productId.name, ' ', (_stock$productId$attr = stock.productId.attributes) === null || _stock$productId$attr === void 0 ? void 0 : _stock$productId$attr.map(item => item.tags[0]).join(' - ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InventoryColumnName;\nexport default _c2 = /*#__PURE__*/memo(InventoryColumnName);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InventoryColumnName\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/inventory/inventory-column-name/index.tsx"],"names":["Space","Typography","React","memo","InsaButton","constants","ImgPlaceholder","InventoryColumnName","stock","productId","images","length","width","height","objectFit","URL_IMG","display","padding","name","attributes","map","item","tags","join"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,UAAhB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAoBC,IAApB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAOC,cAAP,MAA2B,mDAA3B;;;AAKA,MAAMC,mBAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD;AAAA;;AAAA,sBACpC,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA,eACK,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,qCAAAA,KAAK,CAAEC,SAAP,CAAiBC,MAAjB,gFAAyBC,MAAzB,iBACG;AACI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAE,EAArB;AAAyBC,QAAAA,SAAS,EAAE;AAApC,OADX;AAEI,MAAA,GAAG,EAAG,GAAET,SAAS,CAACU,OAAQ,GAAEP,KAAvB,aAAuBA,KAAvB,uBAAuBA,KAAK,CAAEC,SAAP,CAAiBC,MAAjB,CAAwB,CAAxB,CAA2B,EAF3D;AAGI,MAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YARR,eAWI;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,SAAS,EAAC,mBADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE,OAAX;AAAoBC,UAAAA,OAAO,EAAE,CAA7B;AAAgCJ,UAAAA,MAAM,EAAE;AAAxC,SAHX;AAAA,kBAKKL,KAAK,CAACC,SAAN,CAAgBS;AALrB;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,UAAD,CAAY,IAAZ;AAAA,mBACKV,KAAK,CAACC,SAAN,CAAgBS,IADrB,EAC2B,GAD3B,2BAEKV,KAAK,CAACC,SAAN,CAAgBU,UAFrB,0DAEK,sBAA4BC,GAA5B,CAAiCC,IAAD,IAAsBA,IAAI,CAACC,IAAL,CAAU,CAAV,CAAtD,EAAoEC,IAApE,CAAyE,KAAzE,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADoC;AAAA,CAAxC;;KAAMhB,mB;AA4BN,kCAAeJ,IAAI,CAACI,mBAAD,CAAnB","sourcesContent":["import { Space, Typography } from 'antd';\nimport React, { FC, memo } from 'react';\nimport { InsaButton } from '../../../components';\nimport constants from '../../../constants';\nimport { IAttribute, IStock } from '../../../models';\nimport ImgPlaceholder from '../../product/product-column-name/img-placeholder';\n\ninterface IProps {\n    stock: IStock;\n}\nconst InventoryColumnName: FC<IProps> = ({ stock }) => (\n    <Space className=\"product-tbl__col-name\">\n        {stock?.productId.images?.length ? (\n            <img\n                style={{ width: 50, height: 40, objectFit: 'contain' }}\n                src={`${constants.URL_IMG}${stock?.productId.images[0]}`}\n                alt=\"product\"\n            />\n        ) : (\n            <ImgPlaceholder />\n        )}\n\n        <div>\n            <InsaButton\n                className=\"product-tbl__name\"\n                type=\"link\"\n                style={{ display: 'block', padding: 0, height: 'initial' }}\n            >\n                {stock.productId.name}\n            </InsaButton>\n            <Typography.Text>\n                {stock.productId.name}{' '}\n                {stock.productId.attributes?.map((item: IAttribute) => item.tags[0]).join(' - ')}\n            </Typography.Text>\n        </div>\n    </Space>\n);\n\nexport default memo(InventoryColumnName);\n"]},"metadata":{},"sourceType":"module"}