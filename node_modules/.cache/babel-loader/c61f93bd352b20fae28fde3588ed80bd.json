{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/StoreClient/src/pages/save-token/SaveToken.tsx\",\n    _s = $RefreshSig$();\n\nimport { message } from 'antd';\nimport * as queryString from 'query-string';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setToken } from '../../api/token';\nimport { Loading } from '../../components';\nimport { BaseLayout } from '../../layout';\nimport { getUserAction } from '../../reducers/authState/authAction';\nimport types from '../../reducers/authState/authTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SaveToken = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const searchState = queryString.parse(history.location.search);\n\n  const saveAndLoadUser = async () => {\n    const {\n      token,\n      location,\n      isHasStore,\n      saleChannel\n    } = searchState;\n\n    if (!token || !location) {\n      return;\n    }\n\n    const tokenValue = JSON.parse(token);\n    await localStorage.removeItem('shortLiveToken');\n    await setToken({\n      token: tokenValue\n    });\n    await dispatch({\n      type: types.LOGIN_SUCCESSS,\n      payload: tokenValue\n    });\n    await dispatch(getUserAction());\n    message.success('Đăng nhập thành công');\n\n    if (isHasStore === 'false') {\n      history.replace({\n        pathname: '/create-store',\n        search: queryString.stringify({\n          saleChannel\n        })\n      });\n    } else {\n      history.push('/');\n    }\n  };\n\n  useEffect(() => {\n    saveAndLoadUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    title: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Loading, {\n      full: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SaveToken, \"7u3xwS4PqIKuFyHlFGn/5M55K3I=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = SaveToken;\nexport default SaveToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveToken\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/save-token/SaveToken.tsx"],"names":["message","queryString","React","useEffect","useDispatch","useHistory","setToken","Loading","BaseLayout","getUserAction","types","SaveToken","history","dispatch","searchState","parse","location","search","saveAndLoadUser","token","isHasStore","saleChannel","tokenValue","JSON","localStorage","removeItem","type","LOGIN_SUCCESSS","payload","success","replace","pathname","stringify","push"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,cAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAOC,KAAP,MAAkB,oCAAlB;;;AAIA,MAAMC,SAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,WAML,GAAGb,WAAW,CAACc,KAAZ,CAAkBH,OAAO,CAACI,QAAR,CAAiBC,MAAnC,CANJ;;AAQA,QAAMC,eAAe,GAAG,YAA2B;AAC/C,UAAM;AAAEC,MAAAA,KAAF;AAASH,MAAAA,QAAT;AAAmBI,MAAAA,UAAnB;AAA+BC,MAAAA;AAA/B,QAA+CP,WAArD;;AAEA,QAAI,CAACK,KAAD,IAAU,CAACH,QAAf,EAAyB;AACrB;AACH;;AACD,UAAMM,UAAU,GAAGC,IAAI,CAACR,KAAL,CAAWI,KAAX,CAAnB;AAEA,UAAMK,YAAY,CAACC,UAAb,CAAwB,gBAAxB,CAAN;AACA,UAAMnB,QAAQ,CAAC;AACXa,MAAAA,KAAK,EAAEG;AADI,KAAD,CAAd;AAGA,UAAMT,QAAQ,CAAC;AACXa,MAAAA,IAAI,EAAEhB,KAAK,CAACiB,cADD;AAEXC,MAAAA,OAAO,EAAEN;AAFE,KAAD,CAAd;AAIA,UAAMT,QAAQ,CAACJ,aAAa,EAAd,CAAd;AACAT,IAAAA,OAAO,CAAC6B,OAAR,CAAgB,sBAAhB;;AAEA,QAAIT,UAAU,KAAK,OAAnB,EAA4B;AACxBR,MAAAA,OAAO,CAACkB,OAAR,CAAgB;AACZC,QAAAA,QAAQ,EAAE,eADE;AAEZd,QAAAA,MAAM,EAAEhB,WAAW,CAAC+B,SAAZ,CAAsB;AAAEX,UAAAA;AAAF,SAAtB;AAFI,OAAhB;AAIH,KALD,MAKO;AACHT,MAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACH;AACJ,GA3BD;;AA6BA9B,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA,2BACI,QAAC,OAAD;AAAS,MAAA,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlDD;;GAAMP,S;UACcN,U,EACCD,W;;;KAFfO,S;AAoDN,eAAeA,SAAf","sourcesContent":["import { message } from 'antd';\nimport * as queryString from 'query-string';\nimport React, { useEffect, FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setToken } from '../../api/token';\nimport { Loading } from '../../components';\nimport { BaseLayout } from '../../layout';\nimport { getUserAction } from '../../reducers/authState/authAction';\nimport types from '../../reducers/authState/authTypes';\n\ninterface Props {}\n\nconst SaveToken: FC<Props> = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const searchState: {\n        token?: string;\n        remember?: string;\n        location?: string;\n        isHasStore?: string;\n        saleChannel?: string;\n    } = queryString.parse(history.location.search);\n\n    const saveAndLoadUser = async (): Promise<void> => {\n        const { token, location, isHasStore, saleChannel } = searchState;\n\n        if (!token || !location) {\n            return;\n        }\n        const tokenValue = JSON.parse(token);\n\n        await localStorage.removeItem('shortLiveToken');\n        await setToken({\n            token: tokenValue,\n        });\n        await dispatch({\n            type: types.LOGIN_SUCCESSS,\n            payload: tokenValue,\n        });\n        await dispatch(getUserAction());\n        message.success('Đăng nhập thành công');\n\n        if (isHasStore === 'false') {\n            history.replace({\n                pathname: '/create-store',\n                search: queryString.stringify({ saleChannel }),\n            });\n        } else {\n            history.push('/');\n        }\n    };\n\n    useEffect(() => {\n        saveAndLoadUser();\n    }, []);\n\n    return (\n        <BaseLayout title=\"Login\">\n            <Loading full />\n        </BaseLayout>\n    );\n};\n\nexport default SaveToken;\n"]},"metadata":{},"sourceType":"module"}