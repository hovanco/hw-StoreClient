{"ast":null,"code":"import axios from './axios-client';\nconst basePath = '/store/v1/stores';\nconst staffsApi = {\n  getStaffs: async storeId => {\n    const response = await axios({\n      method: 'GET',\n      url: `${basePath}/${storeId}/staffs`\n    });\n    return response.data;\n  },\n  createStaff: async (storeId, data) => {\n    const response = await axios({\n      method: 'POST',\n      url: `${basePath}/${storeId}/staffs`,\n      data\n    });\n    return response.data;\n  },\n  getStaff: async (storeId, staffId) => {\n    const response = await axios({\n      method: 'GET',\n      url: `${basePath}/${storeId}/staffs/${staffId}`\n    });\n    return response.data;\n  },\n  updateStaff: async (storeId, staffId, data) => {\n    const response = await axios({\n      method: 'PUT',\n      url: `${basePath}/${storeId}/staffs/${staffId}`,\n      data\n    });\n    return response.data;\n  },\n  deleteStaff: async (storeId, staffId) => {\n    const response = await axios({\n      method: 'DELETE',\n      url: `${basePath}/${storeId}/staffs/${staffId}`\n    });\n    return response.data;\n  }\n};\nexport default staffsApi;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/api/staff-api.ts"],"names":["axios","basePath","staffsApi","getStaffs","storeId","response","method","url","data","createStaff","getStaff","staffId","updateStaff","deleteStaff"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAGA,MAAMC,QAAQ,GAAG,kBAAjB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,MAAOC,OAAP,IAA8C;AACrD,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAAC;AACzBM,MAAAA,MAAM,EAAE,KADiB;AAEzBC,MAAAA,GAAG,EAAG,GAAEN,QAAS,IAAGG,OAAQ;AAFH,KAAD,CAA5B;AAKA,WAAOC,QAAQ,CAACG,IAAhB;AACH,GARa;AAUdC,EAAAA,WAAW,EAAE,OACTL,OADS,EAETI,IAFS,KAQS;AAClB,UAAMH,QAAQ,GAAG,MAAML,KAAK,CAAC;AACzBM,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,GAAG,EAAG,GAAEN,QAAS,IAAGG,OAAQ,SAFH;AAGzBI,MAAAA;AAHyB,KAAD,CAA5B;AAMA,WAAOH,QAAQ,CAACG,IAAhB;AACH,GA1Ba;AA4BdE,EAAAA,QAAQ,EAAE,OAAON,OAAP,EAAwBO,OAAxB,KAA0D;AAChE,UAAMN,QAAQ,GAAG,MAAML,KAAK,CAAC;AACzBM,MAAAA,MAAM,EAAE,KADiB;AAEzBC,MAAAA,GAAG,EAAG,GAAEN,QAAS,IAAGG,OAAQ,WAAUO,OAAQ;AAFrB,KAAD,CAA5B;AAKA,WAAON,QAAQ,CAACG,IAAhB;AACH,GAnCa;AAqCdI,EAAAA,WAAW,EAAE,OACTR,OADS,EAETO,OAFS,EAGTH,IAHS,KAIM;AACf,UAAMH,QAAQ,GAAG,MAAML,KAAK,CAAC;AACzBM,MAAAA,MAAM,EAAE,KADiB;AAEzBC,MAAAA,GAAG,EAAG,GAAEN,QAAS,IAAGG,OAAQ,WAAUO,OAAQ,EAFrB;AAGzBH,MAAAA;AAHyB,KAAD,CAA5B;AAMA,WAAOH,QAAQ,CAACG,IAAhB;AACH,GAjDa;AAmDdK,EAAAA,WAAW,EAAE,OAAOT,OAAP,EAAwBO,OAAxB,KAA0D;AACnE,UAAMN,QAAQ,GAAG,MAAML,KAAK,CAAC;AACzBM,MAAAA,MAAM,EAAE,QADiB;AAEzBC,MAAAA,GAAG,EAAG,GAAEN,QAAS,IAAGG,OAAQ,WAAUO,OAAQ;AAFrB,KAAD,CAA5B;AAKA,WAAON,QAAQ,CAACG,IAAhB;AACH;AA1Da,CAAlB;AA6DA,eAAeN,SAAf","sourcesContent":["import axios from './axios-client';\nimport { EUserRole, IStaff } from '../models';\n\nconst basePath = '/store/v1/stores';\n\nconst staffsApi = {\n    getStaffs: async (storeId: string): Promise<IStaff[]> => {\n        const response = await axios({\n            method: 'GET',\n            url: `${basePath}/${storeId}/staffs`,\n        });\n\n        return response.data;\n    },\n\n    createStaff: async (\n        storeId: string,\n        data: {\n            email: string;\n            password: string;\n            name: string;\n            role: EUserRole;\n        }\n    ): Promise<IStaff> => {\n        const response = await axios({\n            method: 'POST',\n            url: `${basePath}/${storeId}/staffs`,\n            data,\n        });\n\n        return response.data;\n    },\n\n    getStaff: async (storeId: string, staffId: string): Promise<any> => {\n        const response = await axios({\n            method: 'GET',\n            url: `${basePath}/${storeId}/staffs/${staffId}`,\n        });\n\n        return response.data;\n    },\n\n    updateStaff: async (\n        storeId: string,\n        staffId: string,\n        data: { email?: string; password?: string; name?: string; role?: EUserRole }\n    ): Promise<any> => {\n        const response = await axios({\n            method: 'PUT',\n            url: `${basePath}/${storeId}/staffs/${staffId}`,\n            data,\n        });\n\n        return response.data;\n    },\n\n    deleteStaff: async (storeId: string, staffId: string): Promise<any> => {\n        const response = await axios({\n            method: 'DELETE',\n            url: `${basePath}/${storeId}/staffs/${staffId}`,\n        });\n\n        return response.data;\n    },\n};\n\nexport default staffsApi;\n"]},"metadata":{},"sourceType":"module"}