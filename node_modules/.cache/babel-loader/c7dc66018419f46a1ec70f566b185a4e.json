{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { InventoryContext } from '../context';\nexport const useStocks = () => {\n  _s();\n\n  const {\n    stocks,\n    page,\n    filter,\n    setStocks,\n    setFilter,\n    setPage\n  } = useContext(InventoryContext);\n\n  const quantityChange = ({\n    _id,\n    quantity\n  }) => {\n    let newStocks = stocks.map(item => {\n      if (item._id === _id) return { ...item,\n        quantity\n      };\n      return item;\n    });\n    setStocks(newStocks);\n  };\n\n  return {\n    stocks,\n    page,\n    filter,\n    setStocks,\n    setFilter,\n    setPage,\n    quantityChange\n  };\n};\n\n_s(useStocks, \"9TVTMW5x8yCIyGrIkwUlxkDjM1g=\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/StoreClient/src/pages/product/variant-detail/inventory-quantity/hooks/stocks.ts"],"names":["useContext","InventoryContext","useStocks","stocks","page","filter","setStocks","setFilter","setPage","quantityChange","_id","quantity","newStocks","map","item"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA;AAA9C,MAA0DR,UAAU,CAACC,gBAAD,CAA1E;;AAEA,QAAMQ,cAAc,GAAG,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAA0D;AAC7E,QAAIC,SAAS,GAAGT,MAAM,CAACU,GAAP,CAAYC,IAAD,IAAkB;AACzC,UAAIA,IAAI,CAACJ,GAAL,KAAaA,GAAjB,EAAsB,OAAO,EAAE,GAAGI,IAAL;AAAWH,QAAAA;AAAX,OAAP;AAEtB,aAAOG,IAAP;AACH,KAJe,CAAhB;AAMAR,IAAAA,SAAS,CAACM,SAAD,CAAT;AACH,GARD;;AAUA,SAAO;AACHT,IAAAA,MADG;AAEHC,IAAAA,IAFG;AAGHC,IAAAA,MAHG;AAIHC,IAAAA,SAJG;AAKHC,IAAAA,SALG;AAMHC,IAAAA,OANG;AAOHC,IAAAA;AAPG,GAAP;AASH,CAtBM;;GAAMP,S","sourcesContent":["import { useContext } from 'react';\nimport { InventoryContext } from '../context';\nimport { IStock } from '../../../../../models';\n\nexport const useStocks = () => {\n    const { stocks, page, filter, setStocks, setFilter, setPage } = useContext(InventoryContext);\n\n    const quantityChange = ({ _id, quantity }: { _id: string; quantity: number }) => {\n        let newStocks = stocks.map((item: IStock) => {\n            if (item._id === _id) return { ...item, quantity };\n\n            return item;\n        });\n\n        setStocks(newStocks);\n    };\n\n    return {\n        stocks,\n        page,\n        filter,\n        setStocks,\n        setFilter,\n        setPage,\n        quantityChange,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}